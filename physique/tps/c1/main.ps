%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 Copyright 2021 Radical Eye Software
%%Title: main.dvi
%%CreationDate: Mon Feb  6 06:36:05 2023
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: TeXGyreSchola-Regular TeXGyreSchola-Italic CMMI7 CMR10
%%+ TeXGyreSchola-Bold CMR7 CMSY7 CMMI10 CMR8 CMSY10 CMEX10 CMR5 CMMI9
%%+ CMR9 CMSY9 CMR6 CMEX9 CMBX12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o main.ps main.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2023.02.06:0736
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 23 2020-09-18 06:29:04Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.32, 2020/09/18
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%

revision 952 gt 
{
  systemdict /.setalphaisshape known not
  {
    (\n\n%%%% WARNING: Transparency operations ignored - need to use -dALLOWPSTRANSPARENCY\n\n) print flush
    /.pushpdf14devicefilter {pop} bind def
    /.begintransparencygroup {pop pop pop pop pop} bind def
    /.endtransparencygroup {} bind def
    /.poppdf14devicefilter {} bind def
    /.setfillconstantalpha {pop} bind def
    /.setstrokeconstantalpha {pop} bind def
    /PageUsesTransparency false def
  }
  {
    systemdict /.setopacityalpha known not 
      { systemdict /.setfillconstantalpha known { /.setopacityalpha /.setfillconstantalpha load def } { /.setopacityalpha { pop } def } ifelse } if
    systemdict /.setblendmode known not { /.setblendmode { pop } def } if
    systemdict /.setshapealpha known not 
      { systemdict /.setstrokeconstantalpha known { /.setshapealpha {dup .setfillconstantalpha .setstrokeconstantalpha true .setalphaisshape } def } { /.setshapealpha { pop } def } ifelse } if
  } ifelse
}
{
  systemdict /.setopacityalpha known not 
  { 
    (\n\n%%%% WARNING: Transparency operations ignored - need to use -dNOSAFER\n\n) print flush
    /.setopacityalpha { pop } bind def 
    /.setshapealpha { pop } bind def 
  } if
} ifelse

%%<bool> .setalphaisshape -
%%    If true, the values set by setstrokeconstantalpha and setfillconstantalpha are interpreted as shape values. The initial value of the AIS flag is false. 

%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/addCoors { 
  3 -1 roll 		% xA xB yB yA
  add			% xA xB yB+yA
  3 1 roll 		% yB+yA xA xB
  add			% yB+yA xA+xB
  exch                  % xA+xB yA+yB
} def
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (original)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul         %	\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { i dx mul dup xGridOffset add y0 moveto % draw the lines
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  /i x1 def 
  GridDX div ceiling cvi 
  { i dx mul GridDX mul dup xGridOffset add y0 moveto % plot the labels
    b 0 gt 
      { gsave c i GridDX mul a cvs dup stringwidth pop /z2 ED  
        w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse exch GridDX div z2 2 div sub exch 
        rmoveto show grestore } if 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  /i y1 def 
  GridDY div ceiling cvi
  { newpath i dy mul GridDY mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i GridDY mul a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse GridDY div b 2 div sub
      rmoveto show grestore } if 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 4 2020-06-09 08:32:19Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 4 2020-06-09 08:32:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2021 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2018/12/16 $
% Version         : 0.65 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: q-ec-sc.enc 0 0
% This file belongs to the TeX Gyre collection of fonts. The work
% is released under the GUST Font License. See the respective
% MANIFEST*.txt and README*.txt files for the details.
% For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
%
% NOTE: all fonts of the TeX Gyre family share EXACTLY THE SAME
%       *.enc files.
/encqecsc[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi.sc
/dotlessj.sc
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/uni2423
/exclam
/quotedbl
/numbersign
/dollar.oldstyle
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a.sc
/b.sc
/c.sc
/d.sc
/e.sc
/f.sc
/g.sc
/h.sc
/i.sc
/j.sc
/k.sc
/l.sc
/m.sc
/n.sc
/o.sc
/p.sc
/q.sc
/r.sc
/s.sc
/t.sc
/u.sc
/v.sc
/w.sc
/x.sc
/y.sc
/z.sc
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat.sc
/section
/abreve.sc
/aogonek.sc
/cacute.sc
/ccaron.sc
/dcaron.sc
/ecaron.sc
/eogonek.sc
/gbreve.sc
/lacute.sc
/lcaron.sc
/lslash.sc
/nacute.sc
/ncaron.sc
/eng.sc
/ohungarumlaut.sc
/racute.sc
/rcaron.sc
/sacute.sc
/scaron.sc
/scedilla.sc
/tcaron.sc
/tcedilla.sc
/uhungarumlaut.sc
/uring.sc
/ydieresis.sc
/zacute.sc
/zcaron.sc
/zdotaccent.sc
/ij.sc
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave.sc
/aacute.sc
/acircumflex.sc
/atilde.sc
/adieresis.sc
/aring.sc
/ae.sc
/ccedilla.sc
/egrave.sc
/eacute.sc
/ecircumflex.sc
/edieresis.sc
/igrave.sc
/iacute.sc
/icircumflex.sc
/idieresis.sc
/eth.sc
/ntilde.sc
/ograve.sc
/oacute.sc
/ocircumflex.sc
/otilde.sc
/odieresis.sc
/oe.sc
/oslash.sc
/ugrave.sc
/uacute.sc
/ucircumflex.sc
/udieresis.sc
/yacute.sc
/thorn.sc
/germandbls.sc
] def

%%EndProcSet
%%BeginProcSet: q-ec.enc 0 0
% This file belongs to the TeX Gyre collection of fonts. The work
% is released under the GUST Font License. See the respective
% MANIFEST*.txt and README*.txt files for the details.
% For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
%
% NOTE: all fonts of the TeX Gyre family share EXACTLY THE SAME
%       *.enc files.
/encqec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: q-ts1.enc 0 0
% This file belongs to the TeX Gyre collection of fonts. The work
% is released under the GUST Font License. See the respective
% MANIFEST*.txt and README*.txt files for the details.
% For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
%
% NOTE: all fonts of the TeX Gyre family share EXACTLY THE SAME
%       *.enc files.
/encqts1[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase.ts1
/.notdef
/.notdef
/.notdef
/.notdef
/quotedblbase.ts1
/.notdef
/.notdef
/twelveudash
/threequartersemdash
/cwmcapital
/arrowleft
/arrowright
/tieaccentlowercase
/tieaccentcapital
/tieaccentlowercase.new
/tieaccentcapital.new
/.notdef
/cwmascender
/blanksymbol
/.notdef
/.notdef
/.notdef
/dollar
/.notdef
/.notdef
/quotesingle.ts1
/ringhalfleft
/ringhalfright
/asteriskmath
/.notdef
/comma
/hyphendbl
/period
/fraction
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/.notdef
/.notdef
/angleleft
/minus
/angleright
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/mho
/.notdef
/bigcircle
/.notdef
/Orogate
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/ohm
/.notdef
/.notdef
/.notdef
/dblbracketleft
/.notdef
/dblbracketright
/arrowup
/arrowdown
/grave.ts1
/.notdef
/born
/divorced
/died
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/leaf
/married
/musicalnote
/.notdef
/.notdef
/orogate
/.notdef
/longs
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/tildelow
/hyphendbl.alt
/breve.ts1
/caron.ts1
/hungarumlaut.ts1
/dblgrave.ts1
/dagger
/daggerdbl
/dblverticalbar
/perthousand
/bullet
/centigrade
/dollar.oldstyle
/cent.oldstyle
/florin
/colonmonetary
/won
/naira
/guarani
/peso
/lira
/recipe
/interrobang
/gnaborretni
/dong
/trademark
/permyriad
/paragraph.alt
/baht
/numero
/discount
/estimated
/openbullet
/servicemark
/quillbracketleft
/quillbracketright
/cent
/sterling
/currency
/yen
/brokenbar
/section
/dieresis.ts1
/copyright
/ordfeminine
/copyleft
/logicalnot
/published
/registered
/macron.ts1
/degree
/plusminus
/two.superior
/three.superior
/acute.ts1
/mu
/paragraph
/periodcentered
/referencemark
/one.superior
/ordmasculine
/radical
/onequarter
/onehalf
/threequarters
/Euro
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/multiply
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/divide
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setblendmode where {pop} {/.setblendmode{pop}def} ifelse /.setfillconstantalpha
where {pop /.setopacityalpha {.setfillconstantalpha} def} {/.setopacityalpha
where {pop} {/.setopacityalpha {pop} def} ifelse} ifelse /.pgfsetfillopacityalpha{/pgffoa
exch def /.setfillconstantalpha where {pop pgffoa .setfillconstantalpha}
{/pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath
fill grestore newpath}bind def /pgfeofill{gsave pgffoa .setopacityalpha
eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}
ifelse} bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /.setstrokeconstantalpha
where {pop pgfsoa .setstrokeconstantalpha} {/pgfstr{gsave pgfsoa .setopacityalpha
stroke grestore newpath}bind def} ifelse}bind def /pgffoa 1 def /pgfsoa
1 def /.pushpdf14devicefilter where {pop [userdict /bop-hook known
{userdict /bop-hook get aload pop} if {0 .pushpdf14devicefilter} aload
pop] cvx userdict exch /bop-hook exch put [userdict /eop-hook known
{userdict /eop-hook get aload pop} if {.poppdf14devicefilter} aload
pop] cvx userdict exch /eop-hook exch put} if systemdict /pdfmark known
not {userdict /pdfmark systemdict /cleartomark get put} if end

  /pgfwritesamplecmyk { 4 index 0 5 index pgfcheckcolorrange 255 mul
round cvi put 4 index 1 4 index pgfcheckcolorrange 255 mul round cvi
put 4 index 2 3 index pgfcheckcolorrange 255 mul round cvi put 4 index
3 2 index pgfcheckcolorrange 255 mul round cvi put pop pop pop pop
} bind def /pgfwritesamplergb { 3 index 0 4 index pgfcheckcolorrange
255 mul round cvi put 3 index 1 3 index pgfcheckcolorrange 255 mul
round cvi put 3 index 2 2 index pgfcheckcolorrange 255 mul round cvi
put pop pop pop } bind def /pgfwritesamplegray { pgfcheckcolorrange
16777215 mul round cvi 1 index 0 2 index -16 bitshift put 1 index 1
2 index 65535 and -8 bitshift put 1 index 2 2 index 255 and put pop
} bind def /pgfcheckcolorrange { dup 0.0 lt {pop 0.0} if dup 1.0 gt
{pop 1.0} if } bind def /pgfchanneldepthcmyk 8 def /pgfchanneldepthrgb
8 def /pgfchanneldepthgray 24 def /pgfcolorsamplecmyk 4 string def
/pgfcolorsamplergb 3 string def /pgfcolorsamplegray 3 string def /pgfrangecmyk
[0 1 0 1 0 1 0 1] def /pgfrangergb [0 1 0 1 0 1] def /pgfrangegray
[0 1] def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
dup 112 /p put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AAE0FFD5C119D11E5D13743E28D843B0F2EE315A2ED05A510CE53A2D06A7
0C076D4B6BC2B6A928553E7F0FD472760167DB486A777259FA74245EE37D0125
47314DEE4B29E5D22180BDB1BDA7D33406FD340DC3991F50800BDC90F7678EF1
1064986DDA53A77FBE2EDD38E20C41EF86CD50E8EC167344A3F3B3C3BD83CD80
87BE64CAB70004E636FCC0B60C1E624A19A63D8B3B27EE2B6FD0FFDC310AC6FD
BC56E92FDE53A26F13B6BEF922905F5F23BB19562EF02E9E16DE8D008A4CCC06
0F6A17D75EC616803DB057B0EE3ECBFF843FDE67C670863FE1B9BE0C4867C3A4
E2520DF831AE78D0794D3CB0635E7789D66A526869BCD56A4DE3C564378E5BAA
08DF6C70823BE03E0883F85A396C040E242E671EEC725AE1F0196FBC50D9BE96
CC81A4763414528771F01E2959D098A25F983E7D4947D6B368D8354C2A906392
182280F68EFC80987AAC768DB114C420C66FC30DAC1CDAEB51605FE2779F97AA
66F64E0B3D6FA552C715970C58C60826157F9EFFCA70809A7CBCF5F69FB77C23
A383A478F1E371F4347BE3C525DEC7304D821FDDA1FE19459C1680FC87526A37
CCC2E637C433CA833CF5E9A7F2753F4D4A1E5328ED0327BC8886A9F9E147088C
140BCE98F53CC50663001637D06B0FA0307190BE92D4EDC366D1A9EA389DD5D6
D08AF7CC34631B9121509EA5E219C649D4ACB911033CBD4BFB0FD334637B7F62
64271965A655DD5397BAC114AB9B8D82A1CF39A4F5AC815E01542FEECFF5A5CC
FD83E7A96D0B1E04435728C4C9B3CD01910D4E29C7555AEB71CBE8FEC84E98E6
69DD91D8EACCA112E3A95E24B7DF1119E1AE2E51B394E949C796A95D15900A3E
5B2F0604C52DD7CC37500BE3445EC76770A6100A45EB4AD9AE747BFAB56BA63C
386326D3AC606D0F2409663C14043820D08EEED07A9FF0363061C545AE69EE97
7D84CE7B15EA415AB46A9EE88F24627BC51BCA4EB6F1747ABD74DE8D82273A93
FFB7F17D22F0AEEB47073E50F7AF33F402CC9E89975593
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX9
%!PS-AdobeFont-1.0: CMEX9 003.002
%%Title: CMEX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX9 known{/CMEX9 findfont dup/UniqueID known{dup
/UniqueID get 5092765 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX9 def
/FontBBox {-25 -2958 1495 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX9.) readonly def
/FullName (CMEX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB69434BD2F5E56C8FF46EC332DB0
76984939803A4D2E4F7065326BC983B6DC4219499435B304C1AE83C8A14C4085
131D1CB66E24EF3AECA881EB3CAFBD7CC6E70F905DF2FF583BF11F2E5A674AF9
11C625E782E1503243619CCD6B1222599F709EC8E7657B1053FEE4D83E29B295
494CE2255E9D555D71DACD865C95E1A3ACC8D19A468D316142A854F452DE76EC
B45C35C92BCCA844FD24BF5D5A43BED6C829FAC12BEC9C216414BA7783DB2747
0B114774A6508C9D617C38A99EB5DCC26758D9D55A563F8240143878C5C49256
AD489CE0A01657DE0051A2E845EFA4EB61043270B4A8E5E0676E90149CAB94D5
AAA65B9198DF0EC8439A194D5CC14FB65FF3BC2D67707BAA7B23484DA100F9DA
DB0610AF3AD273DB18B69EC987D6D9A0BF699BBBEA34A0AF1AE401429DA0C85B
AE89B1AB922D16074CE2208BA2C3F88AE84F7BD87F4F23EE64789BB62814BFD3
946734BDD1586BBD77254160BDA350FCC2C30B7F6B6AE44B928191DD564693B1
29D840BF729843DA6A707EA375F7541D398527AA15017B3B625000ADAE91FCD5
B749C01D15B2A8C60E3E4D97D5C454974BFB02CC706122041709F96659FA31D7
C27D613F0B45ED42ECEA2090986FD97A3AD736C9310B7FBBB8B6FDF7052B9941
A609E7F7EBC0B652B6FAC06337ACC5A1D1260454F16F5EC6C967D5B7402600FB
546B55667896C188F50BDDA2E195EC55C0A7B48D6A025845BCBB4B567BB19946
69191A766E28660A8DC4A15C8022948207DDE6E7451DDDED8376E52631E4F0D6
B947E227F99E03605688E5E28EDFF6E8033E25FBE8F6A86D5A26B2937FF48C14
BD9AC06DEB234FD1669C8F3EE9B8BF3E17139E08C308A3BB0ED0AAC81291D8E4
2C1134A3314BCC0D93D513E3EC0D91C45C05ACD19994AB285B896334721B8C42
420BF74A5CFE7CBD243D3DDB163362132A0285C280277B4C60D9BFC3D40944A3
943697BD335C27F16ED870DABE54DDDA4BB5C3868DA4CC1C0DDCB50826700ED9
9DF963A75151C5BCDEEDCAF2576E0E21288D194E540B422BC03B62CFD137E732
D0660236BEA09052A292CDC218E48181DEE1BEC6548C828AF0FBCCF10BDCD4F8
B71AAD95C5CF688815B9BF856FCDBBF769FD395885A88F4A13FC7B9440BDE7D1
90324ECFF82AD30375BF19834A5CDCE28FFEC0FEFE45ABF372FA5C6F03D972C7
AB3BC52C7E1C1783D6F80155B3A5BD54F19E6B3FF7155A6DD083438D0EA7AE2F
F5BD3F1C0A13438F4C42B3379D2868D688C14DF6202B5006BE89F09FEBC4EE0A
CCC50B10D3F9E56CE282FBA763D6F46CD62A860CA0744267D336833173C93951
87995BAD6E789CBABD53DBAD179F29DBFE73E9E28FB75ABC0C3014A72D9C3CE0
A80412E418D69741397C867907C795A20D45306EDCF032DA7A4A248C8FFA0189
2552A041D06D13826860886B2FFC1361EEADCD6BE3710CD640E881B2811E81A7
45BE7BF836AFDBC85E5AE36274D19BB1A12083A35BC231D6C1D98F8470ECDF8D
8AFF93893D5C0557152DB776FA755663D4E1A7659DD7D7206305378297175CE0
444B24650996FFAAEF4A23052AA4E77553F992DF1D6819C195B0B962F5571346
7CC036EE1D527B68965DC2EED66818821AD02BDB5A27B3129C43986C3928E391
BA170B1B161818BB2E2529024B721839DB116A174DCE89F92FAF4DC83033434F
C96D97A6202D48E7FADD753825159E50FD051D7D268C5807225D52D161569EE7
F94A99E78DB76DF5860227F5B6ECB1FA255E162C3D2AF6D96099CF3286E96DE5
31D324EB92FBDCE0FAFC586FECDA5D9376D40C9B1A43BF1D52D3D54BA06745AB
58E755921509C3335F72DBB2366726C4CB688000C1D6BCE706A3DE168DD0D5B7
45BF139E205273B248F5C4E3844D4CD211E6208A2BBDBCD88AA8DABCE4FD0594
151AAB58FAF716298DDFFA7A97C02AC060A114FDB3A0FA6EF7B8F1CD8606BE46
8B7DAC1E72788C555BF9B5701865B263725AF314DB471239363AA8437EF51206
2181B31E56C30103126582F77EFC23CD8F37DE389C16333F6C4F78699D187746
EF94B8A9BF312AC2ECE4F23F9A7AA0487D09CBA71C11241155AFDA73BC914425
4943E10468A243ECDBC5E70A06A00529EC2DF656F21EC7522BF41EF0F8BF7D35
E0E76D6589E77900943C06AE933DBE3668099BA91C38C19E945BDDBFA4FA5C49
ECDC4F183CB9189609F753DBE5D5B1AD7FA8BB9E28E3BF72DE2C604D88F43552
ED0C3D02277BEDAB0DB5B7A9CCABC8932006E8D44300E748C149C08D41F86608
F980E68813988906B7A4C5436CA1C10E54EF608945632E82B22021193A51342F
5530D708792FCE9BEEB224D03DEA481107BAFAFEA271D16C3E8B89A481933D27
03A044FB481748F2C7CCDD0562AC53F9AC2A9423FB0C7DDDE764022EEC181FC1
1EEED102ED0F29A61D17004FACE1A1CBDB8994E2AC2F88DA74B173C45362EBBA
597EA55D327886FCAB9221CE187D9589BB795BAA03F931CBF86DE3E8668CE8E0
F8FD3B098CFE2ABA2099BFF8DA83E54E9996D2DC42E7D9416DC2D7FCBA3A0DDC
B8CF9B37F7EB7AAAA6AD85297B042900688BEDB470E6E38CE0929AD5176A6C7F
059174C1123F3AFB6FE77E4CBA0394C9A305FBC8FC817BFA6F97D530C77AFBEA
29CA42B9551906D7187398AFDABD2EE9B06243E95BB467EC8E0D895474C9C455
1CEE93868A6412C4BEFF0BD0272BA95DDCC0369AF8160EC2FE1C60F5E535D25F
B0632C01BF40867E507E7BDD03BCC3BC21337FA3B974244E5D4591437FDFB185
78F0176F5DEA5803EAE72E013AA7FFE07C40EB971DD7937DFE111BBC33F4F8D4
5504AA54C414D94A9FA908B7B5356B913CA1AC0E71BD21E3CE550226FC5ED00A
86C05BAB4571AF93066C4F4612CC3C51BEA3F241EAE68A79284DB837F5B1904E
B642AA64A984EFB35F870912ED178F53DBAEA4A0E6E116256930BF507C01DE54
8BB70AE4F99C5639BE4F065C51C95D3C97512E6C7E2E796E90CC540B09DF02A5
CCD2694E35C075BA264B1C1C83CBDAFCA48807A008B1873273AA1028923AABF6
6660CE500CF174183CB593014D8A272EBCF3A09133603CFFEF43A6FF059BCE52
5BF232A5E067BADBAE7D90A56392F6B5922443B8A14DE64434A0018E21C1CC89
CD5D85A03022B4D80FC1C3C8740140DD6793C65319FC3E906C7CB714DB22068C
A66714E765A17F446CBDC8DBEFFD8A8E284DBAA179C9DD9BD9FD0A1DCEE171D9
D5E47F8246FBBBDEEA159301B189724C21E5318D1B73BADDEBD21FCB6E8DBCBA
4872FB568BEEFFC852FC84255B5014DB80589DC29AF1EDA5A57309FA19167514
967F9F9D5DE56CA3E66A3D937C041E83C29AC39C357667715A824ABC7A39F398
60C43B9ABB86F0CB56F9CDC50B6CADBA7938D020CDD81D1B59430611632E2368
E7483D596A272D1D99B5CDF4BA2B66C9F50625ACFF60905652C251B724FF8C68
D45C0174D12B87E95E7D480DADA7EF001F12A1B3528ADEFC3052E7CBAE406533
32CE0D5F96B7A2DF24ED4B5C6FB220E751257161A0F095017D90E95F1DCB6B5B
BF0413399B722A309C1155A0A9F2903CBB7F192149DB130BC24E5C41056FC750
1E83C4E6EE02EA45465598DCF7C4892D00F14A954A4AA6C2E616D39F09BDEA3D
27F0BABE6CC9D417A17D3EB2C138A842F1E53B30F58F05C9C77F3A0CD8B3ED6E
5F67D05F551E95D9D1133D33C9F8CF57839C998E204A1FD39F24EAA20FB6B3D4
9FF31D4D1826745AD4D3E95EEF71DD2D4E6300C42BA9316F1560E2D9A094007E
79C04433D225BFDFDEA8F2E6D42C456B722F80EF4223ABB38991344ED1C78CBD
830400A52BD0F2253E20A30122A842971BE77794DA8CC6290EAFEC44E3273E10
54A6A2AE4E8F8072FF4A37265CC0C1FC4F773190B439DC006D769F3089928C4B
DFD6A6012A39A0C8E997599EA3F4A73FF32C011819711BC6FBC4B6260A02DC29
7348188F3B7EF0BDEBB8EAFF7347A3023C478F446CE904FC25AA2DDA51D976DB
584A2ACD393B9E9C601AF9DA9629DE5C003F742AFE6D414A9BF1377D823B465C
CCCD4A7D7D108A9D639C6BBC15844D9CF1AB8B8B2260AE601E7E9F7394E212B2
693B47C8AB94612A779255A9FD9685585B0D1A7FB8B7E586197426517B122055
CF9A5207EEF696E1B881E64754AFDF0C60838783E6BD49D470FD0553649DB0FF
7B8CC86CF80D05B0701580E75D874515C4C8A7823CE924E9E7ADF1C97085A6CE
24EE43E7969701EE5D3E5F07F59492A9A946F300DD83F9FBA4B8CDE73C12C563
0691D30B57F253DB008E4595AE2D472376E88E30246642031DFF3132F971D172
19F4B6C6F87303ABE5E1B4CF1AE504D1E4B5BF5C86E232B42304840A9BB34E73
BA98A3186A01B72D98C92032180DCBD3A8715016557108B939293E23697D81C3
FEBC37582B7F7AA541C220DD5D93E555AC54D7D277AD6DE29158CE8B89E29C67
A305FD1F200B5ED02588CC1E0CCC93F9C8CED113066C401E1FCB4EDFB49C9224
0FDD03519559B710C046DF2FD60DFE4029FD9505867321D98507F0523E93739A
81A9E72430D30D0585977DD323CE222D408E4E2DDA7FBFD91A1EE1F75B530C6C
A5F6ABA3BB9B6CF94C29837A4186EA933C7BA60AEA9CF1F7F632F5F561A4CB79
CA533B32069D8A8D2DBD8089F295FB7E0631ACF087B7E777BF77EC394DEE5BE3
B69A27B122339829F3593ED92F42FF2721840133DD96450BD9DBBCF984B3383B
DF60B5C6603EA17DD5A3D0BBA5C61E1A7737E5F7719E2CAF59EEB87293BBC72C
0BE5F5A97CF28FD8CE19177B37E8C223549F926B6A979F89C06FEBFE86178B82
44F429C3C3C1F6506CED46DE0774ED12D7BF94756D38A8B1801B086CE71FBD37
8C17A639A05280033FB5A7B8770A953C0CCB14B386D336C1CAE1CAFEEECCAA1C
936164553CFA7ADC9E540353BC77C57AF8F96CD0FB7C41D5265011C86FD66BA7
993FE45C8BD006B9BF0CFCD721A80368A1C4DD30EE15EE526D6F511DD5B42A75
9C53639E5CD73845FCA08B21A3EF803C0DD4DC61598CC3446AE68FD548B9F5E3
94B6A56EF1D7BDDAED84F8213EB7DCC84E699BD985ED8E5CFF2C729C02A925D8
B7906366BD4520AF1B56A6D16D5B8D1A9B9AA1EDD2CCD597BF963F42611D48E8
D2B4F733DAF0336890511388ADFC1A8801D25944E95BB859DC761B72B9E99A53
584DB945DEB895BE8B6CD42F39D9568CCE9F89781614437088584A57EF884C63
12FBD3E7874C42F97E8E2DEE2130ABF60DD60A3D84224AF5F6BC06F1DE598843
C9016FCA08B9A343FC5638A5F849C84B248C3BD487895F602268D3E6F5EE8AFD
0016BEAFE2901B570E75465A86AA357D15EF02EE39D18AA90D784DD117CC911D
47BCCD7B6221F4A0741BDCF8BF30EBA66596F2164C5C9B9BB1E013C9F92D0E26
A8C82CE7E6EEB0870BB2A6D09BF336CC2AC4B35D740403A60C31984F11B0D4E9
8A8B95DCF96A7BC07C1FF7510EA6B709A2FAF612CDF75B71C1E471ECF2650192
4643D9FCCDB1FDEC4FD158AE04768C099C7CC1FA1F693F884E04522E179C9E63
778D704419A3EA4217A85AD8E70B6BF53F87430E511C3FBDEC1909CB52912EFC
3E645F84680F4750762BC29CDEE4D355E3F2DA698F474D585E4068CE0BA9C253
89E76F438987B389480A7CB39CBD601D9A2A5640EE3894A345548F18269D275B
D43F757712E746E7EA971055FC27159818DB2E464628E362EEA21A9C5250AD98
58DB14F128F2C1394D38F5D12417141DF703A471BE813269CDB23E3F8AAE820C
65A72B14E8663ED16AE4BB7B979545FA7A3EA413E6435E0BAC5F16EDA64F5AC4
5B3B4188BACE769342E1B5405A3D87A3E8D337E8C6BB74C0FBAE053BFBC86746
3ACA563C0B70FE33B38C5F5C0D704B90D8A081F5A21ECDFE0C800CCFE29086AC
1AFD3E9F3A37C62656182F8FA82BDC9B6D818FBC9377271CB5F4F60E2AA1422B
4A52A35434D55740380F28026DFC190C9FB8F2D60A87E9D6C2FB65E3B745EBED
917DCC5CD77BEEA69D2C9698A0A2BB3FDCA2C338B1D4FD47B06FE48A1B643DCB
AEFEE774A7636F7D29FDB77B8DFC56FB7769521857ACE49C2A46A19EE83FA941
F1F79A39384D9C0C69F3AB2E22B142FAD9F6EC6F4D9FDE36E12BD766206EDAD7
91BBC76CC9F6EBD6668BB435501709CBE1CF23C32C5C2A877B57445EB3B879D2
FC850D78BCB7E116C1155981F8B1B7225FB495E0927B42DE27F16AA7DF593762
67A6AD250B378667E70198B04B040132AEB3747E89F9F2A213AC9D008558D32A
23DA61B5AB7D18DF90C68BF29FF638630D5E69872C3B7D905182BA65661CF042
EBD958B8648F5B650425B86336F3F57ADC4C3A02CAAC08E87DB5EBF6DE8C6E40
CEE8B7138105873B76925E5F08EB999C4A24E1F3EBEFD79B17D31BC0E2D12C4C
52708F03EA1F6859B3F91B885F76E6EE97D3A813F2635231F9C93D642EBBF666
EDE5B814BC413C5B85E31DB99EC2A1D6861801C7ADA21BFE167441B26E1E2BDC
6BBE9A438B41B5E3A7006637708163CF0E95AA0C47C15DDA87893AC37C3130E4
81F084FA674E69515E490C819676C2E4FB666A4125C7677FEB8C32299E6751AE
0ED2F1CB6AEDC00E0F8D8EEDC6C735A5CB813F1DCC95BD568030E63AD7DC317C
6F61B99A39C65B93D0828817A1079F40909A01A2F11A01FA256D2C57F7A28BFF
82D4E3E4CE220F270536A6424468A2A55C567AF75363C7BBE849BA0547D3867F
34A50839A7061287272464F0C5CA47C965A265E044A366CA620896AD19EE956A
8049A30C2B93FA109424AD69F8C369379C5B6DC1C695DB16E43912308DE3E3F3
18F592F0C2559951F9B1ED4D9B66D0F691BE22D45361D74A216C4D91B72AC393
28A28481B8377D8A20E2DCBB87FEAAA6C47861D12AB22FE1DE62CC65798D5614
58AFBBDE546B5712A69F199C1D84CC20281C24246CFBE9B2DAF3A9DCDBA4E5D1
BA82CB7082E3F560522D4947B51182431BBC02250648D7D2B771FFE8B272F269
14D4A76B275B1DB785C374A227624FC944DD8E80A0316EFAC25B7CB975195EC8
B248452D9D09C2B304FB2F5D416BB6387C2B0EB06223AD089BB9BF21B6079B1F
22DFF38A0E248B9733CF97D23214A30167C32E63803515168556062D710FE258
C6E3AD9D3DCB888950940F7E91F5B5D25C03B5A25AD033C8443DA01914A20EA8
F2E6CAFA15F6E10D5645DB2EEF7D627BB5DA85DA1DD2009CBFF9D2DD159FF95C
211360B517EFA263CFD0D2368C13381D3BBF877CA98DC6ACCA103B099DC2F3FA
B7A6C1A01CEA32F205716B83CCCFD20C8ED17A3D778B36C1F28C88B7151637D8
ACA1CD904829034DE2B388CCBE8789A647604825949FAB2921C78C670DD741AE
E988968EF346E13CE3021D1A0DABB13746EE4D782630708F40346358D1E71DCE
A3889ADAED210ACA14904C4F06EF1F86542C5ABF455201647355CD7AE4106036
F1B7EE78A25934E8D077D323F961A71FA3CCCDF5A2C468B48D08BE2763346935
0AE028DB5DC32E84F6D20CDCC34837AE20D6FBE559C10A65DD5ACF4BD1AF9BD0
2D5280D6763618A3803F4777CB8D89F7F96B93EC116373B47C98A95D9C332C38
4DD9CBC706C928A414FA1FCC656C3D91023125015202411418DBAEAE0472AE86
C7CEF889388A03B9BADC361256A312AC34F3A4D860D8913EC169F62D3F454A67
DCD2AA7A2527B1C5D97A19D5EC5C5922AAE98FDE31F2FD9B555831DA4D587D46
A70E3AB75729A583A918D339C1DF393EEF7F5EAD762857B8ACEEF8D19D82A278
55F1FD3FF1BC97F886487194107C63BFA0891D8928ACE9FDD235AEA109579843
25F567F6A9169DBF0E89AAAC9139F01F5B77694E373B1F69A6CD5A298B1191F0
62345FCD91ED6EEAF244F4FD21CC27FA3A36087428AF612720960FCC6D8C5687
ADB98C2601E6F05EBFA6CD6FF0EC2E79409C4E44DF8558FCD43FD1903A76CC84
4EE5E9667EA2EF12E9D3C7243AC0FC9659FE65ADC9E4F6E4FDB9D0A5B7C5A4AA
4948547274C62529B437E00D4CB96F9B05C5F973D7580C9A30CAC44D9B99935F
67F5F11A6243591B46B86F72169AD42020B098136925E81EC095F6F82B1BE6D3
B4758946D28E447D24AED8FACC83AB67D8E6D8097F215CA9403B8DF3CC05CD9F
4B922D8E0545A9F0D83274A51585FCBD89D2FFC52E6836839E77F6AB7F6E5D8A
3BE4BB57C8FC3E411A7172E2A32A3A600289DB03891C9EB83208953854128507
587C173E49E846081CF1E3607563F2ACAE22D03453689A4CEB2143BC4DEABC54
84042838B22B333411AFBFC6D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 72 /H put
dup 79 /O put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F6DB0D8239EF8B8D233DCF83C12C4F76EB951E69F5F24D03D0568C53E2E9A82
E4494101BEC6A45549EC23DB8597361619CA03EBE2F1EEE51A5BEA7FB9C550C7
8230F9DE2484D0B292DE482C8FB5537B05712ABEB67B7D62B6143DB7A1C8AF41
206F504F14DD921D63C229C8B7CE8F110BC4864D18C4CD499B20534D33C82222
6FC199D261127DE7E6BE6909BA17189DF98F283DA6EFB0DCABC645DB288C6C3B
3C1AB46BFCDDA190E9E93C8DF81F764359705D20D906FC7C9E269DF5AD446380
59742225F177F11CD02925F5FAB55B0D23D72E780E254A13EEDC22081E65320B
CFCC7AAE822A4A8318036949CDB4BECE0171484C6B5578C35B52438286A4519C
93639A20BB9B1FCFA982D1C6D7B1B80DB129B84D135959A86628C4F4CFB42C3D
379DDF29FF5EA91282864CFA726ABF7D71E5BF40C124E3B8B52E6A27C2CA6AD3
60E7DF52207AE36200FDB85172EB0CD9BCB2F403591341EE1E896557C505DFE9
20352BCF5B323B5D04504BFE7783AFDE4BFF6708AE6A7AD67DFFE428454930B1
315A861F3EEB31837D4A57E59488331AA0F16B17EF1AB2AFAB9AD19E42B806DF
090543A8C4A9273D6FD7CBF75553DCF603F9032D2CB3456A9A592180AC274E92
BEDC8689DC2DA7AE7BB131BAAE689AC124E71C819D54E20B73A9EFFD98892594
66D810114DD8835BFA44AED70EA59FABA7035D5E33269DF29D437C274CFE9BCE
034735006C78A570781BAA1B0E8ADA88550F04D217A35BA0EF2D75DD1E1BEC48
6B1C6A1C2D88F515EEF3F26D060A682EC7F5146115B9145BDE062BDA6C6B20A7
EB9ACA707ABA12E732E10F4AFDAC1A9FC6DE22901CC1C17F460B1717E346DD99
2789FDD9B4799653AFE45F45B60108BA505AAC88B3F9E26E2981382FD093FDD9
F300EBCC14EC9F01D5F76A739FC4EDECD512DE6E4CDA3C6DC3BDBF9C1B790964
6BE64786E06A3411BF56520810F9EE597409630106BDEFB577B4E5546A70A2E7
9EA1B764256E03BA00D787E92C3D08371FEAE969F7443786FF3AF6E7FBE8EB48
76FA6FD1CC1FEAB156089E530870E82483500309118412DF1799289C68432A43
B96CB91D0B60DBC75B2C55E2FB415B921100A77D3B97190B8621A2B5D0B94B13
F3A717700CE3E1FC2CCBFCB79818A6D6602513147A9BE181E0B899DD2C788099
616104D8A2CC2E9D1BD8B96D2D88E2333095ABA52519E283A3EA1963AF2D71BA
9191FB3C98E1AB271BE57C1D16C7D6AFCA67616593FC2D51BE64AA6FC07A0EC1
BB1F1116D9975FA6EDD55FBD311EECB4798F41EFF82F312D1DB8E23200EABB0F
AE1212A5E18616E891BB01C6BEB58594A3737EAE15D1D61BABBF6902AEA01373
2D3B552E34B8F09949DB96B9B2A53D5896
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /periodcentered put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
22154122B3E325ACA78A9D418FB443FB334F67F8BD2D33A8491FB2E85BA2BB40
F538F5DCA031BB3A7E6FB3A4738CAD86D226363FFEBFD2D9034807E4DE2061F6
EC1BEAFBCFDD74C9FDD1098095E9D81BFFBFDAEA84CECDE2E7EFA5543DF40C61
810615ED1BE9FF45229A250530E3DAF13C81615CE223537AFA6FCA0E934E4449
C14C7E3AE9A1FD3270BF539B62C9FC33021B80227D76767EF2DC3955671CFD8D
AF0F7545834B266320912F810001340E47F2625F1696C92147849200024DD116
39A3F4C33C78CE5C24F645
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 50 /two put
dup 52 /four put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5C69F2669DF1364BC06848F7F903A729E2AF299C26DCD463822846F7E4679D57
E8E44C4064381314CE489528563694C82A96520B0032BDC94E9FA02B68F80792
19AA89F0EB25699B9028C7BBED09C7C8FE6B649E051F9042F32A004BE64C4DBE
FD7F9A354A8C3592B6B7C3BD820A744DB480B7F6AB52178878D13A29DC83DB55
0C5E52999FF5ADC0D3E50B13B522EA28067B5A2724BBF73F090B294FF38B2141
DE6FF48450143628A742882CECAB567C5653B9FD8D5C3EECCEA316CDE8A62DF8
2AA6B4CA77CE9167E836BC3E836FCA0279B8EECCC892EE5047C18E90A2BBA7C1
DF92E1AD827EADAA227B16C35071E5129F388F09300CB18E7BCBA0484C3FBBF9
1D89723DC21DF5B2EE34CDCB175E47A09432AC45CA36570025C9F66E9F1DA63E
063D72529D338E22402A856DF96E775390815A68B0B514EB222639863DA2BFC2
0D693DCC70DAFEB91F927EB99CE6D2FFABBDBF9CB015C3DCE7E7B3C10BBD029B
016E7F669699E0F3886639EE2AFCE23587C51CC15CDC5F20D5708F58B8F37046
D416242835E1E6F215F89A0549B97B5ACAAC9A7E7CF8A7D130EB00094C6D4D8B
8CA486E7C021C36995387CFB3590F8445DAB373941979886B51CE82D5A1DF120
751762228C0C27E0493CD769D8C08C40FCDF543525CA6B0855C9563E5705DBF5
DC2E72A13627AC0EE8C537451A9C695217285F880F904EA752C96B5E6AAD7601
586AFA416D083F0B3BCA042D961FDB91A988569BA29FAE430785F8206DFA4ED5
657C690BE9D5D995FDBFAA82A05700A9F24FEEAA38E976AC05B720717ABD3907
A13DC1A7371C5A2E34E8C47B003AB6536403899F782D7C4ABE572E070C58A44A
A8C5F8B6C14431646736855C5B06563EE58D6A303B64DDF4E4B8FA2503ED4FD9
3FDAE9D3793FAF0F773682BF5479806A4DDE9C562765396117E1DDA8A1DB1BDA
D73F442A4EEF01BD81842C4E67E78B230F48773870317485CBAC78FBC0FF06B1
297215DE76CCB8DDCE0B6E912D837CCD9A02784A70B0380F0FB23331EFA65144
E4BEAC44651E59B041B897553218429FD56AE6C8DB9512E57A4F6595F95930
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 77 /M put
dup 109 /m put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB26D62443837E9D9
06427B9B9CC102857D938EAF09BCBFC0FE95B09E21BC24DF15E8668BF7674384
6FFD2005F845AB405830661F1EBC958F763828B23FFB8544485FC1EE72F0EA27
53B078F7F90FAA7CD1A2EA8520A2E767E19DE70C76A03F34E89BF253C7EBE64D
0DCFF470A59610D008B8DF64C3DA2E67A551D373B83E8AC89BCC0BF15C50B4BC
7BA9089AFDD4F2049AAA2B93BCEACE499F448933F33C3DD334683E1558B6EBD6
212D417D24481BC28ECCA6ADC0877B64C58F874B69B858FCFE89A0E5705A6157
0EA3C61B37DDE0A2D05DDA36A54FF1D513D45EAE76FFC8B7B0CA495F4601BBAD
8B49AB43558AA50F643E6396DBBD7FADF1E03E47F69F4D2068C51B592BCA86DE
622E0CD448A1D6FCD69465D98609C407B37F7E49C6CBA5533745298861E186C2
4C7F98E079A811AF9C74CA09DED230C18ABCA440481E8B9CA0A6B244928ABAFB
91DF1FD8AB2ABFC017C48326BEFB9A428E27D7549DDDFF47B8C7935B965E1CF1
CF910B7C14B0530F5881B1B7464D2CC81185AF74CAF6F6FB524CA52038C014E9
68216C3044D762A194F78E2EBF6113908FCCF14BF056FF0804DED5C95990282C
6E2DE2D4450B903300373A5E10FBCAA53A1E58C81135E8C33CD4D3FEEFD47081
54DC8E521676A7A72F012B65E9D71BF440617306EBE1A64BEEA41F4D235BE05A
ACBF5F7B013797A3E864B8388D81C9EC8125D6B9DB672DC9C9725F82B9D80E7B
1A1548FCA5857D35189907673BF31D949327A9280E1F2B4E7784A68B1A60E738
37F37D997F1A838531FD53B87F69FCCC00D87419642CF502283378C68BC4A210
755318254B53B1F2E2A2D61222207F5B10A9C79D6CA2CF62D714270B3BADB852
46E0FB3EDA28B62CB743BC36E3EEE14AB589994758178DC31FDA7154DAA15F7B
B3F469C1FF8E1B4EA59B03170EE19FA334BD4EEA25F6EEB70B3386CC759AA85B
A8F6E29C88DC5234BD7AED7C7A118E13E1A054C58D0D7350ABC50BDC90CD983A
D8B94265C73A416BC7AF9CF80E9547B6CDB7F4CCD3ED0CBE30A887BB1A61EB96
ADB020E43C53DF22899E0ACB1004ED06B521F48A9A7CA4D041953A0B339CA54D
1E01245A509CE97A67489FF22466AC05C048FCD87E1F0F953F848E715403EBAB
FAB109863DF4210BBD84E92DAB6FE4E9DAC18DF5E222312DAB02028E676F1E86
5D65D33AEBA3951279503F73AA708A830E73F06D900133EFE0CC666EB9B862B6
64B2021D50F42BD37151A0E9A32A8D5F1567EC186F17682A7A094A6EAF5FF815
92E72FB8F03F079CB86F1BF5E2AB13E90CF0D4D9E5FCE1D0E4834412A8E584A3
176903FB98F3F35C6B4C5E8D73A37DA6C5B2AFAFAEBF36712A76275FDDBAB6BD
33824978AD2D0FED35169695FE8A8C3FE4B9E456ED29B965C758108F5F062408
46EDBD00E6F3F9E482C12B01E098C44C794A86B7C109C660474D8E612A5FE2DD
F3573855896892BB422CF9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeXGyreSchola-Regular
%!PS-AdobeFont-1.0: TeXGyreSchola-Regular 2.005
%%CreationDate: 30th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.
% Supported by CSTUG, DANTE eV, GUST, NTG, TUG, and TUG India.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% See the MANIFEST-TeX-Gyre-Schola.txt and README-TeX-Gyre-Schola.txt
% files for the details. For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
% This work has the LPPL maintenance status "maintained".
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-TeX-Gyre-Schola.txt file.
% ADL: 750 250 0
%%EndComments
FontDirectory/TeXGyreSchola-Regular known{/TeXGyreSchola-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.005)readonly def
/Notice(Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.)readonly def
/FullName(TeXGyreSchola-Regular)readonly def
/FamilyName(TeXGyreSchola)readonly def
/Weight(Regular)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -104 def
/UnderlineThickness 61 def
end readonly def
/FontName /TeXGyreSchola-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-465 -332 1342 1135}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE75043D0B4080418DDADBDF748D3
4C7975AD8B0B6B731DF1561B30A7FAEB12FCAB62F8F3550638FCC1F6046D682A
552754C7E71BB55AFAEBAD3DA27CA514C28A8573C522620BA3B6FA54D85DD9D8
DF09899A99164DA0AD53994812AEF316277525505C6E7B4FB4570551531CD558
95DC2F359B28F777A43702746C77EE6832F51F4394F51564F6E22CCCA69E4AE0
CFE15B3FE6DE495E45F254F093E63BA530B205EC018E0A7220209C24ABC58FD1
97E3B0294CECD19DABC306248D08062C99E4290E40D882043E4F768D8056864A
33358618B6981BFA3AABCEF0CB7D42F3A9DD27EECAC5759B377D24BCFDB7E382
89402673FA86B663989BB3E7C5BA0E48F36D6AAA32F614A499B632ED7765989C
5B6332A445EBC35F3C6668975336A022D381C12221C0C39786DB03AC6ED166D9
5F8B3A8C2C1BD1101ACC8EEDA862D758CDCCBEB1EF02C44E323429F334B79CD2
11383189DB30B44797561D339F8F117EA50997B2E2F6F37D4065D8373372916D
53FA2F6E40132FABA854074CFDFFD016ACE5455FEA23449B3CF4AAE5D53254F2
197BCE724408BCFB752BFFD19516A598BBDA8F7B56473F4D17459E8E903BA741
9EBF8660E4D881FDB591F46A8E25C287B51A63B55B1F5D776AF6F383732ECD3B
70FAFFB4A0A6A9680E0CC3354553AE69F745175F7DB9BFF03454E96C1D9DAC76
92169FCE8222BCF3005F66FBB6A631DAAB5CFA06751D27B065860117F005A0CD
0DAFA0FE6B60E40C0CB4C2FE65D7135A177D6B1C7CFC777D6F30B4DC31C9EAF3
4CCC47A1A6E3B68BB31E1A0E2E98014FE6FE375A4B79991664C4DF6BA012B429
276E22FA5E3698111D334E8B8787BE3DF0F0DAB4CE7444CA5A964F8BDA53F962
FADF9F7515BD5B0B0E41E4F71D148A50EAA1CAF222F63D0D265A06C610DD9B87
35F033FC7EEF8CED0E3136F05E288823824D460C36D4675A1E752BA23ECA450B
423F833C1BE2D59DFF860E5CC8D68BB1CC110827EA4396D6DC726B575177D3DF
8E61EF0A9659847F8BDC517265AF875EB90F27EBBF94AB9B449F059AE81C7ED3
448467B6252BA3AE6E0CEA48EC31B204876A2B882B19E4E445C7FF01A6AD7B9D
CFAF23B263E78623F9D64467F1125597150B847315C78C3871F7DF0D5B8BBD40
BB5D26E0234F0115F1CFD27B10A9FE1319461633FCC7A8EC3A02D7040927995A
9C662760414C01404043E413839CF8C96D5540732FE2BA1F6ADB2A95D564B19A
3035E27F66FCD58F87D5145728C12387213B2AA0570A583C2F94B689CEA9D084
95FD52F82F1B3745EF043C3A97F0A08732A303681A6AC7BA0D04D80111D50FF0
6B19658CB450BB5369DCCC0739659391BC1CAEBC2F0D14F1CB9EF105609A0067
A82845403A4DCC892D2809761DB613442B58CE0A28C360D187286D4769A0166A
CA47C3614F7E4C84413891F4A5DEB67199934371EC8910E5644EAD18872F6F89
0C9FCF40E7E8AF25AB31DCADB49DC2FFAD1340454DEDD546F479E7D69BA4A875
86562F7EAF7EE23EEA2264A11900664ED4E6A3A7C1299A857FC13D34B4A0D06B
C57EEF934DF2891D0C954B8CABC0695FD3EFA59B675563C45DCA9FAA5AC67809
1C4C8B2BF8FCE11EB0CD9B4F53D76767B97C644FBF51069869AE0635F14888FB
C380D531853B0C68D2C7608EA9247FC21C865B4CA37577156E3C56B374A67458
0189D714E5BC01BEA268BF32D349D21572F774BF267C8C8D917290BB59A0C9F5
13CAE144A8A74C8B1939A6DA38FCF89EA2BCFC54BB19612981515D2920B002CD
413F5F4F673D424112ED9EC736CAEFD087BAFFC6C93AF8FE338E70387B4F1BA2
119C950552E683E39F8464076AD8A441BFF7B95FF8DB70359640C34F8E643B53
372E4F87992C3AC9232EEB7B0D7863151331708AF0D806823923CEA6F87A9E34
208AAC52C4DDC75AF7826C57FEFF7EF2731DCB114ECDF7B953E23197600C24AD
4BA8714F590226C6DE969D7386D91C9FA2FE4F84BD87FBB390B65362AD2B23E7
0393D479FFD5CAF4D703926F1BA042CBA121403FA633599754A951BB4ECDA998
E788AF383942950928489C2A0893513C6032CED41D456F5039788CDFF4A6086C
58AF13AC725DE1455800CD5F97B8AE4A6851C5AA593EBCA97C794F1AFF5F3922
2BC8F307E0512CF728285B627BE31FE64DF34799B1EEC02294CDD1896E3E2CDA
22DA465986E17D04696548393512567DFE2EACC587E9B80DB4EA0F908B64D5B0
DCBD42F2A81C9271DAE4F8D0361EB39EFFC5F47FB1065F435BE8A311E1A8C8D8
209A0D7CDED19AF3C09AB410B0A1304BA80F27B38DC166A617DB695161BD8DAC
CD034C5B8314ED4F8C8B740631E360AA6DBA1E54991EC7922725600CA149CF66
C86D11E1B064A2B59B90EA972CB8CA3E598D5AC623B7F42EECD3D54BB7682DDF
4D6DB9326A5B07F21B30365E2D35E33B794FD8BF2FE1EB4FD4FDEE133E2FED0E
DCE62116ECCD4722903F23E105286115202496985ABDA182DCD104128D878451
CEFEAFA490E17807C5D01782E74D45DD4CB99A83F8C4548A091306D514FB24DC
DEEE961B4011323E059BCD0C4BE8BBC001C8687473C07F4671D32BB5B4862F07
2995960193AAF93AD943155B5322783A4594B811D773B475C03A431EC209A357
E01DA5CEBA57CB6D41F5A0A0BAF1550F56B682134436B2AA1BC9199521DA6B00
88A013FFD2AFFD963BF8FFA5642F94265D8BE44233E4E54C8C0255CA77AAA035
608BB2F37ED36BAD40F1C39ADF1F3636A28B7A4FC8E7CBA258E6AD09BA796ABA
334160229574E9642728044C1853BCB8E3E01067B3032AEEE03CE5C64B7A397F
DD4163E5CFCB088C0FA7F0F4D602C992EEAAE6346518C73303DDD83AE512C9CE
E0C1C60290E3616A3F022433C3F5C77FCD8E02E18FE3DCF62463AD80181F8034
395A1FFEF9B5FBCDB3F536F6EBDC6F5B411284F2100092B3C525D941674FCE08
A60064CB42F4B5DD688729F3F6AA3B6CD034C264D1E1C18DEC47C52E96937FEA
BC94D5EE42DB920DABD2DE584E5A563CD00533A76C8C40CE23E8DBA3C73055E6
86AAF919356F2F45DBAEB956869603BDABA81A5F36CC8C1A91BE8D87A5DFF5E7
34EA2DE6F83ED75C1DE6ACCA607C3B371F8D4BEDDE0FFCB340981FE1313ACA0F
2937EA045DF8BE0B20E4EE7CE805D9E9CD6D1F52ACB2362EE6FB2FD416DC8EF9
BB6E5F0EBD1310EEE997BEBA8A127A2488B8E0328D31E19E9357AD64A0000AE5
66ED133ECED633BA0C36DFF0A95BA886531A9CC3E6027B67B935E76EFA9CA186
00157E4239F14EFE10D773E106008196B9F5CAD38252A5041B49153930BD20FD
24044F8C474A8EB547159F4D1B6CE505EBA5B75AE6545CB6CA9944962E09541F
BB7A00956D1ACA7D8C23521DF8BC3F5BEEB210E4A52724E729C277E902195DB6
B18E174328A4B90D93FA215065DF8C19C153EA76C4952DDEE91AF18427CA61F1
FD7081F840EF225854026EC2CEA84B0A20C8CD27783C6CE8F4217C2A536AA597
2D7C52E02D7BA9CF50549D78F86E725A9FB021463A99F341D019829AFE863747
C1FDC7B38BECE8BB0EB7BFDDD97C3713D2D2751EBCDB6B4D935084759EDDA6FC
24C9A2C7BDA35775E82F7A255D99F0E55E529CEF1C118B40FE0E15AD22D73215
F280FF2CEF63C504153FDCBEBC833F6895C5DA9EC4C1BF2989452681439EFF8B
C53C16D34888A41F8C3108AFD4ED24D99E1E2E4284647137F51242C7BEEF2D57
4F2F1413B4C6B15E0F9D2C2DB0A0E3EE99F74006929E48045A055B906C7C4D00
623F8A7C29ADFBEE0043D4664253B09D53E3AC2B6D64A6930EF0F1FA9BD328DA
2BE70941CC71CF7B085931FED54F2D98B06CEDC3CAAC3CB5A6929CD056659A14
AC21316C183F9C1A3AC7F42D1767C2A825F5EB9256410A727E47F14F7B9E530E
D94405E88AB50EC3855E96425AA5F10CA1EF4608FE644DA9ECB65E8CA111121F
5453DABCA8D1FE33808277D947D089FB576B90A6C4DAD6D6C8EE07AF682F925F
01D0B26CAF025C9F7479F64DE90E4A3DB09F7D4988BEF2B660291CA53ECEB88F
7A7E15CA638CE642522876168F01201FB0EEF572CA73E4E558E2309FDAF781F4
371F5908FE44DC87461DD67C937F1C74F34B0DB7C58043593262B829F82F3A7C
8499303C6AE8E9BBD2C410E344F4A623C63A895FE66E14641959655F235BD056
DD245FC1DD9EB64CA74A512741B4E9541B0FED5728CDD056556B250ADBBFD3B0
8E487174ABCF4EBF02283AAB022E22AD612B2F013E31B97F10172423BF5A540B
33511A142136A1277E259660759953B83813C9BC61D91F17B83F1D7083FE2734
B8FD27B626BD3726DBB9FE95ACACE17BB106CFB76288C36EE1DD997DB4E2BEFF
5FECCDBED653F730852B641E72BC01C639A25CDE25DE5DADEC1223353192A043
D952F5CB93C8A1FDD23D970B845939275655F39F9C368D414EEC20824BD9C153
3CCE4E498AFDFEE909A8E00656E5DD07EFAFB9C0229B588920CB0A2CE00EC61E
35AE94E39CD3D4F1ECC5869CBB5DC52D99D302798069F2B5CE2BDD85171FF5D4
EF8C40FD32DCD9EEEEFFB0BC1B3690E83016BD92A828901209355E9EFFB5200D
CFCEA614F9DC7CCC0E927EF7D853D4E937E83A49AC57D38A894980FAD3B08A4B
47513E1F8CDC2763558C93AC71A4C6A5EC1E74DB8EF632AD0BF5CA6FC23DF297
25ED6C99C9BD00772285834C049877A4729FC7697EEFE344F7665D5C8574A5D7
DEF679902FF59E3B86054DF5B3FDF838565E0EC0B58D6C1A9D5A4E40821EE808
9BF5521A19117A0C3053D990BBB61011C47808B516BED05C8D05C1DADAEA52E5
E50529E1F15174DF4AE9067EC4E67725672D65486B4209F4FEF9ED2417593C51
061309D2F9A4742DCB0E5A20B82697B96B8E4D4D6DE09E0ACD2F00DDE25D97C3
C75E449FB7EEAD5218376B6795EC14CF9ED36BA45FA4D9B38733F4A355270A57
361A131EDA5CEC244B764AAD3B7B58E928AF7F8D5774F34C22FEDF3F9DE588A3
81E05EC0E449A4630F4F11098828F6C6B628B895011B8DD16D02118A148F48AB
F20439F9996A8A60F191B34F09E5AC07A93715F48270096248080BDC12C50B24
6A7DC70C99B7DBFADA1E01B81749EE49A7090326F641802D31F91BAA40C3D90C
30A01449D0F3EFDC8310BBB651EDE7B5DF05C844D3978F8A4FBCC99D588205F0
5FDE79C61F414C4C203C46E6A6B0269F00A8A586628672D6AD3E0F12CECB7595
C5E680E31F06B8DF89D059C71BC12C3208B9FF934A1DF3070C16D6E08A6F36CC
B7B5D9C27C58AA432F300714BED0094A83839F08E584EC5CA72F9AEA4E0604D3
A33EE2CBFBDA1D46AE862E3F780029683207E4F685D084DFB3DC84917CA80C31
C45C4FDEB32E539CD690B41B639E21B547FCF698B77B1BE990C31A438AD167AD
6C39AA2FE5CCA6028CB3A7EA6942764CF0B1B98E14B1CCE43D91B137EE909680
E472B6EBFB86F0213F6D2790D9F623C83753963CA85E894403008F0E603A7622
3216CAC3FB7714AA86929A1D4FDEF88B35EEE0F45A6CEC462468AD09E6EBBCD1
EB55B342DF77D3D3BE7DA00D170B6C4BE782A1AAF0D752E7FFF9F5FFB99C08BB
468B69A205720F297FDD7F060686ECEAAAA79C5AC9DD10D3BB974C0C92B89BF7
28B6BD03C5A92827CA57F77F654EA4164E2B9BD986C480EEEE1DB28D45C2442B
62CA26EA8970DCA4F35C139CBABD4FFCF1E22CBD1254002A2DB1C9F9FF6A9DE9
A3D778A6463E16EABF83BC29EF0CD6495A7D1F18FC4E184AB0138C55F58EE5B8
E7D1CEC49379962163A2B4BF57C589CE3DE6B2E2B8BDCDAADACC89C52E4241BB
747C37DB43119263FD591A21AC10E20DBD21C85CCC6C44715E1D1185646D9432
1F499207DB6D77D6124D75B84C9804AC607A6777F03F6DC486A0B00D7BD3B300
915D50ADA73C3356E66B4C65F5AEE0B018462BEBE17138AA07373412B44023BA
4E204D1B53F718EED93425742D97CC0F23FBC88F8CD4E4AC32CAD8C4500209F6
F0F5C37F08D90A27E1FBB1207A970FEA8117D888D1F1CFDDD540B56031BD3053
E2232E4B59AC3791D8E509422878BD5A087F117A6F028D2F2BB95F7428AAB77E
BC61E056188249D8203A174028CBB2A2717C97FF0F700841CB1B68ACDBD8A016
69BF371B667527980B0AED1202631207EA3F55AFF970CDCEE36EFAAD437595AE
FEE8F2884ED3896F74CBEFC62A27FAAB38B52465EEE09E12C44829227DDE28EB
556402AE344855464338F161DD40C84177BA71DEF6A3EB5A3F665C5A98F578A0
3948821E40D1608FBAA4EC16B98745EF82404447C87ED40706A2A3339854CFD5
AF58F5013466FE35AA58273F81C7787B17C4355E5CE34D243E279DAD980D7E75
C9EFEA2E5D3A0D46E63F17E2BC27C886EA396C89FB414CAEBEA0EBC4C4EBD6F5
E4E8B6FFFBEA22D61456E974626482B4C2BE49CDD56FF0DFDB8243EF437AC7DC
BB01FBF7B8B5E894039CAE1CCA1AA008979407171FD1743D27A33C4A2010D694
B95D5176B9C5D883E62A1843ECE21D9AE53BE705BCD04E131F8CA382D2869FCF
0F213036AD02BB07FD46300FD42E81E47337DCAA2F7C8594264A6EA23E30B3AB
6007D73B67BA0FE24D41D94194E5FC2564ACD7935C7370ACFDEEB69F1EAF891E
3B72DE4F132378DD12D9E794F2AB1643E38846BA2B3B5C13270AB3956E655530
12A6C1472DB809496CF89ABDF642D9E191449727385DBF163E9E56A4886DDF3A
2EF39DE412F292588D074C0ADFDED81513CE7070F27AA426B145A147B8823D21
4AFF34901754A2918393950E1F7E818D51212900AAE39E289C1AFF86007FF162
F64ED65962C52C7A22BF7AF3BC490D20400F9E9DAEC1E9643545D179D97E7159
C9710FD0AEA9158D7332E2A02DE729DF56CCC594B5AF193DDCA689F58C4AF8AE
C95B62AAE47E6B8FB0E7994DF2D42A7B811DE84795059D0A12F0E03437ED3940
82281F57AD4FB0CA49893DC403EEE634AD84DE9A12F56A9D3FC1A5A59BB391F9
9ED1BC64F8850E677FC2AA4C67F3EE4D176E0A4B84C9F47E5E871C676BE7D7EA
82C272AF1CDEBFD659E89F2DCC71AC39F4869A35E4155C3941E7C20440AB54DB
C904C56F6FBBC63A77D792DF340FD833CEF622BA10BA3A87F250AF9CFBC1927F
F8EFED16D35D034F1AA5CD4EB628353F1FFEBD0CEB9FA7606A5065F649FE81E6
B3B1E8D0ECC21206BB80B453B73568A9F686824DF8DBF0EFD6A0F917F3760EDA
F905E99101E811B5C405720932B4553E109C324829A88CD39230C99342721418
81665D08232C5A14A7EF671899B0597C59FD3BA483DAD551D0ECDC163CEAD83A
7B9017415784858BA2C3B06FDEAF2A75E2CFC5F6D3D16AB9E1B59954F709B9B3
57EBAB1A189F424831F6578541FB21A36E4C6CBE6AD10417407AC6A0DDA1E77D
37AC83F0991A4EB126B3DEF54B3850227D2F6D538FEEBDD697C394F6F3B8BFD5
7E9E3D9C3668A71EA6E3A508B70E113C92688F8ECEC57C6C4E5A68F5DF71FC60
9F11AF528652EB3D0DDBD5FA0375325331FA1EB4009CFF19FB5E44A47072D269
60A680346040BBF8AE8E79C861287E39335277EF229434DF28003EC198DCDF49
410976BA86BF45182CD5488E3B92C81F4E3E164F6A9AC0955C00BE042DC2D87E
2C0ED0AF113EFA09D4487EF788266657DC5E4744A281723CD3CCB48D3D416E5E
034E36D9C5FC0B33B7AA0D46F3A3F928FD48E940EC0639BEB7F11F2E56EA59E9
C2459EEA536822397E74A1FCD21E5789A95CD7C2B2DD6A02320C9259107F3DB9
D3A9023F4CF9FF1E6D395989C35CB2D3E4F0A1285821F806E068BA068BBE958C
834EAACA821ACAA09D91ECDEFB26726886A75650C3919962B0139409A29738B2
44C78E629FAB784FD76372CA9417FA67F292A01BDB0E501B8F4CAB74A5F64B4A
95DEDCB0179FF11230904DF700581F8179E4B7182CCA68F8B35F57AA77C97120
014A05C3E613E093228678586D1590F4C85CCF00AA14BF76ADBDECF5F5ADE953
A58A8B69F09F520D6F44AABE280D3FE03EE61C774D39E1F2A3D374AB25B33CD0
3B4C36E8D49099B46F4A9032FCFC5AF1CF8742A92AB81EAD33B13D89860528B5
728B7942163227EE715A2BE64143CC9AB4835FAB0C9F2051C82B75D8E0E23852
7088399C97E3DE9078DA819E0EB14E127B9077A75A8CABB6FFF25A91896E629F
88B5154687013151452CC2EE73E36C787E6DA3D81E94B79A2965D63753EA5B10
491A203C9E35593F31906127617D2AE1B888EA771422EB425F396785DE27F051
EDFC109B2B38EF8C02F86120E587F7F3E43B3971A3D5AB85DEB10D66DFA6700C
73551F9B07B4448428FF0C278E99D4E81BC6A80EA8277251A46A054E39934108
9393FCA362BC59A995FE5430B39CB5EC916B710345EC29A28E43DDFECF131E27
A82FC1B8BBE36315E41E68E3179B50B077DFD0DD1901FB57909918D07EA76450
866BD52AEBA54FE4AC07567FF1D1D5B0A1D35D40B4CC9C69C9CC6AA7EE629D85
ABD5B7B3158D44150D2494FC7E035BE0DFC05232D2596FF0A2CC89C048FEC738
F2A8CA3CD1607BB4E0A1A7A244B1B309A2858EA712B5B51AB39EF7E7FF54D178
4AB514FAC0FDC8DEB8DE95405ECDF4E8FCC548E655D710716EC5F734EB4D4E85
FCD8DE39FD4CAD8780C18A0974DA54103C9474575498D6DD4C7868E4A5D20F55
666D0C1357B0953D8E9950803E1A597760D38CD0DB6335FC4A6B27E683A4B831
16D297C764B6DF65998C53F28426E5E4E2EF70665FA751137683D06D2DCFBA88
DF8D87F32A7BB5B06672CAD5E073D10ECF3A6AD9CC7A4DB07DD2708DFC10CC62
66C3D87FAD07996960C1D11596E1FEB5082D14CAD6BD770E15BE2901A68647CF
303DFD961CD5057F44D52C1B5FCACF66DB19F358C800305B894723028E0529C6
B747E58310BBA39C677172812C84055F651E11ECF25ADCFCD2CA43728C238361
EF8BCFDD164C8A2DDB6E607138E02333C892AC77F5E88DA0B05BE6C356CB33BD
7B26C60E59C9710FD0AEAAC2EFCE3CB99F13E8EA78DA56973F4DA6241B500D66
ABC66DFD45A16A26F5B8E1ABE5009BD17D8A90C410881C7732C4897D51AF17B9
562670633526DA154F2FC6BEEDBB2EEE4B3CEC9D872E3D11E1EDEC05A8C7D87D
28E28B6A33A543ABB1E059247E276E206CB00BED125C8F78A5B9FE7FD17D352B
303F2518E05CFDC4DFA697683ECBD1A016FA6A70101916481D2CA853A5FC5935
87DB2DF74F8154359CF1068CEE7B5E2928E43D4A764EF76A128CDB605460640B
B17710A5ECDADB2CDB17ACEFDE8AA1B6128C3B8198BD448FDFA6E376B9FE4D21
FE10DE7B57D14058BA6B2A7FFBC00A9912B63DA88B3C465E434C7ADE88C959CE
BFC1A3B4228D6526D50E59B5135B8CAA9F3EF27D18E936D310AF8455122F4C6B
61307071FBEB6E8DA8C74AB720E8DD38E27D05E801B0A19AE1B5998A9FF51936
264DF91C9B3CCA3AE3F31C1198BF3F62049435BBF3B9A6BC930F472F93E247E2
9CD9852001BD2E16E51AE0580A77DDFF7E65F6B503D2214BAE714A0A6FDBB0B2
380F59E6F99021DFFBB66ACDDAEDF48DF5462FC528DFDFE0BC9B2A0BD76D2FE7
2FBCF8374E8332B98D6953FFDB5636E05F76B3DC275C95EE5FAF3A6D876536B5
5707F6845F589E0980EEF27FF33ACB54F0A6AD8849F98CF9A0B95826E7231C3D
0ACE7755A750EDD67622BC5CA310A064BD6D376C4643295F769C4B52529A054F
6B673D04BB5F7B363F967091B8B375C0E70D39D66ECBBD069BC21C36ED91DCF2
8E58E376E2CF1810A7EDD21D89F33FF7E15149415C5AB2A72BC3F9A63FC847DC
244530BB6D83DE71761D6A52EE169C6D6044F0629A5F980593A1A0EBF40D83B4
D6066CEC3C313244CA986CCB616C7E26129B8E3468387E8262E46827BCB12254
93138D2A491E774EB94997944249609BD0FE79F0F3FC3A15E19E12114C8E8935
454DAB0687C2E3254A4529520AA0E828A1025966B473E9E507AE4B0E97E8579F
DAB2E33635850266322C52637902609D1B371A0E9B0B9F260CCF63AAE519616F
224BDFDE3716C5B0A87BC7ED856A77E3AEEB9912B64A51E9AA25F2D713FD0563
BE0EB2B36DD94D1FAB63AB6E061AE91DB81A77C19C9BDB4426F2E6E52F6410BD
76E44518706545BFC34ED8D81DD9CD844A043E05E71A63A454B1B92AC7D6D521
E9D0A70DB9A2BCA8A15A617ACEDDE658EF902B2094A5EC2C0F0A8379A1AF23F6
2F9D9618277DB082AA93E1B541228CD9817B27BBD0AD095F7A82454C79A2BA08
E242A05D015A9A32809DD51DF932DDED7A23B8967F940532E3CA8507FB01B0DC
74484791223B73EED6337D8261FDE80C9D0FDCFC10ECF31B8DFB66FA8765C98A
A680463BCC001CB36929605008F4EBF2D95DDED95FD3278B573694ABD67F6FF8
1F6450D2E6335839957A785B766BE0F3D7F6438FA7E464BFF671439E450637F7
833229BEE3DFB670B5C4CFA70C155B0BAF00D0B10A6C10EC90A8078E716ACFC5
62C790BF24CA1A48B97A3CD18493397942ED0508663E38B7FF05556CDD7FAF7F
DD7BF7512BB3B7862EAE8E10393D1987095FCA5160EB018B8636023DEDB0CC9A
E428714DDD6619AF0785E90C2A066918EA72F20358E40044BA7B82BEACCD1049
EE3C46B5BEE16B5CEB1A5EE1716186D33A8F414FC06E57BCEA854BD38818E0E8
FFAC59C2A472311F266DFBE6AD8D49DBBF3F8F7743574546C2A9B76FA1A462A8
1BD4B4834543853CFB8CE4A78816E7F6D9138B1AD48DE9A3F5B5DF3FE5ECD441
D8C334E33B34F8B12BBD63170FE164729C6584C3B967420A80BA6B1FB2099FE0
E150BDD780DDD766422A0DCAEFA2A20B54EE054AE15F26A7304A9A97B5E49113
B7F4DD63E3011779EAF2101F7D6096E31DD040555C7607E207CCB5FB4007BE7A
3F43824A3BFF8B9F6A1D9E66693B69183FE722021FAD70D99E2FCCE6FA219CD2
68D7F7A5554E5303A733731BAE1FCEAC6DC0C39FC2B892CB9C4E4BD0B8F9C6B3
C6FB075F188A9FF4DACA09A413A7855891FE38AF4673CC7172645BFA492CDE63
8F687157B95A15D3B8F74B1D3101578C35ADD0A8D9D4DADDD4373D11EEA2A327
00D13B25BC43FCCBC12AD7B5C36946586297064AA5C2EADC5E6EF258AB1B3B5F
DEC3BD59157D163B7D007B43C1294747F3ADD403E3C9F6D68A61D375AB3D8F14
1B95F3251B6DABD584F17C75247868690766EB10A2A8A57A14B7F2D4815E0733
979B9FE7F391ECAAD3639AF8069CEF3AC8A3E2F65B2F01AEF2D23386ED90FB0B
EF17F7C10D58787200C749BA0DFA1F59474E9C4F07EA9E09ED3624794C0C045A
9458C6C16660096888509E5CD1768470D8A13609B66B1B21C0668DEA8D1BC915
F95D06470E7CD2B15183F5B3507D7032AA640ABA758489D1F02B5F76FE3295DA
DA1A1B81C7FBDDC7AB02F6AD066EF848E437B506885F93E00351B55FADFE817E
320A57DCAB2B635F85832FA320CD9FE204CF2F99B43CC563E7526A427499AFAF
4ACD6C6A475373979424F7FA0AD5EC3AA812E09406550B33757833953343D5DB
7BCEC5C4277079D25627DCD5E40E3E202D7176934072863A9592A1C0668E6ECA
005FA97465C599A9AF76FE1B730D504185E66A3A161EED1F99B8496A9FCFAC13
492DFC5EF80124260E0A4B165539944EDBECC4B4B8D4460964BEFF5C0CC65337
3F102E39529212B65E7565AC5AF0229045E4728D195114A9B35634AC99945369
0C2945D128FE4892D77FBF6F377E25D2EBAAD8AFBC9DFDADFD2B6F079154690E
B370F940BAE2395473B7C2F70EB4DF0E944CBE331033E4F074D29DF85080F069
561019E04A1977CECE2E4BF7B7687F1681D103D7DFC415017C2E5851A06AFC6E
ED7D5B536D9846B22B75BE321739617F870A36CD67DA518D51F7562DEA3B9974
CD9A9C05CC49DC25133660A2A9661DBBA68175A656514425E96DD970D81D4C37
C50CBFBD33673C5BA58E2B021580D63C76BF1963936286F494CDB21B6C976164
FC320F322CB6B2DA0E15961CA7D8A953C6B82258000B6D88AFEC97220365FC41
21910B6C2A7F0E8784846A929A2ECC9CD151557CD0E2122AD635E5084E8F8E2D
AB2C25D461E2DBAFA96610EAEC11A517D591BA5E7D65FB18BC5BB7642593932C
9E0DCA4CDEE4465C96FBE9F655600B8893EE2C65BB593B873B220036371F7864
291A3B3F753DEF98426130A132BE502B06235AA8C72B021754E2FFBC90A212D0
8F73B0278381433A1CD0068835D69B4651E206B397E2D6F3E1134AAB2D63BD02
5D257624B3EE5A864F6E65094FD7C701366509BB21DAF9EBF112F30C26B597E7
8976E82998182784D48861E5F87CDBD81FACC7DD80091F968191E7B7F8B60222
61A7208B4E6FF1528406F27ADDBA80A107AD2919309F31ACD035E1B6728821A9
FD8BCD0CFF5C14B0524C3990B7DCAE4B0B3A76793F902E074A6A6FA42F301204
97BF799CD2C1106B9B9D92F4EFBE5FE4E2ECB891EC2FFA8AB4B56F00251395F7
67FB698F733380DDFF117068ADED0E119E5ACD18F96868A8BCC914FA5EB82DFB
0B0E333E2FA52F65CB925BDA5C98E98C7BA5E25EE152FF3A57AF704854AEECF9
85EEFAE0521DB38B209A4660C3D6782AE0633C33C8E4823681C0A61ED898C571
0062006AF3BF60C4D07048BCF34879B683B2846019287CC9C0DC0B4708047C91
637E104E6E0E84ED6ABB5E15F4DF7D8647283186D67327CD487B978FD50D9BCA
2508355C576918F1B55B5750909EE5A9631E04F67D31EA5D4BF66CC50FC5D215
90A2A0877E06AF39419A18C9B4AB6A7EA2833AAC05B84458A1D041678A1BC128
2DC784E4B54417D3E926A8BC000D7B1351919F4846D33B3F4D0F890D640A2ABA
70E63BB928977EEAD4E7CE6AF5644250CAB98458B557CD97B141546FF52AAE67
3C3A8FA461F426952D7BB4F6FDE3F2558FD1C5ADA269CDC8F237A292E60D0572
76ACDACBEDA775E1D468BB6EDE702D60DEA3E87673733D5802AB247E9FD612C7
762E866A6E4C83D0AD28B76C6DE641E06972A5261CD7F6F20577E83176B2C8D0
BABD87A0070482EBA48259A09C4C04E9F90BCD8E5E60BC6F1A8431A5217D7729
5DE5EA762F84881C2C25CFF2F53266FB08BF9D15DA7739FAB5D8E03BD8F283FB
6832C3E72025C6E607C1EE5D38720004E4858B624AD50EF959B039D79E7008ED
1E8A49229FD44F45CC0F6CC85C210D9F36F81664F2AEDA58AECFED688A8DC0B2
4157089E5525BFC312189D77F70AF8035C331FF71F130C31ED8EEE29F1DC2FF0
E40D5A3A2E5B7AF64A3304B9E86E1BAFC0438BE900EE6B0388368937076465A8
7EBC1E3D56B3A0F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2809EC6AB
8207AB962836E6CD43B3EBBE0FF0E5955E1A87B6A86056F16A6DD8DCE17FB1C4
102F4CE765D3EDEF41BD7D1BE1F52347C6E3CF2FBDA627C06AAC52F08DB31C00
E4FE86100E86C3FCF0848A65F332A4C83BE10B93985D50E8C6AF6DE1E993DB81
2E20E64D87299A59BBA10A72B84006846CA4267D5CD7F897AA14851412086D21
2ED78C0F8EFE1038AB71417E2BE47AA09D88EFC769D04B00A799A35A3682CBF8
DFDDBDB97B564FF17836B47A5DA0C7495960E180A9F35DFBF8623B231088FD37
65C4E85B37FD00D882C62AA5BFDC778A051E13C1F00FA481613D43FB3C1C6B27
EAAA9D864569D9CA21BCBF64CADBE1EAC6178979FBD4F11A5FE548406DE5D90A
0FF8E5ED9ECEFADAE921575CF4A518C1E51B921FB8BF67D7F2A3B64826CD95F0
2199EFFCF454A40AC29D2907B4E3C7115594B9ABBFC82C68A2D816234CEE9C04
1647F963F035FD692B7138B33C5F451B452CD56C5A7F3440091DAB1BE871ADE8
1541F1164824B4619298A08184D8127A0E2E59E2A2736781E5E8912A3ED3D25C
FEF7DCAA289D9C03F848401D3D8A35E8B20E50118B6D6FA7458283AFFE9AEC34
FE9535C73B30483BB33892376D6AAC482D0561FCEA73737D6EEB1D0093B10616
A6AF8EAED5A70ACD214EDD16DD0E11384C2B9911C0B7333AC1AB759285CF459D
7B8B274B84BB526F68F932A96A11C32D2AE1AE3191408466080E03ADD27601EC
C2DFEB5A9335A6FAC9BD1814220C12E843104349B3DDDE8CBDA5AFDB246482C8
51A33A6AD56E09E971CC0A768647416A3AA282631543DAE20F2789CC4AB83076
A9D1FD2F06EE047F1A3921B1554A749ACFB3F74DEAF14979CA99648AC7971810
F0036B065A3EF50C7F106B1DFEBED8697C27CEBB981489254D758FA344FBBECA
28670161007BEDF40197B0AD3DF4DE5C96B3A04E2A74D7567021D6EB4DF517F9
90CDC421FF5E49DBE0CE1F2F34E95129E688C08FB4F6A31FC1955D42DC3EB019
A9A597C404C4A550F11704220505795C117D3F38D79E6F868BD0246152F58DA0
652011AED76807DE18E37706712DE42EE427D4EBD5DCB4FF83AB8AADDB5640EE
403DE3C94BC66B7A8739C63FEAA0C4DCB8DF16CC66BD74FD50538677F469C635
2D659FA6F3703FC79A1308424711BEEC2A214EED19C0949910584F7FE49B03F8
91F525E2AA96012837CA40EDBAAA2ACD2B44574480A0701D65FBB9B9F62E3A3E
951935FDC18090714B60E3CC54C8AB42BC856C8B7E685B0ECEF680A11EB7BB37
75A6BDCFFAD258D6E0B6EB6A57B74E63A3518EC7667E07BA5B249E14DDCEA9AA
29249BAED5FACE99BBD5469A889F5CB960A96356F34812894E1249AC805F6C62
4B5387E6EA4FA4924BB86416ABC072902C31031F98B133917E95310B0949EF10
4E8A00E132D446979D592F6FD36CD117A80DC88435D3CD64BA74B022926AAE4B
3D036A40136A428CB7F77E7B5305A1AD0D85C858F9EC76ED09DA25DC99FD5DDF
97B82FCB986D6DEC3309896A0101B0C36DE67ABEB2FD88C69AC5E4CA9707A872
672604F139C499CC23218FBBA2174F6F444DCB90E62B258E26E398918A03B37F
A4B666C54EDCA705240E49E722D0AB800B022A9B592CE37E98836DFFB1666B50
72F5D4CFA6025D4D0DA1CE6CD9DE8D023459C95678B990E931CD42E4CFD36B55
7A3C71B7BE2CB668A8C842F8A18C6DE333FC99D2C8CF30EC368D7AB4327E768E
8F39BA48019CBC833E3AF52CF0C7AC1F92142B72CA17F13C3FFCE35D26F9CD30
A3333A2092F45E7D465D06686EE2792D553E01689DB2E8D6995FD0A480CB2468
1C6A11FC86FCD5864FCB5FBA4E4E99A8810313CE9CBB164169B34F356E44DF8E
969AF5E9278DD1285994A3FC613F3C8BE69243A80EB0A9349FF2BA0D430403F6
DE339776466FD670A78EC2C293896F79147C817CCAF0798D5E716C3D25F012D1
D50F9856B4D78303CE92855B005AEE73C3949A13796D587E6CFB2E120BF8B579
2C5D0B616CFFEBD9DECC4C34BD9F2A837D1396790CAA3C9CC00B233EDADA9940
5D2BE93AE243773D06827E16E5FA8BBC5AC14E737A924B9E37C17C6B12E23CD2
52844D0A408BBD22E82D63180E6EF496E779CA0AB2749B577FCF43032C40AD21
286172D90C2C4184121BCE995E6463E40D37AA8769AF478B94F5DC51FF735100
1DE36200D48B44FBEC2A78D37975B77158810E29ABD6B55AD6B53B53B9E8A4E7
8EF64B4E344A3844D9E5F789B7877AA8E20C0AEC29FFFB84D99CC9892CC34CF2
7588DEF787846C1446279BD796B0D5E6F1D98BA54CACF705E949A2704D21B2CF
4A3B19B655E9A3D513146EB5F0C2C8229EC1F19DCEA752F83D00ACA5B15C0DA8
A828AA0E1542008BA6E7FD38826BC5FBB59C57B3F057F6971C094EB6340CAE30
467FA1C71055E2BC6D3BD139B0946EB47B47769AE4573C22DA6600D7C653BAA4
C536C8FB5A5C67D3669F84EC5654508187B05053A3221402D13BF6EF1EF11F3D
2EE51F9E2E469C051E497704AD5892D7F2E6011F35D6F7DE88B1B8BAFDC32D4F
ED08986D0FF0AE52D9A356F12A1DA1254D76350E5C698CAF55328BF127986C78
951885ECEB9A2704BEAFE35A035726BD70DEA5D92A6CF3743F98D8001E1DE518
8978B579E5217FD3DFA5E610180D0E96FBA593C661F89517E275583B57486E53
262501B20DF39CC6524FF389AA53571EA1D80C40215779E526F1EEEFA423BBAE
E3052FD3AC6B2BFE05B9FE6D49F73FB5EF2F128607C548E0C19FBCD33037B596
830507196E27FC858D53BFB50516F85FC72F9814941097022D9C807552F51432
D7A6B5CB50D55DC6C1CBA8B6B6E148E8EDBD56728DAC8EDAA8A85CEA375985B8
2166E219BC651BF24D74DB05600A13D8257E9A439128153239C9397C79645EE3
22A5AF32CA675AD8CBABFBB903B01A93DE24B4B957DB6B3020F62C79F0F63D1C
8A32E1B8059EFB3F2F1F2BE407DD9DFAB789DD72E9AC1E3A7B5CD22E3FF45FC1
806791B34FCF5C8878122A350A0A8856CB26DA7088BF288F35A212B6924B331B
43D25487ED60D521B66D4D5423E9C0459F00DA2778C1ACA005DC4C3BB16D4684
B69DD9DFB85FC25E5D34E7CB6F915C5C521BBB23C608F470AA60E648E4DFB5E8
0D303426C8FA0FD829168AADA9433BA90928C8B79C3A3C57BC525D58994E4A6F
5A35058E489C108B343768673F7BCBFB41A8A2CA88DBCDE9CFD2BC34DF907E6A
E61527983BECB567CE505A4B19A89C340C3B76A82A0D0C6CE1FBC5E207B02CFB
D385D9D098F4AD27B9CE7D16257E0A502473699DBA6D7F5CD7F7F5998F37D99C
606EFBF64762A65558B52BD51EDEADE5E33BBDEBF279FE5A2DC67BCD09592EEA
27FDCB3C26D1710DA13F0EC14445FAAC119B9093C76E5F36B577DE25EE7BFACF
F234EF3CD417077A816E2E485A8CBF85EBBF2E094CEFDA321359FCE1E6D6B014
2C5BB4ADD96BA9E45706179DD1E0DB1A2F30CFEC0C485CC48C2259207E90A5AC
A50661A0C6F8834B5F622F18BCD40688BBF2377239DFB52308BCD137CB5E9A19
6122196990E5A7AE283038FFBA5133114731FBE9DED20FA02E8E6081ACF231C1
A3EF55C63D990CC91173C4C0575C2BCC6B1B1A4B55570C3EA39D2D62B7CCFFF3
B1744CB17EB46E53CA6BEA6F891B65005F9B49EC9587706A53353424AFE253E6
A8AACFFB42BC148D3832B043534A4C2F462C6CA0C9E42754B2A1C99CC3EFD15D
548B48269C25455E099B34FC7ABF685175463EEE89C9C69F030C27D92C30BE35
B27B3B698914A6A10B55E5C1CC67B7F735761B4A5A5A5DE588B3D57C339D43D9
B6CAE96FBDB84D60848FDBE38A20ECE85A7A4817071CADB86462E2E5B138AC57
79AEF638A38026626F054008FC5CFF101D4D101A5A0C0601758F644CA8B09B5C
3E973F69ED9F7AEE71E1E7D247EAA5BF1BEC53AAAB7608C98F488D5390840D83
E895B56386FD2FE6CC9D593CB13113EEAF5873E202B757E814AC21A7B733DA8D
D74C98D2D04EA7E2167DC5F2D9DB4921631609EE903ED5F2523695C65F9BA8CB
285B9618B652063D0C54B13553816D248BB5A0139475FD67B911179A6276D6C5
CF9F0D11DDF6477A986A049EDF6F4466E313D653661E0B597F41AB9308398DF9
EDBA2035497617BDF35CC0C7FC963342019AC8AA93B5C4E2BA30E02B88EC78FF
896C6E4D672452A43B295CDBBFAC0581982D7EF27B675C6B14C5440F3DD5A7B6
7D1637D595DA5FD64C9A6AB6DE6A5023EABBFD7F1C8E3C989F371A8F30B1B39D
A9B1F203A2814A200FFD11E14EA4004559544330668C1AFB2FDD4A72EEEE8CA2
11526D7DA2AC6B66B7EF67D7F07880F11DEA812B6BD141F826BD97F2707D12C9
C02FF7A7A6A76AF947751486345A628EF87F4F3A680D180E33FECDF557C74AC2
C47746990DFCE3751BB82E7EDD0CD645819A6DC14BA37B7445D44B2B336B26AA
03EE343A1EA271249FEC13AA0BC654F7B2A28460B6A401055141546DAA8E1A59
8B5A1519F3F2F6045417C42005B99D58516F2243B0B109A126C2438560609C59
3A08F8091A706835CFB856BF8CD28A57548BCAB979AF2BB9F4E31520C626D7A8
EA24026B8E7C2DD061CCBE0B93B41B8D9BBDEED7685F9D3451BBB592435BCADB
A50B6A74B9121E2DDD043F0541B74D392AD550E8CD50869455B5CA8ADCDDFFE7
3598264523AABF9ABAE0A3EBBE110683B069FDE37CB9E772CDBE484B0D2424FC
8F6BDDC8556FCA79F73793258C5A6E43031D669D07D950F2FE357AC2A940A7E7
9FAB6ABC9113DD0AC8C47E647A93D76F1018809CF03AE073D1EBEDA354220738
2564535ED25F8EE52D55502795F1403F5727B2B6AF60F26A93FAB1A4F46324B2
3BBC663DC682C0BB36F7A88DE861887930A67E738AB17014EC26A8D057553DB8
AA9DCC674A0DE65ECECBD02C18A1C53D4AEA7E5E544AEAD6C66F4FBC0FDEEF00
257025305004426EFCAD8D854CBFB884FC98ADD44640348F2B7C48D0F3FC059C
D019A4065D24D11C1256454E7078BEC737D284F1732DBFFF25DECBBF40BAF206
4C2F110208E31915BFA130570C06D86882108414AA3E29E667D27A97D73E3304
71F866E094797C4C138A6A38A1C2D1D6BF34EFF353CC9769FEB9740C9C4D1F5A
C7E078ACA59C565A777270C9437CB97E0C442F15B3719854B528B471DFE59FE4
7795ADD2B571F1196A15F99B0D96A908E242A05D015A9AB85BF1540EC2347DFA
9FEC278DC2BA503DD22414D0AEEBC465D6F369815962309CFE994F2541C12FBB
0B730BBE50AC03CEF8107B912459DC6A26EA3FD354BE479811EF7C18B8859E2B
57CC73D2B1685A17F7541D94DDA06E6ACD698FBD2C456CFB46376619492C9EDA
178827379090469313E9DB9084830B77FD7FFBD7E1453264D8E2AEE752665AE9
F70669113065923D7A6457012D7D59BAE248FB6CCD0CBDA9697EAC386165819C
19B03F04FAB0FC395C070B468FA33F3A632A04D797BD489370EF46F0BC2B2E9C
AF18DC922E19EE3F0FABAE399A0B952252C87CC4ACF93E15420BC4E2D0290E85
DA2A174490FF9E8D2938020951D143FF2160A5DFBC0733ADDB34CF39831AAF51
F2310CC92BAE5F0C969B9CCC6C264BFA00AA30C51B0C5003819BBD14E3972536
98CF27DB471F324B3001608F864FD058E1EBB9EA9AD8B0E77094DF693A284FD6
5AE53B480A1304F0A18F6BFA81A033A079994264C89B438507CFCEC3794CA58D
AD41C81C6F09C956B7740751AFE0EFEF9FF355646BD4EFA2C153B55210CC83D3
B226FCEA11B750E29ADD451D714C669FB16E135D55FD540A47D61E713D4139F2
E9B2CCDEA7D50E99C7D2B001E2D93EB214E1FA04F01EF27265F4B6413995934D
F09593D8A52B15B471F275FAAFD49938F495AC07199FA85267A621E6CEC16589
7D8B6998C8852C0547C0A48205DD807B3C29A3E7697700BA0DF2D159C149B706
97819F3FFAE51BAF2FE538301BF1090036D1433E43E218A605C8FC53D6F87127
4F36894C7963080F3BBCCBC44760C1ABFAB3FBB2343C9F09F9E0705010BCC981
A54B7DA99469837492BB1743D82FB4D31B36C60B59A56287AFF536848DED2669
217C33A89AB14673D3761903D6C35377B7E3A91418DEE48319C9BB1E5ED5782D
F4D17456C3AFEB9614358863A906F6CD98DDBDAA4F28C54EE3B755465FD5CE34
8D56299035B42DE42CC07B1CE284D6E8BDC9D87CA451DF00183721EBA2563FC4
7BE6D7FDE129F517F6DF796E8EDA108718AC3ED75FFC3C122E4F2B96A7797960
14B8933B54AC4C09322118F8B388B207BDEAD9C007BD094F08F395887CE669BC
25CEF6EA8D49CC56ED7830BC4B8C36142A1D960F46215264FA8F0333591D26A7
C7A22E702F14434B0BD5FED0F018E89B5DA8060DD3FACEE01A517707FE762AD6
D7D86DE7140046A81FC825DD58EDC7E221EEEFB5D02DBBC1B16D8C4459912A07
965568542FEB6C53BBE3BB40B3BD05998027DDDD5DFC571BF0808E52E25334D9
64597367A2AD10641BD2BE6FAA0021141D494846D2BC32E8D6A897962EBECE5D
55D3F4B59544751C8DE239B74957E7F201413728BC37E1D49E9B7C1780C0E22A
CB7466BB9F8207C63D5C558E87EACDFFC3138DBD30D1528C6A3200081105A9CC
8B79C8A1EBFBB48CF931FEAA781CBB63083C288446BF4A3947F171E1AE436D44
4DA3881C890E482B044F3B77133AA7CD431BB67BA779FCCEF9C018C3D8273DA9
93B9A1CF9577C010788ECEBB73710D3D92EB644A1E863BCEB155914D39D71C50
7F09722B9A398364675257F65B98414CC96D57D0BE6E612BA14784D479773D3A
A5B82518FD8B880351D528358F122FAED5FCE279E0540DA66E6A6908BAC14772
FF91CD16ACE48F7D30387DF6061058CF82D03C7AF50154590B50B81A1B700EA3
6504FD837EA47FA3CBBF9E74EAC3C52DE79214EEEDB424D767D0C64F1EBEC99C
7AE9C70F19E5AAD0C27B8608315AB055A39C48091E72170A91A70B20ED4D0DC1
5BA4F0C1D158B3413A3632D21574D02F50D3938EBCCB9C0DD7E99BB5C66B0C87
BFACA998485E17BAF609934FF17BBFB3FA9C87CDC3B1F925309FA812249AD788
38E3B44480EB5FCF732B5A67B2A6555241CF946A183CFA3158B131FE4E980981
F1CC70181EBF890D73A241BFC256BB5DA9059815DA8BAE1DC3360844AD12B1FF
1F1BDFBE9B4D20B0BE8BBE3C1A5459A27799E63F1368C085C13265E7A78843F8
0CD719C44633862B102690CD3BABE8862D80CF92C4CC1FEA9BCC284306FBB91B
7748535602B32A088226BFD592439B08BC980967ABC4BC3F84B1B57D7018C446
4E7C0FB9168BEED683C42FDE3240279545AFA79FC1189F6093055AFE98D0C74C
13F134ACB02B19AB83CE82E3ADCAEBDD2B4C5CA198459306FB95E0AF851AC6DA
A0D7506F51AA0915E7D640105F3FE774304B36215C01B8B693840EF1DA70DE4C
2AF5272739A0845A1DB3D59FF29863E45945E62C02E2CFABC78B2980B3BE7D89
E7CEDDBB6167ADE5C062FE8BD1FAB0B491C365DA47E300A1535016A09BAE1E16
49A4C323B0A3615F0A8D03ADCB53EFA938F1A24C6174527E49F4D783C6B05B0F
0740A078BD25BD378B45D1E435C742685421CE3D5739FB2D0DA29943B6C73691
CF066F94CDF4023912BC88C49B2AE06D65077A9540C6B378A451AE9895A3E324
F300757C5501E528650B79737A2FD8E49D7C2E418DB550939D43C70579566673
9E9108C4E8EE43B6FBD121DF05E872A529B1D327EDADAC471596B2E550E773BA
1EFC8EB119DC2191C4967400CC22E9F119AC5F9B674B6570F3A203377F7D1E8E
7587EA96584B0428E367EC94AC69C92E942696B50AC13E4DE25938A4D87BD8AE
E6DF7CBE80059C2A83B08C6E6ED1E6CEA274C554B884C3BD0416A6805C6D9831
ABE1DFBF5E654836F18A3A1CB8A8D3424283A088E9C11220693EBE67E7D633A8
ECDEF6150166CF49B185D5B7507C7D2681AA7B1DC27D9CD3CA42D60DEA37BD54
A4F957575C6A89EF6A0FB8938517947710846F6C85EC4551C56E4B907D3EEB72
945E0294960A68E1C2EB886B1D76AC6489C35EBEB90DF1E17A008744378CA91D
C20139D1D4B8A07A3C1FF486AC03EDEC5C9094FFB25645C229D79B653C8924EA
89BA1CCA966E3247A10D44BF63153E8EDD8BD7A5C64D66319AE0C7A63A9EAAEC
6CE3913A5A406A455C4AE0BC827DEAB84052035F6FE4D6F7DAB3612678BF24A2
C5FA4AE99ED5CBAD70DE88393B401905CC577064DFAE88C97CD0094883CAB66A
5D307B528E3A5E413B380611584D8AC8B73CF4A411F67A9A095C24827550258A
6D8518EC6A0D79C8370E18D6BD3116F7837290EA3CB1261A9B45476E53AF70B8
969859F9F16E68C2BB2F855B26DEE73E360BA24603A6B42398895F1F95D5F68F
7B59F507F74E231EFCBDD4AFB595E8C3F0E8CAE46B2315958A21EC955C2532B1
A884523A0634F67D863030B38EAF8C3DC4948F45C5FEA6F70A400FF53C409C62
6879B2745BAEE9D0697AF1F8426A1E5AE9154694B6F60FD0489358CC01C762DF
9A23C079E0C210C0170C63EC209DC2278F449F602CA1FF684447356CBED03087
F0737B7416286EEC5042BE8B35B41D49664173837A114B15312281B3411A04F3
583066FADF6828187846D496925494C15C8124E915CFB9D2FE13E54BC833576A
95C2262EAE7BF294228EC2E2ACC996C889BB23ACC950355F6B935D49902A326D
79CD2F5485DDE4B9D40F638A3A95DE5DDD14ADBE77F8CA84CB6ED8DFD5C6668C
60E4BD0DA7E20DF9A5C1BA9484FC20B681A8347AA9A9CB4407931F34CCCD4DA9
26609AB8B0944993E644F567E1D1E8FD66879A6CFBC94F3C020CDFE95DE47D7E
9B6EE5B321A95A75156351331BA85FB36CA0D8264EAA3DCC3A1E39F11BADA72F
9F257D89635F5BCE63941F7F251B59037794F1780C14E17B9953DDEFD32F15B8
612EB0B53B525423FF55EFFF2A8F19A35BAB9A100BFCBFBAE86AA82FC8777D0D
EA8A2E4C533543BEB4530AAF26362B0DFA26DF487B9CA822FE46A3E94D1F36A6
BC7EC8DB829A20CB5E8460B1A7E5F43D33AC52A68BC65D4942B5B5187F55648D
EB13861769433C427EBFC14C67EC12ECA650670FDC930ACE62C6078C0264AFD7
C9D8F85A0018778B9F59614B5B1344B71B46ECF7C603D0B7FF4FD0258CEF9F08
72748CBF052E432DB42ED633E966F8C938A8DACE44B1975F47A3482312F75F5B
830B60C1D4E04394D1C268533326510B745C605924F8209ED49D5979934A1870
85871BCDD2BC634BC1008DEEB93FC881006FC4AAE7CCDD17602B9DDA972CF720
53ED0681C5482955394C03B4E15384FD809B87619E237CF2217EE3A1584D44F0
FAA995B5A04CC340DB8972193B1E2491CF96920F5F73AA01864B02CBF339D2BA
D333B9DC43F7763BC832D98B6674F179EAFC280D36AFC0CE55208D52C76CB10A
C548E190C5D06F315C37DF9A67CF75A4C82C469FE790113480163422D6F9CC27
67F6C69DA1E15FB0EF748845FEDE63BBB1947A9E29AFCA629199249E51641213
5808060F23CAFAE85C18ECA75F8C04DE934A10F46453A65B5BFDF2998A9E337B
D16D600121FAD611273F8C74C0035ADA5BCB76FF39A02F33BB37A4C06C735407
18421FECDF41F23DAE36C73B487574FA2E8F715F17BF3A32B589B4026E5F500F
D2E6B571C2D24231BC929CE717A87AC06B886810DE0B431825ECF331CDE712B6
804286383B1CE47F47E61C0170274DBD62E359A545DC55EF3B272FBD24A46D9F
5365A783EBD5BC945C595C9EE141B72F90D8D8FA2CE5E0A6F404520555E82257
78CFBC8512F6E3F6C4130F2D0CB03E49B49CC85A767AD0642E76E65CB9A2FFB4
CF40BABF9AFBA92A0C51AE000C81A3D1474F23DE906C129679CFDC5F037D66D4
50FDF53D5819F632250DC2172E8954FE7E4A91BAB0FE2B93E58C1B2F2A7AD796
8C04FDDEC31AF62C7347EB1EF957BE41B8844FAADB223E0FA4344853D2C2DD63
34D5D7D1735628A9CBC8A9564D962DBE15078F368D0FDDF8B6E9A8F337D0BD65
C6E5789B2AF726A39770BA9EF72C847C92479615DA1EC699C39229882AF0192C
767C2280ED98DF93FDD2829B9FA5A21173244F1711A2B290053C9BD61070EC18
9794018F1B9C56504DFEB2132BC031221376C52ADCEBBBFF6A6E5E0DD605FB0D
8F3732046022958AEC5F25E90E9274477E26250778FC7A3DFA6DEB85CA0AB8D2
82821ACEB3C64F59D0AC6F1A5A9D5D7FA993DFBA9CECF5321DF3C8CAF224558B
D0C009D77A470EB9ED9E667094025A81C470D33021157B3DD0A387E57B85D56D
A207C999CAEC4C445BB1B0B552EFAF18658C9609A7A20D9D0C84634A4CA384AA
ADECE46F4603197CF4D60EA6BB57A6AE3E00085D24ED6C4682EC6DE365C0D66A
993ABAF34BB243BC19DE3909DA1132635EB0ABB870F0D7557BD333B9642BF675
C978FCA80A7BFFC5825EAFCE16B87F75A33EFEF445766D958BBA6AA511CB22C1
340FA0B1CED843D05BBCEE546AA51B8DA8DC7647939643F54BDEBB0E559324B6
37E9A13D32A2CBB6051273F7D0AE6E10BF5A68FDDB8691980EB7965810461D79
0B92717B8B0F18C495C762E029C1E1C9C52EEB01370CEA117B5D66B5839780D5
8C28398D48E671E89102A5D5DE3818E473E0EE22FE1A6AF7379328538DE28305
F78FEDD561D1D1C444898498D62A4202FBD3619B33D42349E5793E1A050F4913
B81C8428266F9C4FBC7C10E9DCDB7974045645A03C4B642CA1C94F1794497648
272BC3956BE669707977BBB1B54C25B05258B51FC1CFFB6ECCA09D6157FE6F68
B088E7E44199949AF13E056031927ACB550272AB6CA68DC0E07C454009EF3A87
C092CAA751706436B013B73F5411891BAE58332EC694701D4034DBEA2C0F955B
888CBD5C12A4E21D678264154CDAEDB925EE944E1B0C6C636334FEB4D313F7DF
3B1651CCE460287CDD30D85C474780C64CE3283E558A848CE3BC9F4B77EBF56B
7A4ECA286953C83430BA42AD2281EB809E218246596A46D6570A9BD7D3644D5D
BB3E75F60EABD442FCC40EA91D47117C01D70565B71E1D6CF12EEE75669151F9
E2431D97A808C5F6CBF83FCA573E0F5A9CC7C841C2AABBFA90CEBE5509654A91
69DA39EBB4D17ED01BFADF46DA4727A820137B27252672C2B31C7991CA22F33C
D1E06F090A467B0F0EC88E9EEFF26E027581C475F1E5E8868F9AF37E40E128F3
067E279651511B870C3A1BE347D96801A2175649291D964E14685ACD81A3D1A5
47CF9D77191124E69435A662D8B6E2A86BE30E6F5B6808D349D8261E39A09305
8863126123EA90D7907A3F4D09ED23954960223D9C05AD1B9C468E4D60C5AD27
26CD7F422FE0DFBBF24462776C277A087496601DE7BCA57F831F6379060E3650
CDB2C87FA552F5999A1D3140DC67E7B0B3618E10ECF17EE37A6267ADCB0646D5
F3A6E168E4BC682C4552ABBBFADE42E309377B26CC9859EEA00CC3337A8FC5B5
41D8F2FA4654D530256D5C35EA4F6A6DF0234233EF08A17ED68AEFBBC8914D0B
4821DAC8536D148456ACCE89DA826217AFF782CB25E02AC40FAB0C22114AF8CE
12BA8CBC2DC53766999328462C37A39AD70EB58740DCC4BA984C3010A88692D4
F22EFC33F8552B9FFDD54BDD8C7F84484031FFFC0AE8932A64554FE4B34886AF
235C0907269FD2CA5D87CDA57D2501D1DED3904F3C5C0D1D4B4F510F70351551
583A0E4944D9E03CB49E7F507CA97CE92E3DAE3B06CA1627EFAB26A2ED30EBF8
803DF7E3A7CC9F3B87BB7E753E0CD1DF5FBD950291EF7ABAAA0ABD4CED4FD073
8633E82568DEFD0393D5F8A5DFD23489A987AD72BBFEFBE5ABDFA455CE1CF340
BF08021FC331FC6017A1B47E4C81BA6C9E6F5A1DD21FB74BB0BDAB944D660BF7
ABFF6D1D3A582325AF4AE6091C173F1D312169E31F9F915910738A742BCBE033
F487151A56345A22A24877E4A44991AA0764C566302A8B4AD3F6880A50CE3DEB
B76E5505DA0ED9C202EA3674FD5CDFC4AEB5E9F95290BF6633739EAEE0A62C11
AB475D9AB9E38118AE72BE10B49A174435B7B5412A29E08415D229FF54A45CB0
16BAF4ECEB5EA359BDD759F86539C56D463441DE8F10C616F51464EE6C761AA2
E1A5247399D564C91C1B998EC1A5BC132963FFA8DD0BED83D99C531BDD66F4BC
65C14CB2704579202FAF306FC8390A5F0E9406F0F88ED5C32175F9B98EF35082
F5A8CE485638AEC9B9B9D1CA469DA9D00D9E6A248413954EAAA7C4DBC2B2F72F
6D19FA0C4EFE4E73FE9669F35AAFBA4B5EC38C1B06A1B8A026B3CAC70BD33A59
FA968B6F04C44B0CC8F535EAA20A93C070CC88DAEA1DD887B6F6F6493A139654
34BE13B6C9CBBC8FACC6174DC23E6AFCBD835FBCFCCA999915D686FB057119B4
0830A39909C922ECFF863CA11E22408CC59E696F495BFA406FC24ECF1F285969
ADD849B80401D4A54879B7654D9CABE8C07564E8D25E37E9F257B275980736D1
D28DCEA01C359651BC1CFA58D80244BC4D6F73FDE34846245FB19B5036E5A408
185FE0EEFDC575B41DE40FC8E52F0331B58CD9A51ECEC9BD27C41F4FB4365874
CC0D1A182B42E4E0146BBECBD59FFC2B5A9BEE2F1E3CE6C9074BF04AD0E9CA61
5426ED2C69EBB579AFE2D055BF48B6D16FF1E326BF45358B2E69C3B45E719927
5768BAD50F420B4A3512341426BE3CE283775875126F296D561055659B30F827
A2237BB0883C2F934464D82C2AD666B381B4C8002485CB219AD22C6E76503F3F
E34DF9CB65C173FCA8B632488C3575263996A795AF62CC797E5B0221CDC6A6C9
28B857A82D089BEF27DB75EB55BCCE416F61E21362B027643E888587922542EF
81D363CFD1937300E202DEC0CF24B9CDE70956031A44A58F323478AA8E4C3447
F6315BD694C60B1DC7196E5A0D1BF00B43F697D889D033EA83FAB328F2E3882D
D505664621802EE1FF9C684AE39B04C22F133EB399262A358E3D9F84EB942BB3
B78CCE382098F5A0688C37159916CE4E8C250B697168235605145BFF1E864891
979D21582DFABA530CD7E45636D5D392CEEE53F0D8541B4326BD66E605C717B0
D2AF3AE6389BD72EF6CBAE78E220F89455BBA61ABEC37EEF797474364C27C5BA
1AF80AFCB3FF579D01FB25BE69AF496BD24EDCD438FDF1990B3D6FF7DE5DD0A4
7B01A4EAC712CA89119CD26D80A77DB33C56D4FD6A58DE78D6A70A93D28D5263
EE631BE20CC1F6D56A03DFB8DF16CC609DE88D490FE15EBC6A6956477E8B7DAA
F1AE28A6B257FF533F609EE0773F559A2CC00945A1C0134494FB14D3B3DCE1EA
3113A7856D01915A18C40F1AAD9DFFBE85F75B5FE65BC6909D33B6994BAD1400
2A0FD9C6A10BA41DBAE0CE186EB4CAC059E96E5E3E2D0792D63EE5C9F570FEEF
DCE0B607F4DAE3EE3377547DC0F5FBFA8B61117314F592CD8C5BDDB8CF7ACB4B
264482353D857D0B6044853C5346456FD749529EC1FB00BD88F84B1914911413
4BFB10D1CD4AACC908540C9F6C3D0CEC9261C52A409AF1057E6EF2CDD8C07B0D
04C4826D9C6C3281B02D757BD26BD068F0E0505D71A9704DCAA6A1B576ECE6AB
7ADA79E631F476EF89B12C17C7A9819713CBC56FF53C47FAB214FB3F3F0A3486
E0428524C673242D7ADDD08C2D9D8A16DAC0DA6B3B031B0608A63E80164569F2
F4629141CF756FAC27DACC81D3B0B0BBDFF98188CC21A6BE305080E8FC9AE813
BE7EFCC28AE5D6F4746DA81971B75942B47B95076DDA7A5E7472C946E559FA24
E5D4D17FE182E05BD63605132C01B84336FCF6089EB10E2C810E186D0C8CF928
B26F536ECB8A39531F5AD5435EC11142C3017594C1BAE1C8E075529DB215F982
6CE46FE7B2426A09D38C007F28E2F992F03835329C6410F723F127142D077194
94F1402183EB49EBA3143B62202487944A1FC201C6C5263EDD2A7CC63B5B71A5
2DEAF1167B008C218F2F1168CEA0ABA74EB432654661671CAAC1A9F7E87DD609
A40C735DA40E068D61F2BB10953EC36A606C0EC22D17904AAF144001329CB382
69BA1E9BCB80C73C09D36274C91F1149C89024DA3E3E047E650C69348DE5BC5F
443EC06A1BBE8E6481A48A9E0BAB973D0D64F93FF369928C40169BBC1FDDB8DC
DDCE93C055A44F9AFBB3A238B7DA900CDF822A476164980098F0CD6EDCDE5659
639825AC78602AD07851D8FE9BCA93CDFB09BF804BE0A72AAFE74199DA8D0880
56F1F132387C41DD88C4018836F196A026E9814413F0AC533EB8FBE0B3D8C545
F3F85475C51BE22597651714C1A4FD2F2D9066A382E750152A94A0A0DABC97B4
B2A944138C5415141ECFD96F41567A1C84BB4008163B4A2DC89E5A986BA9561A
4EFEEA93F2B21DDB602A6459B348382C3122A8B13093B821C878741972F2EB67
8096CC6273BC0D783FEEBD676599386A9FDE5675AC263B1AAEFE140A41475661
8D099CFD92306BA3597589213B108DEEA2E3539BAF7C4C446D0A563FB21B35F7
FE3C54FDE0127A28A39E756B2C6EEA79DD9FC07503BB17651AD9911C847E89A0
2D81AF31F328CCE2536910117A1F0147B8823D214AFF34946FF39E19D9B48709
CBCAECB30FDF85C8D7EC43C53CFF842DDE81CD6B0FF6176C13E0534B375CDE3C
A6DD714173FD7FA0B9000EE484675DDA6A1FE2DDD6A566C548B1908A030F577C
091CE0F82D95D2AB8451DB683159A39410A442EFCDB978DDBFA299B671DFB015
8C60C1489AC41F98AB9170FE3FF24DE68A2A1B25AFC7C14D2837DC75177E9546
00D2E2FC7D7E10BA4420193233FB4633FEB116ADAF619DC53F5A2A0C89BBF1AB
58C3DBE99A3FD440A88394137AD227787AF4BE2550D66F76F6E5E4D192A32148
45112EB2514544F9411401FEF77C14FA64B966573731E7FCC667A5B810B66551
9E7E1450E00BB9D02798460770BBC781E275BC94ECEB7BD14D250DEC8EB35BA5
6B501A1A93863C0769D51371386E56CED10D008EC553B83A31C3F184C1D0AFBB
1732B56C5C539774ADE7B614799A3E856B29E021998954C7BD2E67F7F7AFF761
13AD7CD6479A34E1B75657B41FFDB8AF1C9E3D3CE95EB5C6039FC62C37DB28EB
BFF30F651543A11127279FF935BAB8BF81D378FF72298CA4CF97387BB7F05259
AAB3D65561C8FB4B61B50B52081FDE404F6089551037EBBF4C2ABA57EA3A3E96
59D39DE21FF5589A018331D25E5B0B02D53CEE71D4F9F578518E37E431CD2798
239CC4C9485DA8022E9414A86AC30CD79198DE3038D43DEE9C4100C91BCB18F9
F1704B5B90966A67F84AED0E31A74143E389AD82CD38283E870A8A1B5899BA11
83298C0A256E6AFB4BA32F85209065B61A9E7C56EEFE751F19938EF201CB09BD
D82E4D6E2C479BC9C761571C27883C79BE00C6FB9711CE71D9034EE8704CED95
34746FB31E330BE53B0FDA8555CEDD6B1BDFD5E9ADEEC72918FDDBC862112E65
2B9837ED5FDB244AA92EA8A2D8C1AA64FAAC7952CD3FFBF21332C8A46FEFCBF5
89BCA0F4BAA4D5D965566A0890E183960EC2B89D57EEB4E8BF20057979A98A4A
10B16C4F5BF785FE50E8724E521DEAFB89D35DDCA32974723E634E3BF6070DAD
A68DD529E4249050E74F451CD294043BBEE29BBB9093FDB99991507C71753EE6
04A02F9E0115BEE977FEA781C3B8034170F9FCF6324AECC253E3B356B95AC6B3
0A15DD6412430C80763C8BB4F51DFF5FF4F216B54BBCB0822D88E46C9909074C
8B69A24AF473832817F889315EE92C675CC9143DE91EF77879A07E4B3D06974C
660A27F619ABC0E178D15C8C2172701E68D5D882F429B57E1C863719C70EF2C8
B862EE357855ACEADD5117D4303EBE3272D35C4D32534685FAFB8E2FA3B38B9B
D25F2C96058D5FB62D08CB3AEFE05BF3222C9510AB53132FD5AD8641E5ADF045
88FFB111A1448F83DBA4612F4F154D279845222837F16E8F256567CC438CE60F
0E21E28BDFCF6683B5CCFA9B34F7F491C69B2E44E394B6B7765205D82B56FA3B
BE60C5CC7E02E8BA2137CAD04FC9B35F0225CE04001919DA06CEEEE414994C63
199351A0FE860FE1A87CD06DFFCF2B7B6B3CE509264EE2FF75C9CE88D17D4C34
A7841ABFDA775D909B05A0FB959AB1146098A7CC2A65E478E700EFF0280DC344
D4320156E9721C0542A01A74C65AE1CC6EBEF110CAB8928A5226727E2739D920
F7E4B57A6E81960CC0321BF3AC8193758B4610EF33F894F326783A421B65E01E
FA9E51AD12185C82FA0BBD27CC9A887BDBE4D46938F3FDF31D90D4DFE2AF136D
A7ABD43C111A11CE3AA90DAD770B1D437D7261E134C4456E0CEE329CDBE5CFD4
44687D19FC913489A015DD99D1820C47ABDE26CCCC59EB4C7D600053A3BF9F28
CABDCE6BA0FDFDDA92FFFCF7B2D6744C0F0A489FCA954A0C135929EC963A7A7B
BCCB0FC874E908FA01CD86DB9A103622C2A2A563B6A59B12647827BC6F11BC2C
3CD7CDEF8DF687074B9EEC298FF23590730BEC61ED49BDEF56662CC87BA45B68
882F9207ED34F28DFB622BEE85BFEF35A03EFE68CBBA9BE7F639C8B27C1CDFA0
60DB92B1513A4453AC1931EA941DDF494BF31E3569211E8C664217F8A72E69A1
BA9D358A66D35D6940A3FB53D1E5F07E1AE8908C75860C8EB024AA27BFD60320
37E2C144E28BFF45165E55F75184B73917E43FF456B5C436F4C86647F5024D51
CD78D79C802EEABBCA93CBF9681B8608CC919FB1211D04CCAF2BBC827A2CA8FC
1D6F293D3BE74666351FB5B0F41859AD6088A3E1CD3804FCF1ADCAD1048DA2E9
134E43358A1BE68E4C0DC54C87637B749A171848133C2DD1CD525F4943E97917
C37315BF6F929E354F63B8D51FA9412407E10C862D6A8E39A380203B847BEFF6
40450A466DED6FDD7160AE8DCF22955C196F116C24953735BCADF380F38C744B
43BA680703E4DA617FBEB186853AF881896AC53EECCEC90B036F77EB9EE9E372
22325DFF2C99771F68416207D96EDA8A688BA9E5AE773974EB997C37AA94C013
84B5CE961657FB7D5B97F2B4B202FB3FE09FC30618363E875234D5138D9726E4
C107DB8AFDA538CA6BC0754BAD59DF4558D2D608FAF16668DAEAC1B0419B23B5
11B494574EF19C612E183A6EBB54FCEA2EA5FD413421EBB1C83649DB5CEA0EBD
24BBEF4EC7F8524E96B9FF8F31944FBAA319AE7A780F68DBF95FB0A9E5500AE6
16D7CC864B7F781EBBD8C93AC879D09B8473ECCAF37B7EC4D4B4C56E14EFF98C
BF774931AA81F3FF5E899C31B8CEDB6D22E8F2692601580601DFE2AE420A2E93
EDE9D6416B83ABFD905E60E741955021C9A52A0E0884479EF4ECCE39B566F1E1
06973A178AC6BE93FAA4D990B61CBA9199A8FA809CF94AFA2DF910C0530A8383
46B7C97C616E393DAF3553A532812D3FA2AC877F8E16E0C392019E33F268CC07
2F36EF12310EE7FF2B32BE0179DEBACAC5A6DFD51F6B50478576857C568F0C9B
4A0C28E33ED8B1554E0A8355FB22F094214532D855DD19775FF9493B52D1B7C5
FEC6B1E2CF4DC26556B00B463426F8066DD493031D1A59F5D6A30B4F76D86C83
882ED85F0774D624F252FC5295B9165360A1645C6FE7053A929AE90D2C98D1F1
0347D2D654E2CB731A579D72CA547FA69A848CAC014692B1C29BBED6AFD1F990
9F3F85B2F8C09EFDF6F15A78FF5F862D910AFDD44CDD848945C8952D424F7EAB
83B736407F14B549B1E8C80D263159FB18C27A41CE503CAC983D43467A18708A
41B051F31A13C3EA3D583D1AA7FCF56E5AB317859A338B4394A3A0E36CA816F6
272CB6C51959F1A2BA3EAB6FB86ACAD4DBE2B70E8198A1BC0A9529BC9C0A0023
58D592FC36D03D8FE57928267D5EBE3C2CA9BFA0254541A3FE4712B1D0739BEA
5B0586EDC6E2EB30D21C1F8EAE49BE6FD22C33BF48AC15CCE2A38F307ECA3FB3
31F3B29979ED65F8A446990DB005B6F68412A221DD79C048B6BC06A44D455153
BCB8E3E01067B30142C77E18890BE0453B6A0E161340B5B8D3187BF9E1FAD9F1
BDC1012106D9D073308008A690925CF4A27DA7CD664AEB24C96DA18C1192FF5F
EF8BF68D616695ACD14B3594882B491A65DA0E210D0CBA59B887199F7C2BE1B4
1A88C9D6CC42C08D857A01BAA2C5C2C79D8578DF1E5081EFB6EBBD8AF7542BCF
005A05EA389DAA2721AC6E6BFF0015EA347A3241DC65622EDFA8E6EDE9A47DA6
2658B43CBCBC5E8B1C0810312A3CFC4AA9737766394E6DCD202B31E516213A4D
F87A10E9D566B4A07963E6186FC14FAEB626F3259092F9FA2DADC766577FC0EE
FABDC23E27AE1BC097FF716BF29DBA2BFA67306C1B77FBCE256EA412CD417BCC
FF9D767E309ABE6CA45067EFC6923A5FCE039A9B9DF1F5094614B011A11D2BAD
116266894AFBA1C099D37DCDD109EED2FF28FF48234265B4759B50D24BD711DA
C55577413EA18E2FC03785050C5449D652A4BB7AC68A26643DD9D91FD3F5BC32
979FF087E9104E689591F1B52672D19C83F5E4DD8F082C1C06DABBC062403596
CADD513DF59A6BC343C080C6837D8649DE0D2EB663A6DD188EF1B5EA48840270
02A7F3FF6DA7F1750CE5384BEE83E58B1EFDF083A5E8E4B299607534E588FF88
BBF75911EB0574543D4AA0D04B945257A16BA754214E9250333A6E6952EC0BD5
81F6982915069741D5C479A92C08C10C47D073BFC67E716E0E67A9AF9D5A9402
B18C7C8B9483B4550C5B63AA86F461BFCA67D6AD3083ACE6E8873CEEA795FD17
7E1A9451A1074186C8F847D34E61656DD8F61C00182DC2BCD99B342028786E7C
D440BE21B75A75962A0675857389A433E787DE986BE2D4C88684059A8E655208
D31F95A44F8808F069DF5AAC06EDDA69B74D0767754DEA6F41B19956444E02C0
EA87077CE767994941E9A5D75A8FBBEDA2F3FDF20CF77E9E5DD9F9645D2BF1C1
AABA1E2AFB1682EA8409E9FDADC7DD74BFD2C45FD1A30675D11E8F2817E361F9
2C4C120D501654D663389C4B5A8891EC5F847FD1436645621E7BB1F48EC20E10
1CA02835A2E519A1C45A14C3DABFC5B1D63FDF71131FFF47E4533DA66CD99164
0317676B32B4F8CEFCB79818A6D66025C20BC5924DBD3DE66FD02C9452E33AAE
83E984389A3B3720FF0128C29E7F9F53ECB5070DD0E20298066B78B7794DD450
A9BC2708F01EEE219550308213597BA3F10B16F3BA05F15AB776E8050B059839
586C62987196009925DD634FAC0915F66AA1C682C801168EBB1BE001A9C4C6E3
EDF8B2E3AF2078DD97E7A21C82EEDCEA0D056AE9BDEF7E850602B6815EBCF3E1
9A3AD3094F5C09CE8B3DF6AC2916121CF4F0EAA6DB19910F971E6FF2CF7A64A0
31CECEE3043686F4AB951F2A266E21A71D0C319A466D894B1B0FA00E3C4B7983
86E997BB6A8F931D012BC2CCA69154999E7AEBDAC87D5E25B998284A6F868D9A
6F9AE15E8C704EABA8A055F8A2E33E28344A7A9EC8F2CD1FC3F74B4AE711E125
62903DCC31AAC0425BB388754AE683D24A28C0E938F608AF10E3B31B98C36E5A
AA15FF94A00D9B392729CD435B3D4CF6C5D452A51046621D3646636F422BCAE4
14F6A7AAF7B0B472230CDA008F37FBD74DF665AF59870F969EB6B887FDEBC906
9C29AF8A992F20E2AADF530E5F627D5E2622D22B75FE01501A8E798576CEA778
12A61DF88B80A192FE55A90B9B3B2437BF18643352C44EEEF192FAEA9E385213
CA9F3E410A3BCD8071713F6B48360DFA3D67CF110C24156A3309E72F7872F4D5
4B8ECC37EAF5F56DB332928B8607A8F05175C4C785DBAA505C3908ED29EB92F6
33AD7021050F0F4C37F566F4BD5B50B88D0B2A036813EA9F5DBFFBD764E1E646
FBA33DF8ACC3D8FDA57B2C1B97F807E5AB84C0E6378D4022A99E04D656BADEFD
C4FCD4B1697443A99FFA4491F2B85D31FA193D22C907215FA15E294C42865BCF
549350CB0F18A3BAED64A480F2F719812D43D7807770C927143018447A70FD1B
9471FBABB9E3A838DF0A05418EF3E7E049F1672E281F10A7BD45DA1F40FAB7AF
AF337616923BC23B9AD265451A3871DE4536ED419ADBFCBCEF3494BEF638403F
3559D63183D4AB1457A7FC9CCCF0B4CA84EEF0FAEB46F01BBD99D7C41354B728
B2957531246C2F7EC3316FA1A0870CF77A3E0EDA333E5B8CEFCD58591F939ED1
3ADDC5E6EC8DC24FDEB0B8D539D079FCDC56E9BC4B1AAD393A3958BB81CA51E5
B0366D04BF6D10592B7BA0CAF760E6F4EDF66FF4C145358BEF56AFCAEF0FE985
EF1B050074D5C3F8F52C7AB228D1D96EEC6CCAA9476858474D409F6639846313
732F00893A100BEC19E13A6511D4EA600B1ADC4C374C2D71A5D46639668C6CD6
A238DC736A95C247199D4BD41611CD31CCB7C0C7F7B5FBBFE76FF489DC229E9D
6599776BBFB68F56B987062BB572374B835896149E7A2A15D52C145586E1FEEB
9CC93DB0A10E1E85EE81B3880D866E12E2B87190DE920514ED2460D9A9EF2A95
B7D987384C7D5E552E41C990EB2A6776BEF8F9BE679F1915715BE8284116706D
87DDFB52C6CADCD8C1884DA3B44C9AF6C8BC23B0EF11F42D77B037B0FBA02255
5B0FCC1421A0B660B738180FAB090EB580E8B7B48ECA10C3B9FD2498D84BAC4D
6490AA1D3991F38E8A011FDBCE922A16CB785948643D0592AB816B0744A352FB
C02B408A62C5F4EDE17BF86E726CA6685A021D50886FE4E385E858EF6CF333D9
87339F44013A4950D905D6AFB4390B62A3173B522240F0D3AB743BA41FCE8D61
2125A9132BBE333BF49BE67A05EF6637876846BF7BEEBF9D323B549CAD581F17
DB11717FE740145B51C8EFC7CEA6075FE46A0725A98DAF86117A339833040CCC
4A20522124F8B7DEACA9E6FB322B9B66DE5174071B1EFE2961140479458987FF
E44E8010F5D4D89FD801A78C4FC2D4E9C449E1475DBC00969FF873875A229F8E
60F191B34F09E5AC07A93715F48270096248080DB864E6F1A686C9002A805F8F
3BBBA4BD19649A69BDA0DD30154997E95DC1364BAB09FF0740310E86A38C6005
2966B754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7E3D7CF75CB80A8ADBE2C55
747D7A0FA7A1FBC21CEEF37C4615D4C63BD58BFA6997F0A2025CD5AD78D6FD10
888DF7E7FF54D1784AB5147E07964DF19F987D05A66A84D975A364F3F644B4D4
E3F3B994D4A636462426E2027EDC6E5AC069CC8FBDA26E66C47738274E1AFBB4
63A91AAB97CBA9741ECC0B04498902ECE3FA1653ECB3BB3FDC0E20B2B90D72D6
66098EA2EB484D0FF08E196EFC5F2CE715B765EEB52559848AD4A1D16EDBB8CB
4667B1C9C8795E869B9B75AED2DFF58FFF4C5A60CCF5DD51CC3DCE518DD210DB
1B6133E112A3F1FA8AC72D13019A4A0C7B838BF2BC3376A7DECBF4029F6829A6
B55DCA4DB5036675013A692E04E4FB0529D7542820803344CB844CCFF0B65999
F5BFDE515F5F842F3A35416BE740A541ABF8B27C783BC9DD5AB2B88A68AB6F62
66F12249139B2B268EED29D4C4A289E5FBB01D6E901513D31766564532C8C2A7
76AC7113513C9CFE40398AF3CEEC68D53AE8E2A2903D7F5C495E6CDA6EE41B19
AC43A62DE7FC6144F14EFA0AF684D22F4AEA4E3B8115514B0FCD8B218F5D6F40
2974C4ABDB326584908DFB6E1E161AC665CF5592327442639DE75C93E4D6213B
ACF1CE0E233DB1C4888FE46B96E78A9D5B7FC4BFCCB5ED1D0A668FF731A43F7E
85F640CFA5E7F8BDC7A6408DD3F3A26C1458B3F69670B72A5D4C1CD5D8613BBE
277859BEF379A1F1FE5E41BDF8E59075D83082AB0165E5E7BC1F9B15E42D7876
30EAE3D7941F54F348E8ED022DAD1ADD66659FD7F848C2A7E0DC4D69B6793520
439F2F4E2B6001E9305D4D6C43906892A62E27D5B5C693F73285978419D2D84C
E582ED340767DD50BD28E2DD1BE5847923EEB6134FD6F15A5A9ACD38589F75C1
C940C065083D08FFA1D391A7728D51B18A0E1DDB27E711C889B7DAC893F493CE
AAB36A6F25C04968AA801A46BCA9E0AE0A1046F3FCB1C967F9E6D970F3267FA1
B2F23FAF2766D108CF923AC58833C62089D3535C8FEA668A5A880CB55A039277
4AC6D5A0835DBE255F4D1E5BB788B2873C25865A3D7DF9C9B0C007F4C50242E4
13A5CBCF0919489243E74CDA32510F5942F856A7BE55E19024D61410B56E616F
68C39C6E9A706EA336F89880CE4C5B805C3C54F112F7AA206B7A61BE5A9574D5
351815A959020591659CF35B170D13D92DD0C9B63AB39FC05FA6C1919D76F488
56A99E402CF6743DCDA4ED21FE5624A7F7F8335CD9861E793DFD9F79447DD2E7
8055805035AA0E4B90183E83C8A9EC6C711C7321B38A1EA2A6F5F7E6C47DA550
47F104F23D5B986D4E195418CF7BEC77BC89471E05D11774BF8864CC28D7AA58
530F26D30BC61F84B1998A8C3B1BB31239E96C9ED3D4735342E2981CCCF0A0AE
F411F1A4C7CBE809FCC420CC54D98A24C993F15D004F3B44EBEF3B9AD0D0FC46
34CD4CC179DFC5DFA3DA805DE801F7FFB194314BE64E2EEEC7458BD47674FBF9
91C16363E6FC9978BB140DB619D2AF816CFFFC5195537EBEA0CDBE0E97966CC8
5FED7D5F8E2E22119EC9293FA8EE03406052BC89C84C51E73B4ED350A51E15C5
C333771AFD4CC501ACA3BFB1D525242F70DF855D33984F8F04AAE461F510686A
D2B54A3EA551C8473EFC6B8D5EA243381CE149489993F285EB3ED29C78C14216
A401352FAFEBD9B7B1FDC3EB808E52D50C29E09336C41FCB4B69CCDE02E263E9
3BE95CEC6D27166291DAE56D1C236C7ABA8E4FC520C715C8F28A76B0B05958CB
504F1E33F19C139AD311893E70BA49F412BB6672159A89567357E1BA441F3CBF
E51A9C9E02A186B575FAD02C23584898561F0E29F34A789056CD355ACDD22B77
33708CCBE7FC66C59EB93E088E269A51C6DCDF72244EC47DF787B6CEFCE3AEF8
4C1C6C9244C94E2B75438E35F1FB6442EDE8CF88452EC270A63599C3A2B7663F
F1DE68BF1B98D78FC48EE33369FF9E3BC38B738DA68FBFA89BC3FDBFAC57408E
33373D94A4C6AB4854831461230AFAEBD394BFD2C78BE746291E82BF0953518D
965CAF199C5BC08FD5A2B8559DAECB0977D754849D7246D523240AEBC14FF110
8040BE5EB05033AAFF42719273B157D4B16FBDF5476370C9CF7A25973A13BCC8
B2CEBB33B7DA0EE852981AF564FA681B63AF69A845515B86F49ACE11C4DADB37
35D5D02F042B62A239B791BB0FDB28866065801AD1B46D5475DC1EDA951555B3
C47B469902025B77FF0A1A4544DFA0932B65C1FF77C8DC607A28DAE4D1A0A740
0D0CFB9EB7D7DC8E3298B23C271ED84D82664124205B958653F5ED557EAD792E
A8B36DD9FA0D3E24F2FDCFF2039D12948C0D61E1B802D9EE37F2BD47A84D808E
1A69254A546B6DA850A47AD56A7642D642E3FDAF0D0C55898EC4A3511490D626
74C7C0E8851AA373EE1682182CD09AAE507D530307B5F77C1DBCD95A68CE7860
BCBA6714B25BFF9A5D9E9AE7F43FF60993FF31F689433854D2BBAF9F763911EA
B651E1CE0D07E0634D699E6C8B45CBF30B07BD577FA02EF82CDA8FFD610F9C85
4F299E32DCB6C265C9ACE74339240131080BD6BE2014405AD0EF2B7EFCA169C7
61AFA83766B97C18D22AF7E6C37F1B456B57CFA6C2C4702050D86C1A8C6DCFAD
D05948704DC5855938CB532FC2605DCB157AB63F338F17E6A04BA8733D38C6E0
3028539338323FA500A9DD06C76E49957C807FC6293A50FDAE33BFEC58795ADC
EE3D1D1842CBBFAD9FAFAC89AC929C7F9596638275229C3F31C36247AB4AF93B
388798FD878DB9AB8CAC9CDDF8C81635B882EDB0569BA5249AC7C9DD280AE72E
3388EDAF5798E1DDB5A85BF6BF0ECA3A07E76A2E0D9DFBDC28DE95FEE6B9E625
709F8EAF9762AFCD5822F59F181789FDFD669306769B94220EAB4504B38D7964
534F81DB71629D041E4669A0FE8170F626E1A9A1CD965091FDBF569AC3DE5257
78B2FD0FC0F6B70EC45F379AEF4FA37B44584921E93F0F66A410FF2388300CBC
23190C592BD0D93B02F1CD2769A2A053B513A289FBBED7EDDE2A3C0B907BD324
7C17AA18FDD2533091CF0EAE32CD4DDB02C0DAF70B3EA0165F563BE349946DF1
BEBB8E4B55579F650883B74A93A450ADFDCE66A9A7E2E3E9B7B4900A8A6A0B93
FD7978A0EE0AC180F284CAD3061C4A094948F099FACB6315A21101DFE660A7ED
31A521F6E39C3B147F5A4219C8A0F0E07A4A32026441C5D18EA49C96012204C9
9A748817CF98C7FBD5CD1A86FCD94A6BBE6A79CD298A2A9BB2BAA24AFCB45CE8
EE530248C90939136CCA6B97A4BD252314A9076DEE26D46B1925F1CCCE379DD2
8D8D2880F26ABAF521DE5045ACA858DA0C4CCB24AB7FD41ADE51976D13CA1841
FEC653F131CB4AD552E41284EFB67E80C7165DF3990E49F86C4887E5178AEABE
5B7EAEB9038D34F74BD52D60C87ADD79866447AD99F5F5A2F2055BE5DDA5EFC1
14211075684BE4E0B1B82CB2BB818467322EB65A2F8B5E6753B0BD6A13E03AAE
3BE319B0850B787E4093B6D98227C2F2A91171E662356E927A169D13A26089B8
A52089A48557BE828FF760FF29094BE439E9183AB860780F749B4F38ACDF247F
1B7A4576C4185C56C6EC5E9509DFB4A1DD266A5E734914E25DB6D672995D9673
7B8BF4270E9B2D508D5760BF6A38925173D4FA1470A62AFE8B4E25F0AFDCB015
9C0DDDD9855A3BF960C9D836B18423BA97773EBB1425EC76E6771078890DBB1B
D9B8AE10E27FD596C57E6E7DE3C585682D31ABEEF2B93DDAC68F06290C2FB6AD
BC9C35E0AF2F2776D9780FE836C6B09ED922CE1D75AFB6A31390C673EF511042
1FE58343EC52008F698A831806A3EF9BCEB1A1070973DE503BE311C1FD313DE8
1C9E0EE78AF0299948B512A08F6A0254E2FF810C809D08C5CACC41E137094229
40A8C369CB9D9A4BA6ED5F17B011E0FC7DBD58CFF6DA23799853F02DEFBD355D
7FFD2E5E089994281EE90448387D6BBC2AC00E303A159F5E18B7134320125DD7
9E24EF13D6591F4B05D8CC8F568126F5EEA0991F80A16712C0E58457A6691229
B130CCA177B5EC06D707B7FD897F4C4D79B330C13128948F6EED58B881E4B541
41FE6EFA3DA5F5778A1688100AF8DF0F95C7037A4508A7C5C016C947DD1A8F0C
26EF7C3719955AC5237F42D466FE051751FE7651EFFFB7F671B02C86C84084F5
F6378C97BDB72E71E98ED9C496105616B0EC1DAFB4650D17FCE9315334497F6E
3BDBABC7F48C0510E27A745F8BD212B51DE9D23E19E54C4729AF869C633433F0
249506C826AA50C05095819E13065D3AEE97C1BDCC1DA71150D73B5565E31B9E
CBAF8E5FA641CCFB8D86C5E33DE25F7D0EDC7F3A6147EEEC6E12F1035B2F2A11
C5A287EB40857160563BF6A400D0C2D3174873F553074225271F1C9F35973BEA
D2AB9172E275D7E86241AB753C3221FA329F0A4F3F6E001EC127B9C7E04DC26E
7DB26EBE4A48143752C136EE4841CA09DB53FB344E0D14EAE1389542AAEC2E38
9E37E32C67EF749F7E1253897B645607270C78B88303AA789B6381305B24724F
9893B4B6DE7F1370E80B2DBEE09AB8BFC4FDB4B833462C536E090994A528A8F1
C9BF53481F6D0060449673444C3DFB9DBBFC9654C77643F6FE3A7C305CF55BB9
845F5CF25C91AA477F109A6AEB411CA7395CFD7431D2D8F12C0C7B5C3D9900EF
0D6A327088AB73030A9F3040C9216C9AF8DCF2F5E60EB9A8921DD3E156CDFA6A
224A332805699E453A2C34F3FC4EAC9B0271787C3874D69722D542036B4F57A6
179CEF3CBDA117C5E2FB7CF9ABEB530C75A20D6B508586F5DC1EC4CF295C5018
FD7C298CC148F09216B0422F0708F19802EC480818A5C5A7E970FDDEC0D58E2E
9B6CEA39787DD04B6C59172F86C56D1B9967B2DAB07F8139A31D759CA3AC29CD
22A8070BFC6266CD77E30E0930FD29EE5D48F06EE3C01FB8E6053A3E5225E037
7ED302490FEA15C54BB121F682FFC604C34CC787117853336A14E29F8E02901E
C4D5FDAAF60852255BDA2CDBA8D636327B5034E29D92147F5BF9CC0D4C1BFF63
624E88D6ECE59B544E13E182530FDB0AA058022F0B2E28D331DD76CE5BF2964F
874A723D1CAC0E6D760E78EA5994FA49224C83D0D8D3F0C527F3C35B90DFB788
3B6754D85BA280459BA0029E4201BB79FD5B1CA92E27868AA96F22E6A3AF442E
1C494B9DDCC1D96CB2722EB03D0F3528DEA8B7398AC0856DD871BA9303C433F6
80D8C110DD19880CC11963FEEB2714ED08D771F9166313CC05A5A90E7C58EAA7
4DC583CA9E37CC4919FF81037B953968DC0AEF58B82D29A0036875F14FB78608
F33A2FA26E06535D0F0AB272E7123600115F06D54B0B447FFF12EDED77CBCA36
413066E88D65D253A3B15558D7E84C41EB0A13299AAC2A4BB9846EBF5D8EBEDD
9C0D2D5AF9D7502A28727EF86A8BB90C3B9F2E485605C07DCE3DF061852743D4
358D1E539AE7C7A705270579955CD3D9491197DED446F5CDF5768A98CDCC57CB
BC9A49408580D759EA7288B867E9E935DB0C33C6C4A1E8D5F995B4BC32987E6E
DE8FD531F9D40B51DB6035388341D73389E186474348DAA7557C052F27ACDD73
4A558594466D99802CAB95D3EF907E98DC64CC41BC38BC0DA1315457FEA14D0B
E2566E9C53BBD2F9F0891F553381502684F3FCE09EB74977B45B56225422A4AB
4F6BC381CBC3B62E2E8C99212AC6022C2C9EC31D242B07B021C69BBF067F1A8E
9619B21567EE73E2E44773B5886411CBD91ADFC26EF7EFECFAE8DAE0DE653F75
407ABCBDE412166FAB246522EEC2281E4DA5F77C503FFBC1CE3C2142B22C52EC
63BC9443C0E60096CC4A2C6C406D54E71ECF9D86095BE64A36FA22946B993026
9C15EC106EE1AA2F923DE3532C6E6FEB9CD81705904CD4502AF1A0C81D5DDB31
7537758FFDD73BD5444090C2867EE0BEF945E0A8B3D0BA3D089816CB895C69E1
5F46EE33875FB5B70F1677E7CE99D64D163116F6A0BDA2C6EF0C026E8818B4FE
A12D19A767726A75004056AD91960CA0F292D51B69208FEBFA1C89D50AEC1914
5216B110F9082AA6848BE230BDC164F662F73C5470EBF46A496E7C77173A0C7D
BC5D82F13D7F281B899E45E276CC1FC4EEA1D860D2A3DF30025B487F0896E7B1
0DF41ACA649B9DCDDF7CC50C3C82049E8E2D461FB285E868DEAF91B7B55F4A12
F45B3ADFCB2855057E5B40A4B1F190E1C64C3A22CA3BB3D07DADA5BD53FDFB74
720C2F480A3A0B2B27F9C2C686EBB7605C11CF6497EE5F8EE0FA7F2260A9C370
4C520A0C885D3630BE5D21B8578682F2622540EABE4293047B7BC3B6146A0FF7
3318128A95A1795E0C011C54FEEBB1443FBB2695432329F2BAD37D218B1C3735
5BC2D6876299344978310186653EFCC4A4DBCCBC740FC4EBA1C8499D919EC097
E7FBF1321FC6F0FE5C2D5674CEDAEBA46A5D81BD0FDF6E2FD2A0EF2C2576310C
FEBA4460F1D35C330059F957E1A9B91CCB3EB15CD177D9EC1D292C84CC3FE40B
D3F9128AEE88BF7A8D18BD2AD151059FBE2490D76A590FFDF6EB037F1E689E0F
0A3569BB0B06CE3AF4C560DFE4D4E3ECB2B269A30A2BF1A32A445A7A4397A47A
7C3EC5AF5AC51297478E766F0F418240C923C839414BAE3CDE2423FFCC741550
397679ECC80BEBDE81619474B805AE3C1C382DFF13485942ABCFE4448F77D161
F683B4FC8665A7502D3B45C31AF4E1B63EB98B645C0B936F60C51323B2DB435D
28E8C3EC7F666AA136334F9D5DC99A939705E439FB60A672833B07D9E12796C7
63418967080CE7199EB8D4D43BA08176D6C252E6E3058F928CB2F40BDAACE29D
79D0537E938B2E1DF23026FFA46843419BD51EE68C0ACA25DA4ED8B9B211547C
21B688E5CDF0E2192583943B3709C7F0BCDE736FC70D0BA9A30A770975E691EC
815A22E4469FEEA4699B949C0B2E47D3B43AA2F867280749484684C9394BA931
AC470CC486A7023E7D55A07A16EDAEB971D48B5C9EE8EFC505738B7A86921DE7
C6BA59B555057118D1439CFB8E2BB1807D05F71CD140B7E5DE21C3153934B2D0
70490B0550426F2A95D5063F7D87E6F75934DBFD51889074A5D967AAF9814613
94767F4B425A76D2BD55175D3A4C054BBF7F35F0B615C1969A21C968F0EFFAB2
385BABC249E64C6F440F692A0F4FDBEDF4B99E110970CA5C68266DE453078475
99B02E5A9ABEB69E15C4DC345B55C6AB5B61B728FE9AC5D99D69BF861FEE372F
31B25A6F47DE95032B9985F716E298B76294D2690AF60F9B0D3736FEB22909FD
C5E382D594A31585D88C63FF75EFED0D97ACD7F119F22C4348EBD1B98BDDCF30
79B484BFF6DC79FC4B71189C3E1AE9510D86D19F8370A3B37D2001337F2AD8B0
A29C9843F4642D12EA28AFB232BBE377DA1FC8450D6E5D1B8B60ABA1147FC063
6C5B75738FF07D1D81B8D2617EE27BEBE445DD11FF240B19564D8F5C4ECFFDAF
96D59E29412A16BDBE1DF302F7D31EF1934BBC33B2C24621107F542012567270
F0032E465BAB48EF6DCCAEA00F0989360A309189F9CC9A8836EE718696C30AD2
6EB334517908F58E5E195C41AC4D34FE17373CEE63F0610B9CD4196CB4B81460
D86D2B29B7CEBCD282C033946E4A90A1A07B497CE7CA888BA8F7951A4C902DF3
C857F390615B33A756789A9D318AAB5AFF711745161E27D39A2A46FC0F4228F7
7FFCCA84DC7F6A31C22C7A5D3A52D5559F36A861703DB10BB121BA2F20A33EB0
C3BC8C7975B8772F6F6FB78384ED455B0588ED61872E846D6014D918E112CF2D
FE44733B137FEE6D0ACB4E6B190B66EE57D0893935346257BBE056DCC803994B
0C0E5BC93D161238D2F9C0FA30F1F1FBBD39E6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 101 /e put
dup 103 /g put
dup 114 /r put
dup 115 /s put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E948890C25563CB26A068ABABD94F3D42213218F2ACBB2F5B317311474B222
BE1844548554B37C97284940D5B7AF9E4CBD884D4994A76CC1ABF8E6AB0676A4
0A8130F05B0ABAC088FE4F9FB536924A55451C8772B29087B8E5E649DA3B449B
4A055214DF69D0218549440B3665E4D20C5A8660B3E0C3ABBA3426E7820E1A94
5D273A6AC95A2D8497060AC319A3AD39ED4E3026F21EA249CFDCFB31C699B3D8
FC7989EE78FFB2B3FBE3FD205B07E3E47AE098DF7B51E588D1F11DD771EFB1ED
519EDE1D81A96CC4DF632E540F55DA309C79C845598DB7E7D89B76848631EBD0
F011AF9287CE30BA029A4238037261510854AD27CE69A8681B5FFDB41D279DDD
B1C31B92A145530344BDFD2EB8E8373B588A640CFB59D948C3FFBDE4B309C47E
04614DB814D363D30E9F4CF29D097BB71D638689EF8FDC20AE5EC5CD05509C76
98B24903AC2F02B6EBD3E75D128531800FB2BAD8A5D0B3142C8237027DE708E0
45F6A108A6B399CC7B73259CEE2BD08607F13DD56842C21B57A0143B6F8B5C0A
5BBB070B330BA33CC5AB5B333511F10A6E89D4678F94BA7470466DEBEC74CBDD
8159B569C3F4C011C8596A243F059AFE4CB800D4372BFA2C9339D22A8E9321D4
80FBC41C329C1C7E10C497DEC73804FBBAD0C6D19CC8D466A96C35152DE4FEB6
646818CD6FBAA1F23996C503F862CDAB2854B7E71CC6AAE844FAE790D0D4FE03
4524E463C443A19FDA4834253CD09900B583FDC720E1028862E19D26FF7EC3E2
12DD4121D52DDE3035F138845C593D53DD5AEAD6185F8638BF326943D1F24D2F
C9C1E7BA164E467C11B77BBBE7AF142D5FD02EA6238DB55D1506F2802B19D30C
5E8CE075D0F4309C60E922A98DDB29D2BBE335E026E6573C313EE5A12E735CB9
15D422CC5CFFFC21A8E926C0D01DABE7AD60E6412DBDE61FA610226CC51D6811
6DCA14484E6EDE4BB3FE7DB9662415EE0FC34090C5E9C0F2BA115BF14542844F
22BF74E6FE69CB1AF91501D2C327E8C1FE2915D629638EDE8974DB222BCCBA79
14F3BCFDD58B2EF22CDAF6F213A12C44522F67C663DAFA2143EA91CB32ACF8C1
1E947D2727DAFBD573A020EE3B628B296D5DBD2C0D6D8DDD3AF10AC93FBBE35C
EF7950FFDD36F3AB81463399205CD51FCAE712AC2CB1F2A747191B616A6E7E92
4F9C8C2BC6D4B1A8AC293EEA82FDD80CC26606E3D7247553BD420060824D13F7
965270EF3CEB4CB4BD8A9BC453605EACF6057B796199468E76BE7F4B3577A7BF
7F35435533C24CBF866CF39CC807D26E0AD1F1F59973D33239A1CCBFB37939E9
BC8C2243A944089DEE4DE3308CDEBE570431A2CFE4B8608CC471085E6AF6234C
C73D535859E81C55242222F14CC4C1DCFC3F2C9C366CA6CB9D3EEA530BC09E34
61249E3AA339B4F76E7AB11165240D2B38CCDB38DDE2A255F7EE7E4A12902105
ED29098348E153584477E1649E00298BBBC2CF16E13AC7DEE3BE12977FEE0F49
1E60A4B4E3ED096B7C80A22EBEBA48AA3E257C3A3F0C9F0625B430AC6CE54275
DC0ED63055666CAF2FF8F2FF3E5D444760E13102A5BE074F9B3F6FFC09F2A24B
DB900338B413C2A65FB473F7923CA39F3F11B88EC746A0251D889DE9EB1EB732
B088742171BE37E3AFD7FC2BE2ECBAAB1DDE65565E5D5F49A5A3B474A05A47F7
8DCADEF1A542D3247F0679D9C1BFF132EB7A9A220596A655E003D337B942021E
B7DD71CB083659256B2A4483AC2894B0733F515719B2563DCC6D494AEA01EDAD
6A9D49F6C364774A56185F2BD094A840CA3D621EB1EE3E0654963E253390D507
D3D5BB0B305B73B01244F1C142869B698975D71368962565D42C1BB421D1C8FF
AFB89FC36860D94D6C991FCEA6D6AD9EBFC5F55936E0985299737D65747BCEB5
D71D56F9C3BEFEAE136197B3C10A457CAEBD0A4F9EC2F69A940A9B9FCA302B41
53E2160C94D50BB23A7213FF724C2A6D4DD5E78CE3263D5C326B499E83D157C9
4F8D9431BCECA5FD33A355E3E743D8E5F8BE78F351CAE6A000D4601700271700
22EBDF59AF197E03B495E54F049B07F98C08C5B2709AA20D35FB07CB5A418F47
D273CF312141CAEF0F022DD19B53DFE24CB30BCE85E3A061456AC31637016F22
9D7C6FC4AACD8FB9AEEC2317ABA72470EE0073BE1D2359C9DDB81F3535462D55
CE7A91D0B992584A33085A7604C734FD4774993DC02770617C1881410C666765
5EAACEE3A87D0E1E668C78F9928F93289E00FDC939C97FAD001134C6E21304C1
9D0CBA991F2263A48149CF7D832F6F3D27C4A2341EB09DAE545E87D17031807C
577CB15A48099B5343A8EF5A8C63E1265FA3FD9D82985DF96A18158D9C4C4BD7
BC806D2017BC6F1E75C2C95FB1E57D97816131668C941A8F3ECB73DA49B40AD4
7DC7F74A02742CE92410FFBE1500E58533BA32C0D28559FF32D170EDC0B34809
93622FE1EA2C11524E514ABC3E89C799D68F3F9961C6B826060723BDCE71C410
D8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 115 /radicalBigg put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2FF890CACDC0F57FE48BF6D0C0BC40300CDDEE4
55AEB233FEB30E35B679F5830E4BDCCF1DCAF19AD327AC3CF86941BFD8DA4BFF
B96BDC465C16CCB32A76F45E5D900353EFC3A7292B1C262D9E837D5CE9FB9C00
34A15AB82B9DB0B3A95B66A7DA248AC923D7322CAC23A088877916A3AA7BEB8B
91F1BBFC305F5222DF783627AB7DED4AA4210AA98691FD951297FD92D55F6005
26FEA0302133FB065EF8E8BC935FB3BAAFD58BF59785561BDEEEBE6AC164A8A5
1FCF1BFAEB4E38E0C3670568092C998E105D5DA247C92511A27E74AD8A8E07E8
4366EFE7B990D167C352511A532E3FEA3BE90FD366CCA953DD165123161935C7
5874AE6A395C9CD07FDF1C49F961551B7D44E4FC378872AD2E6EBBB6125740E7
1F849F3463AC5ACBEA6A091D46721ED1C80088865A19CE06445EDB6242E9C4D3
53449AFCA495C69DC49435C8DF652844958A96DED9A8E8F032F86D9F6F363439
22BB222873D1E9E0B22F41F12B8956EEDBDA63686F251E1FF478EC5E2E35A0EB
DA68AB9227992D8B856704C56087F9CBEE39D1269CF5956D1DBB46D50D8C1C65
C4107D846B5C30FD1CF17C217DA8D2249B195C27A48EBE85363F6E75DD3ACE33
062F7007C0448136425D2E324B7BF039881638AADC8B9828EB4A06F53B0ADDA5
11AA75B43AB5004A7D8B99EFDDCC66808361E397D21F35BBD5E057B3AFD57F71
51B30F70A2F285FAFB1EA57269C7811E1DA6A7A1405DE5BAD3D85DC5E3CDB530
7624C746A1C6DE6762BC60AEB7E88F40699EAEF4117ED69BAFF6774CDCFB6203
9693ACF7FEF2C54A73623651591D3CC2A77C513E937406E8E77778D0BE9693C0
DF0B40225CE072E5F20D33D296400AF64C2B51619B10016527036062985ED9D3
8C205B08B6B0E0335D48863B314FE8AD244C554625AB815E732C5F29731371DE
0BCF8386944398E86971E7F3A07DC2CF6FB85AE7E04AD6B0D187581D4F036A8D
893893C9C7C180D57C35C85193472C960F0C3B95C38F37B32DB77E1DA2E2F92E
C958F8A8936FF6B084BA6C7AA1E3CF42B93628C8055C74703FE35BB9B6F4C4CA
FFCACFE90DBCAE30F439B10173A7BA7D468A0723149FA2AF1EF41C05431220C8
9D9586D178311DB9E8FF71509B123ECF947FCBE52C73FB952DEDD6EE9FDE2925
BCA2B4E479414EE3BAA45809C3571BE2E7E0B97DA90455E3B798A45EEACB4E17
2D8F15DBD49EDCA181445027104418BCB2DBA77A9613E6A67EC8B13BA9D5AC17
32506FA694DD664929B40E0DCEB5FC0393D8D984460C004C7ACF551EEDF89A7A
A3DAE9F06F36FECDEB0D905F149D44789CFAC18F934A0643273ABD00F820D7A1
8984EC87B079FA7A207EDA66B58CF1A195FA0435CA032A32F99D88D4CC7C37A4
7884FC19F7E0E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 6 /plusminus put
dup 15 /bullet put
dup 39 /similarequal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6D6952083BFD432F72DFB7B6F9257F
5784C683A6E9ACD72334E0EA8060A81E14EE32300055040E24B49810DFA1468D
A962DE1D1AEE09B49109257898F155A63A83D514996DCD2F96BC0F52796267DD
DA6229F5E9024F78B02154C27EFDB9B6E09B131C9E9E4DB41A0FAEDD93B3EA89
768F52F2B63CC34532AA384CFFF786443D3D689570B6A49AF5E881C6CD25A587
1AE7650722A8A06917E3008FCEF08FC2141EB514F52EB22D3FE3FD9CA4B40C4D
489F17D3CE544771843032E4FF37A93751BC46076FC8931897F5617A8D6CED80
E15E31A0547779BFDD4C5348E93CDC7A2438F674CACFDADEA8C3AABC4002B33E
157E3658EC76536DB28AAC71FFD2E0A7BD10CCBFB0F28C5BD9E1FD6CD4E98E66
81DBE59C6FA0AD2484AFFCA2B308B76E02AD47ED23314ADBA9EC67D9938E2672
3F3794B9ABA7C039AAC088C17C723C6406BDF51CF4C03FFC38D7D1A118A4F4AE
7BF2872B5470FCE18BF0CAEEC519EC2EF4FB3921D89ADB9C657B7B8F268FB1BF
CF0D07137085C70F007D9BEC6568C9C5C6FFE232A48083204E064FE9E4235136
6F77DC7F7C32289CAD87CB3A8115C0031A518A2F95BC071365EF2F1E5E563CDA
D340F68698A9BE5D8BE435C631A266886AB729403DFFF6C8FD450C932D9B2C3D
7D699316D2B938B52E74F29F0C19845A4EBE03B3C7BF9783778C5A17229946E7
3A4A20C942F36A906075833FC301AAF56FADFC33C771043A1DFAECC2454A2225
066175C064501F1A77DBF0E3EE33EED23FF6390B267FC8CAF15925D4D97EE076
915815E8F6EB62D3EBC13B751D7DB9E776F5B1FE46534B796A394FD1035DB3C8
D0B0DB0415C568
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeXGyreSchola-Bold
%!PS-AdobeFont-1.0: TeXGyreSchola-Bold 2.005
%%CreationDate: 30th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.
% Supported by CSTUG, DANTE eV, GUST, NTG, TUG, and TUG India.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% See the MANIFEST-TeX-Gyre-Schola.txt and README-TeX-Gyre-Schola.txt
% files for the details. For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
% This work has the LPPL maintenance status "maintained".
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-TeX-Gyre-Schola.txt file.
% ADL: 750 250 0
%%EndComments
FontDirectory/TeXGyreSchola-Bold known{/TeXGyreSchola-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.005)readonly def
/Notice(Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.)readonly def
/FullName(TeXGyreSchola-Bold)readonly def
/FamilyName(TeXGyreSchola)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -103 def
/UnderlineThickness 90 def
end readonly def
/FontName /TeXGyreSchola-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-516 -372 1343 1173}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE6AB0AA0B5CB04246867AC7D3327
821354510EB8F21D485D0003EE932F4AECC07F1D170E53173F15726BBF19438B
4EA6F556CFCFCD0EC1F93927092476ED8645E591BE408A5B621D44A989482AFF
AC101AA6285D61570978A4075FDC0417484E74326221BA67E0E84E8C1065D3A5
38CB0C388A5B8DD5C8CB11F9326621C41F150BE681362484FF8E9FCCBD933728
1A564D35A6659078BF714A25668A0229D98BAF2F5861236E621F3D7A1EA4E4CF
36710D317266890A7EF74A23EB13099FAF943AB1395B62D541A685E244DC48B3
3ABB1A635B19E4F7F58AB2D74577C8AD675BC51E66B3C6DA4FAEEB65621BE550
8F090A9ECE9441C31DA96C33A79CE845D38D18992FF8FAE35B7C3CCAF4618DDA
76CE0C36A70F3911FB6AD8554AF3F200BC1354EDAF1807135257B90872031630
1626F3BC44B53C4998B3CC3ED0228D86EB21B00A0A9E410B3ACE06B9AB7F31F1
1FF907939589155F70C91B2E42ABCD4EB95D40FC8D1FE4BF1867DC099DBE640F
23E3038A4D1E5AAB615DAE37EC844055538D51C84CDEA31B994A0020EF40D2FB
B0A6101F9391EB53FD99152B330621119BA0712298D1ADC9B04D58BF58EC60AC
ABA84AC2B50D689AB230FF1C1DE57969BB70CF91AE5D7C6C725A7D8DBA7BB51A
4A2025A702077C42B9E71BA8B09CC7C7E1A8DEC3F180C511CC7E5278F3A24C84
C305D1BB9EBCED3CF714A1E393B6DA39201D918FD70F2785EFF91672FDBF1ABC
89B5EADA0856270E402A231F0F3E54FE3A81C7F495A439F193E4EC964C658156
F5582F98E99EC163F1D8899AA315024E6F218991959D281E1CA896DC7A615EAF
A0F25B84FE7E0A6896E3EBBC9E65C30112A936DABA5F2E48517EC36B9BD1CB7D
CB071F20DC43412BCED13631ED12CC844564AD076D19D76F0A895D0AB03AB248
1775F466F6EF1644209B7968FD68F2DFF16DC39B37B992F94B1D090F3055302E
BD65137755DE991596332DDE0B2A4D6CC41AB6AEAD0EE82C8D8B6C5A339428E2
DD1BE5835E857BDE778DF7ED7C91AAC4D257779D39C2D2878F14F17DFC2CB111
2F643E3751C819963D8FA708A9B2C02D867EDBF7B4B6C2BE6916DFC214D2DB62
8C3C99D0EB2C4412F6E1FCF8978A464394EA86A19407BCDF24BA4B41EED384FC
907E25108902B814D4338681AA246047CA294DC95B2FE2793EAFE2AC5E22AB57
C488C67321C05CC9FE8D9AD16D04DE108727FD7C001FC1DDA646CA1EEDC05579
757B7F84CF308B047CD43CC334560610DD15BFC537D546370C27D93395AE3AF6
94BFF0ED77A7847F7C747410CBBA2473F5869330D92CBBEDE059D026A5A2D9B6
5246D93E36A7276F35CDB53BA93A15B889E023A11B6C2A35FAC32CECC20780F0
C4FCEDE3D7BFFEF7E2EE88B9716A4A2DFFB8A651117D0A2A97CCFC80A69C974F
B2CCB36DD6ADCF1BF54CB920EE884D2841329BC275A5EE2E274C2AD409D57476
6075BA04259AAC658551DA940B4655C87F3F7AB9BB690B3F1F8D5D92B0125D3D
3408D17A9B5D6A98FAB7997436CF1E5061B465C20788CBAE0C041EB499545814
BC2B3B2ED508A5547C4B8B182CBE2C108761E697057F013763629BE817F053F9
C6A4F18772A69F270BE9F4B41D0555E6B3D969E12C4E871B2213C69F0ABD2C8E
0CD7C390086369D35D3E5A083C3DD46EA65B0C82EFC57F42E20CC880EB0682B9
BB414DB4222EDD152AD19C307118AC0086653521EA59D6751A47D178DDBAF6E0
971324F72468AA5AD6D13FFC9812C05DF5F69DCD8FB92B332FB6509FC3FA3951
99F9334EB9EDC15EC6ECBB7011BCBE5D5C08C85264A5B322E10698BBB3F049FE
4E20CB59E3E718CDAF693CD31289AA64BC3B912F680F61EB25B9FD9BCCEF9FC2
F676C72BC399FAF5D8B63BC7BD06BA1FE760CF30BF8F12137DCB59ADD83E2C03
2BCA77237D9CE3817737320021137710D3050D697135D5413C110EB25E120F82
C18115E0E968F153DC61DEEB7273697AE8307A0950371A52F99FF290E8438626
FB5F6088590EF3CB9094316D32F80BBC99957FC27C6F97018C057782853D2CD3
7C97AAAE4FFE52F99077D9F44558D3CC6C0FA31766E217CC46FE08016C3DC516
1B74DE04DA7417CCD1A7C1A4259809EE9F92F7661775D8B55B3AB59E06D1DF69
AE52B29135AFB66310F41FD95826DD539A77D73F3909D0834B1779836FA94F89
93CBAC732BBBCDEC9DB71DDBB40357DE05821DD89F3FA8506F268809EDFDDC64
7A3C41FD3DEA28B1A347A6DE47C5FF27622AD08A33AE6C255C3F5737BEE41CFA
13CA06EAD9BA13FE15B781EF82A76290C0BDB0D1B65C089468A3394B12FB9B73
46A095928D960A10918E369E62B500EA1C9978B9BC650DC7733F4DF24140BDA3
2E5B49DC8E25CFB43389EF9CBED4F02519A8949FE1124E7ED7538635EF15E1EE
186858AB0DE8DC472D1199953B4517E8044A910B2D3AF798592FD0F78FF6635F
17CB030E9B4817F9192A77346C86A5D123D4BFD49509F63D6CAE6AD23774342D
788F50F7192208A4C38FE6455C11DE1D376A46466B1F07329F8D42C2A174C3E0
F92D268D63B559A404DCE762072F94EF082A9C50A057776DC5C86132991FB0B3
C78EA9652D67853A568776A96ACE6FCBDD69667868EF371BF4BF97B4922DA9EC
80733ECA11FCDE896424CAF89E9455860E0BB15E302C9207A071D513F3D29A2B
1CB25103C645F163251C667912F605356788B31059712DFECD2A671371DA0E46
468695A4CA7D1B1BF6D4AC2B193FEF9C560340914BBA7C438FE5130439DD96BA
C786787D2E43CDFA3844078AEB61E010A7298BAF0F4D6E3B6C4EFB9323A756E7
A67C5DA7C09EC09D104723BB02264B1DB21DBD126D8627CBB5FB38475AB19AAF
82C4663E72E98E31FD3021485E3D82A817866FE481DF6360BCC647136403B67C
B88DD20DD1970CA46E058A2DCC6FD4EB2B2787C65B147FB7AA49FD7B056D8E1B
1611D4B97D73304B66C6BA835EBDDFC19E88CF11D2E7FBC3E70E8C8D9AC87926
FEC30CE2BA0C6CCCA12416589D6B1D8007A8F05175C4C7856349A8B2410135D4
1EDCC1A16AAE28B0F040E7EE32051306E1823F29FB7E389F30DFDBE349FB331A
E9EA757854481CD1B3B8E5EE6B960D05C94C00A2E8B33E44041B9AF54300B6E7
6B1F419689E7F2ACA8DA3625DBDA1B37558100D7CDB9EEED9DCA69DC5C39CA96
4621F6C5ACFFCD25915FD536E635D27B9EB2020C908E91E81B07A92AD544D201
D0402813197CF8F595F1555AAA669C28B477CE801EF07C70799C8989072BEBB4
98D8C5E2CB31137B0D87D64597FA6BB6730526925E87CEDAC3F2F69E73F81316
B21FF5BBADD8023AB9D1FCF2AC39103594EC5138653ED58922C2D185B80B478D
A643F3EBED3ABC74FC60E477C72E6CDA1458BC8DB8E1DA62D42F44893395450D
F86ED83F3D39BB928CC90202CF18A994B50C1AD7F730344E37F91B322CBE82AE
7C765CA988D678E34D6B4671E42BF7C669EB92D9D974D5E29D6F1DE7DEF30437
BB056519FF432CEA503118F0A2F57D33E98AF7C0A09F68895770EC42B469B08C
7092733A204525B472EFB20DAF8A28FF1410DDFDFFCC9BAFDC23595A518CAD34
1C90FE154344F677A4930BEF4F9CDE56B5EB351715605A9EE21CF836572E2BFF
DD9A56E20DBD00C27EB562B2CFCC6C8E30F658A9095000B8CFDA0B1190026AB9
EB1E58C35E4A2C10DF821DD1B07F79357646FB3284186CC6BA6A41105AF4BE60
E0FE5C1E494C7C4BBF693BBDA6847EFBF89F46AD331AC05EF8014FD02ED194C1
6B0DDD9A95990FB45E3B2D0748BC0AA0F34AB791343187FDA2E69EF80AA53B25
8E61F11DE1463774DEDFC3928949F19EEE06C1A0E5BE179E34C4084BB1D69B96
D07F2D617ED8BE90E81563C7BD4D6E47C210AA27A3700E11D47169D9703C24A9
110620FD6A2E4551DDF8447E2850774583E5C736909423628EE79AA7B72000C7
B2DAFF6236CD773386E362EC742619A4CC3B27215BDF4252C36F8F82234A46B5
1F82ECE67F2FFC49FDB8B4BF1A5B55899A71BFFBC96D2F219E705A7E0A796B38
92A48FC9415E838D72FD3DBB31F099107F153E3FFC70BED6D04DB4820FDAC002
4A1E48346D2C00518ABADDEA6ECD7A1713DE7AD5B6355001C4677DE18C43FAC3
093100B9835B0D1EB4B6FDECA7AD8D402F232034B7BCEDA9C49AB562DC60CEF1
266EAACD7DA7010ADED0D6A83F04F396CE83F054988BC0816137832A56C48FC8
9066B9FF63B80A84B36F765C96F6197061B7E0724EBD5B2D76FEAADC98EA7FD3
DC8FFB4B05B6C07BFB23791A59D7C5771A62C9601E13226DD3E67C7715A70ABD
4585072F8547427127EDAFC2B53A4FFD4067550B2F4DAA60ADBBE4A80594BB4B
D3513BC05CDCC17D90D3E1489973BED751C1233E6D4DF600BAB5D791D207587E
83E22207DCAEE1D18C7A5A482C1EE161766F14A7E26D043300B9628944E210E2
BA4E584D14F14D2A0DCAEFA2A20B54EE054AE15F26A7304A9A97B69C0CE35BBC
126EE2B757D65087645DC8FDB735525714112F73435B0B6D8EBFB873BA8A2073
CBA7DE351875F6C8F2EACAE865636E5CFA757AA5E0CEAB244A45B2817071637D
002082B89E2DD0885CA956529EA49D7B91337D15BE29EDD545EE1C04CB2CB511
0DB326A88D7A7556359D4E707C0A9E349EA8CA18AD26F3D7A01485B45862294B
35081B6EA8216653BA182F7FB05BFD80CDF441BB594E34D18B1F5F58F4610AF2
10FB438A5ABF80A50BB8D05721F440BB8106043B89324AFE19A881799DEA617D
F96F89BC9F7E9767A9F5DE2E80DFB6AB433AB94FDAA26EF69C189CA5ADB8F0EE
8F6AE215F8555DC1C0D75FC741C1BC2E8521474FCB68D8D460A41B61369BDAF6
03292F9D5829473A8E735D338B3AC3CFDB87CDBC9C9BEF4E5C6B07D5BFB0418A
0E4E57B13B956E26191B12F8E56F056C274280AD8713091D65D3F902B4024C9F
04375B9CFAB4F9B1ACF80687D6383CA578157328AA019A4616E1CB28194DE33D
CEB8DC36446FB24D63F66122E702CD92ADA308F33F6BF4DB1217F996539D799C
1F2BA294679C8E04C196FCF9D3E2FB4251593589540033FFA39DB14BFE48162C
60459327E48CF0D64EF0A67054E79CDB1726E27BDF1820859189DD2064241C05
68E46CEE6FD265E717DDDAAB6B9C8810A52BC5F9674D286FD002DFA5BB313BFE
41CC81B3445B02E27AC2A2FE3A14C5CA57DB545BA3E55FB5D0CAF8AFE2FC9007
90F7F6050818D727B4FB3835F46651E557683614521110DEC1CCAC426117DDA7
D6CDAAF831B4ABDAFDCBE21A288FE0742AC6A3429FC1F2F2142407698138FFBB
16C5A1132F73A6E14E09CCB4A0157599B4847AB1053F4DCD13EA221F4A5093EA
63B5409FA06B1F9AC6202BEA5AD2C4142CA7D8CB954B8D0C08D67627D34D3E98
2DB93A891AAABA4C543AE5D534E65B2B422C2B54D5CA04E5DBC61B22BBEBDBA3
94B908DA28EA7EEBDBF96773D2F86DAF0FBDA9D2E7F9AB662F5C5A4A4BF26BF7
7D9D52F6CB8D6974DFB548189D085A7DE13C75A36C2D80E7E32A732ECF3856D4
3066A459E43228DC9107DB6D77D6124D75B84C9804AC607A6777F03F6DC48335
5B43C06B19887EB524D6E65C5726EB9D729F36FD5AEA0E144DCB9D160F1C2608
50F730290FE5BB84BF7FAB513B52A76AD22BF805C0BF3ECD84F80F0BDDAC3A41
4032541A96105BE1A2257B4D7C74F6EBE32208A0FAFD8AA6FDDBAE549A9D2255
05734F3063FAF5573603F11D72226B1658D1858CF4AE069BC8D5168A2ED64AC3
51177D3BA414B0811D271B835F0FA0BCC20BC41DBD584D6EA67AC8E5B4F0465D
0868939AC77CCB448D3F583665F906287D645472E49931F5C4CFDB323DBD6768
2CA8B8E590BD5C16E7C3081360CCA5AA4930D43C04A454C2DC87B531C4CCDE8E
30FF5A0635997288AA244B3925AC78551B2D45C0D27D21F892B9AE92E8480F5B
8A2AB1B87BF6FDBF34BA930A88335101F12734FD2C09215E9B57F357DCB1FFBD
0AD41ADC963F0002CED6B56AB56737158CF03B694FC508079D3A343314792669
4EC48CB03CF1EACFD31FEE3C7AFFFF0C5D5A9CE3D9D52215AA05E690FAA73EC2
16783CC4F106FE688A9C78D309DB3B4824692E85E9320C26306F915148461E4E
DA14546CECB44BF33E814414FE058B297A4598694376E97358DECFA6BE9B8612
606BD71EE76ACABD42E8EBD551DD326E58FE258D0E268FFFDAE1393586EFD62E
3B6AB2D1B3339108E2D924FB26FC7F1A6123A48DB03A51270821CB12BE7ED0FB
9FEAA580CA187AA3C94757DA6493DFA98800C31CEA9AF82AE2AA5CA952A079E1
E455D054FD825E9053438601E832AC8A3D146E3FAEDDBAB41415EA7476356F91
248AB53FB92DB9DA8CCC5D4C88185A918EB85842E94DBE3F911F2A7DA40CF835
73651D3F39A6A3DAAD303748CC2CDF4F5586F481ED8E8C84C4D0DACC293F570F
361CFDFC2E0B23C3575BA1A88D0E317930DFA18ADFB81C8EB75B0BFB3A2D301E
FBE8DA67B70C5D841AF76E112AFB947365B17DDB1A85B93DA55795DCE6245908
215940818C0E1B3883394BA9DFC22837F0ECD06F68196A2FD0E2208661DB0F0E
9413BCFF727E911DD383BE2942320C8F54044AA6A13F05A35C53F16C91C246AE
56EDEBE0AA30E152B61FA64E517F6B117E4472AAE7BA1CCAD90A57AB912B6D9C
211717CEBA43A7156FDDE61BCA325A76ED52B327D02945DCBA64EF5C04BACD4A
217669C30B543B9CA91FF11E59DA20A8EFED6D053544B3B19D36FF290B4BD1B8
07749BBF6077B8F8DCDCFE0B5F87FB1A9C5363DF6ADEEEA9082B1AB1481E4F5F
F6F981F4E5DF503E2284BCD2407C3047DC79DD670C6AAC9E9CA9193C157D2489
EF10958D9DDEEDECE06BDF2083040BF71A9A9B369976055E2BD80245F249EC5D
DAA7676C7BDFE23406C55DD3FA8E6BD89DB799536C0D4AA5AADA2FD810951E80
B6CCBCCFE1F301B370A547FD5B93C45A356CCF29ADE5DC1E7327317D53FADC5E
88B10472273C6F5D2619D655C3533FF17CC7A87BF1B8EC4F7135DA9FFC01BE04
29EB06D90CEEF83D4B8D7191AFF0135D22650CFC2F3CF73BFD374B620E90B458
CB42713E2719A54DA73A385F9AF86EF6E3F5211BBE23CFA17C84408A39D9B043
D922DD870F06852257AA441D84DB6F4AD7ACFE8D730216129FDA997193E77929
3A1C911AACDC70B12628C0F838AD7ED830886303207DF666D3E2E3665C5BC98F
38CD281C040714C328B831F1FF08C8F7C1112348C08AB6F43F7EF7F2E24461AF
56F587343AB6AB3EBD6E159C3EB567F2E92567354CD98440880CF5031CEA1939
CC314F9940AE48775B4094985B207F8A83303463C81F285D3BD320E14BBA5352
3C51904867D723EBAFB3341B5BE972A7E5CE4B4EF7AFFCEB13D08E9F8A345DAB
0C3FC6A0A62B66FF1976403B8C17B6DB619D0DF87DABB5F7A7A204B9909414BC
31E37EDE9958FB4ECA83F99F0C7F6A0635F4D60C3D5A5D5AA54D4566C36A1DE4
7BBA7AED108AA48B64CB919B27CD7107D4222DB031074C9DC4EB4E8174C2AA32
7DB9601268D2C877ED5AFAC1C38E9C88728874706381E06CAB4FEF345D361E6B
FEB0F0203A143E1A5295BB56A33C5F907828FABB6144AE8864283DDB8CBD26D3
8BCBF23B4CC377A5BCFC19948EF5E7E97FC66B0FA98EAF74A87B9AEC2D29AA00
87D516607D8BD1C9EB9D4EB8F6E12E6FD5A6843DD48105C7E99E29E925CFD435
8210F9176E156509A555171B4DB2B2F16E99016C46238C6F9CDB39DD03203129
FBC6B353DA579E46C57BBF8FBE60B6F7491BCC79E2531E1715A18BF8450A013A
5B338211623CB5D6A5B08187792D7DBF6792235A8553AA81DF891DF490B9ADB6
AE50712D08403465437EAFF8610465DF3E58C716D4CF801A88960FCE4C041DB9
EA5F0752FBD4F15CA338023AC44C4DEF14D92C2A023938E995E273148590FBB6
5F18CAB4A1A3A66A05004D2B57F93AE1D7487E2406AD30A2E8B6A1A1DB86B1EA
3392279551645EF4A3399C2832F197C27808D7DC3A930E459899677C4A5A9786
0D9D1615587D68A4AC7A720443A80463A53996AFE9580C5338EC127B9D910ED5
9D59A9CDE7CF410380BF34AC17B2E42C84A0B24C1063C6147A080C0E1BDD0190
AEB798B8DEAD9C354D1ACFA95F85F8A006DD656132D020E394D87FF4C2AA92B6
96284A5BD81731C1F9979D1EAD71790CBFB48E5B35640919767237D1AB25F052
891229089F736F5AFB1AC5CE8B31013897772F9551645EF4A3399C2832F197C2
7808D7DC3A930E459065A4691664E373B5C24B3EB36CB7D5F86AB267E2FE82E3
A2D1A275297514E762C01CD9930799BDAA3C034DEACCB799BFA8F44F319EC5BE
BA1824982D97D74DCDF2EC084CB0EB2D296260F8732F097B701FE5EFA156C79F
5E915EE69CDE1336040C536CCFF439BC8E43553D800F738846E38E374DE01977
C142E0ED10318333382EA13579AD30DB394D570DC876A06C08E3CF3E7821D6EE
31A9B3805F80315BCBC1B4C0737EBB623F79B3C763CEF4C35D38C23AE0E328D4
FDC5C2E8652C59215D05298EF2F92108B6D4D644BF03C6D46D5553A1BD1AFD24
74342E961E0B060D472889E553C988126096DD343532E74B5FF24B198542B093
900F05F22DD65388E04D1B5B2FA350FF28ED23AF7CE0B126BF34C1FA896B079B
06090CCF80E89961E1A4AA6C03AB56400180B75A10B31E330BE53C31DC21B7E4
F39B4E372C87AD9B9979BC0426DA3CC71AC377630F0D42D0185E7FAF033AB7AE
FFB9D6B061E3880BDA02D587BE6EDD46E091C95E57B5C19979E675BAD970BB81
067990DEA8E620009AF715685BF81CB8BB33703E7E7E968A4CE41B89961BBB7F
30C807B959F9270F7CC2E284A9DCE4EFC789DC62ADB82B0A55BD56905DEEB996
87CF5F957B2F2CD39BF76B47EDEDCD5A24E346EBA5625E1A14100918F605CFE5
6DA8B9A95E2F71E964DFE250F8F8530FFB377CDEBC816B9E8F767240D2852E8C
D9AAFE74FECEF9406C030BE3732916C975F583FC660BEA0AEB46819FA3CDFD93
1CCC6900B258DECDC3E77C89E0D9651443E4A49280213A0EEAA75957CF08483F
E4E9E097927D9E501D27DAD12D2932F016DCE03DB940B2714D1E71DE4323899C
637CC86D15F14C4B08FC9AAF420CC84B4A1954BF641FE8BBECBD8F83F3377918
3066983F1FBBA0C00767CE1BC19F391E08E575B2EE78E04C5FEBDB6D5931DAE2
BB997196CD7EE878F929BB0ED1195074A3E1B11D2F1CB2310DDE1BA5CE2AEF31
EE9C79E4F150DF652AF818A0E08266A2B60C9C0902AE64276F7A1C6D7EC85A4F
FC51223EDBF645427399C7CF99FCAC032AE646FE43F938AAF88CB18CFF74FC89
AE9A0B32ECDFD0BF90764FCB712FE0BF7EC9416F02C2C3116926FBA26021B7CF
C87621B1E7E9D9AE9AA465942C8C19D915CFC9411455CA54150184FC1A299434
634D772D2EE66CC0C4FAA0ED98D534F0FCDBC0CFA816443196F92EBAED840C49
1D9294E8478DFF4DB502DBCCDBD61CA5B5E20E1CFC04C4236E64546A1CD08616
E674912B25C8FBDA1D46AE862D09166CFC9D963D769A957C8A11CE2A8DC48181
C93F29CC9B68D62FDDDC616ADC7E9F13E6B8A5628C9C3332601B24A1F13D100A
43CCF1E496D5D564C917583530C8D565E164ED9168357A5B6AB898B25FFC0ABE
F43FC3D0E8491EDB2B39A9370330D258EE8515E8CBC0DA34E79D86BDB27E6B7B
0934D43B9A24F5A9BDEA3D6D9690B071FF919407DB6D77D6124D75B84C9804AC
607A6777F03F6E88C7D6BCF7C2E9B30A6238761A2CA14C65D8E32F73D152F81A
D2DBE14FE9EE3D83B7A977BB187362FBBE6620FADDF731B5477840F1FC1BA2ED
183B5106346EC0D1CA4ED67713C9A925DD73C4C95CF2906028E08CB5287A71B6
D68C8A743C5A5BF33ED1E1A3310E3CD433D6E8DAB049A65DA0713E92EDE9E4D4
1577EF58AC70B402A4427A753F7ED241D48F5DB2174A712F0A1E33ACFDF4F850
DA43FCEE82FF494BC2F3EE7C2DFB92F6E097477F8C211FB18C0182863FF2526F
F4A8F358E419A2E076C7A04381F8667497EC9C0DA348063390B5A90713629B06
EE09153502F5A1B428B4A87D42F5F09A321BED127C7018C598EB2F18129151F4
039E69F162D67BB5DB67595670D829AE2A1FB0E2487E6B157525363E1ED15520
097495048B0B5A38C23AE0E328D4FDC5C2E8652C59215D05298EF2F372FA2013
02382872B3C31E86FACB377A74258F2A8F0D6320BD253E4F8EBA8FA68830E6BD
9979FD51C8355F69C9931388EF3E31E699E28F6D299DF329ECD5D48EEA2CD5B6
FCF5943BF5BEEFF1F9BF99301CB61CB5FD95EC44B05D0CC6E61277E23AE3D35A
9206DB8F5959CDBAE3971BF637F2B625D3A4C5717F7AAB0EC6DEB96170BC4129
B0B745459A36D8F643413CD4B4125AEE2C4A30C930BF8055E4EA0ED503C7B55E
1FE989CF0BB55EC84C02CABEB2C2394BC9355CD59870B8C57F2F7EEB6B877B91
791E5EF7BFF995DC20E067EE6B3F7DFE0ABCEA24D63DB95B982E83A0D7A93F3A
A16385F40896D4A047C14C559BE8F874F892A5A105C4D667B99B8E51118A29A5
3C6F280E03C632D409DADF45FD193E6EF5F8491B730E6F350C02852205E64037
5A9CAA5245667D057C95F2CA95993C987B809F2EE79138D5B9FDD43B088E0293
273AC148E78F38F03E39BD49697D30B8BCE8B9341D2DAA72F7FDE1F911350FED
48DDC2782659F1F50E85A8AC196F341FA509BA1C85412BF6F5AC854ED369FBB5
3441591ADB8D2D900B428F54E69DDA2B4A1261CC47C1960A223B94F37A264172
141881665D08232C5A14A7EF671899B0597C5B53018F4C440B5BAC980CFF66BE
9DA2BD1B660010CC6A70EB4449369E211375B1DCB60BD44DB13FC7623589A37F
E2E8108DC4406159F721C2333589F78A0F7496601B0BD99C69B5850B905CD8B4
2F008E1E69DACBC2064B846A2FD45222454C6A9CBBF205039D6D35C09A0CE284
E3F155FC36DF24F2008D619DB75BBA85281C413245BACE390A70BB6CB4CD1184
19E5AE7A0C417CE93EC6C6403F5B0C2BAF29D0DE3BB879970E71C52EB8BC75FD
DD19419373DCC5357E6ADF9AD8C35E6A43B6823C4E3D2E01A274DD8160C467A7
EFCB0CA56ABC164CB4DC953DEFC224872B0E4335502C2819D626576715E6B577
374C6F8918E11F5579799B6BD986A2913E3B917EDF3D43F47C6F523EA9123F9C
30FF7F2B77E767A4C9492E72CFD9691201B73E462708DA8F5C29F60512FC3899
17ACF73444EF91E00B8B2F9C23EAD960F20A6F51490D177E72F543F36CC302A1
FCEAA9ED39DD8FCF258C2AA5852113C51CFC836111BB3FAC62D2051CCCC0A389
D730EAD6B05AD28D4260685255FEDB891F79982A075E7A1654FE5F9262B465BC
2E20FE0AF6DB142F9D944983B19A5C42053282E1FFE4998AF9D76C0CC64D0E5E
8BFFDF68ADFB8871F8681D92F4ABCD2E99512D7844262AACE40E04F2BC627789
E6CB0CFFC57D97601280566D93EDB3776748198CE6A6F2802685F61EF31347E7
BA6F5053CDC3016406B2BE245F9B1F593C3FB192661D2DD29EF941C0FFE60169
8FDCEB9E0169E74E2EB935991C9D7A835EB88BC04EB2B195DF5C2DDDCFE3E345
3BD784988C26AAD63ED22B08D256D0788AB8792E114A0B3B5AC5FE262A49649B
9FF8C8C497A8AB6D841ADED0348EF0A843D0F05CE3F579148DC113616EDF0FE3
4CEC934F99C14E909440B5457AE748722602E0F6A5DE8C69ED7F226EBFFB0FC6
09E366B12B8A373F9B84BEB5BB38161FD1EAE077110A3AAF7CFC57483284E754
583C310CB92B3ADD040C112D494116773DE9591887F7C645CD391971BED4817D
1E7A0CCE5552EDD5948B47BBE1D855C3CF4DE1FE6C7F052DEB37AB594D2A1FDC
C95C7FD74B5E4EF480988AA30EAC8CD07D10E5195A4D2159CB14E22749372883
A262140C4E6714F5D76BB677F169317FF0AA61E1DFCE95DFCA2DADA7BFEA7C74
0B53D5C37C2FFC1EF76FA2A69C9AC171C388750C9BB162628044F3BCE71C6E4D
3DE65D88CA60D30F9BEAB0C83E89F185C8FD1E8D1BED5B24BC6E9028702C35FE
1AD1EF3FC98F8CF3B41AFFB66DB183109EAA0BEA3074AD5A683B5A5D01187EA7
029300C9E75A27E5BC8072ADC6E6D4FBD817C2F14F34A61F3CBD2E72C40D21EC
002434DEF52C3EB9B54F8082DD9282BBCEDE2460DA6B95BBDE9D395F8913EE7A
35359AEC1D986B41FA0D94B8C5CE3985B68D925F4185B55E7E81A66D846705F7
C5E94EBA49FC934ABF5CFB3C815F4EF44DD5BAF85A8C46162D1D7A306F043D71
DF4725B4AAE22A971E9E5544B2F519FB385560AF1A305125EBA0BC7DB7649E84
5B1A22564F633E1D38F5BFBCC0993871E9718A75DFFFC74395B532A58983B501
28BB6AC3949FF9CB12318E20B680A50E700B9A05B724F32673BB21073D7A313C
DC5FBCB16FF1571FF48BB11F1FCD50EFE1EDDF114903155F14A3D27477386B66
19D1B0DF7B36E865797879DD5D854A04EB3F5AF5E709F4CCA2DE0B2CE2BB881B
C3306E363E443C146F13D4D1A9EB9E349CF23D26B47B9CB5B4647CAD084A51ED
F2A7B7B77A00F8D1AF3BC27182E4FC085D49E0B9D5DC3BEF982019A425883428
50F206E4C631AE0472AE86C7CEF8892E97B68CEAF2FB34EF087320F134579D9E
18D1E0A10F0157095D1CA40B9417A1DB1BC9CFD7A726E5853FD3695A80969888
17E8404FDE7B730558C056E1E29D254B3299EEF15625EB7644E1AB35FA3515F5
BE16817ECF497FB23AFF1A924BB9615DBB6786DF6522B4AFF4D46E8B504B87BF
C9439A37411A466AF67E5372FE007CDC6DD099C840DD5B7AC8BECC962105575D
61683862D5E4C2CF8C6BD5B92F8F73013AD9CCB7B29C953456EBCF09E563800B
3BEA2C2777329340EC29A5F40576CC6C8C42D4FEC00BFE3735274F754906B3EB
804514B98E6323F36019D2A62A62F5474685253B3F4D79F949F6C6468BBE4319
7B808A10BF6E72FEAA21C559B945A22203FAF11FD52ACF30CD4C9DE893C0130C
8058FBF1F1397DC5AD95E65E9C8582EE57A865FEC1A4D1579782B6E455DCC39B
A86A494CB48411E8B9CD0EE418F274BA87144994469B724EBDD657AC903B06A5
700A7FA1CB7AE5F53FA2E56F84C54FFC790102E81603260D4502926CA36DF7FE
AC0256D2E8F24A96AA2BE4425CE64BB950F41DD1564C4C19ED32F54A506034C9
C7D5C18FE5C273C0C08E671CDD80A6E1F5656DD5755373CCF3C501C3D569F98D
F2A628BC51C2DC74423B91F292832C2695E79BFA462D7789C875F63316D0DD0E
215A49782F144DD9F51611FADFCBC48EF1AC99E6A4D9809CCFB180F8017A84BA
6BFC1BA5940ECA30745A5EDD3BD613FE60049BBCC9B483042A2D4B25C77BFCBB
DEFE3819B1998273EA5EF8EE032E0638F6DCE4198472B11BA6023F692249430B
FC3D84DD1BF24F80D0975DB72D5EE09FF45F2D070A7FF5391AA9BB2001FF8770
4215C0A85CFE645109B1AA5FEDE99BBB3800D471BB00C65E566E3F55CAF2F441
9B78FF39B929627428C3A6736F76F693271EE576454A86A0C216B224E0DE81D6
6ACE47C3A9CC5F97FCD349F8418B6A01E5791944B2968689F3628042D76A759A
08D6C227C3182E3AD32BB1121234B9C3D17A23326CD8E2332276F32283CF0F71
69EE52BD7047C11AC2EFB424F73D1CB7518F207500359B651D485E222E600068
3AFED2AF2CA96FE37C42758397C311E01BFA810CE749F731509FB6B908695967
DE2A007A5F489BD5CC227FED7547ED1DA6E35253BE7A2FFFE59642F96674AF0D
059CE000F3E4E56446467C89FF138F7619BC1355273143D41BBF83DFB19C0DD3
E6AE62B9DD6AB6CCF6632D801519F0DADF5887869DCEBADE9A3511ABA2B77C64
CBE02DAC03ABF3A56E8A237654A3DC1853A82CF37D3682A0CF0C8AFD26FC0644
09285F64EB99EDFF509E72BA7C97A8B634665A41ED0DA44E52F6B76D7B48027A
09A5385C65B66B13662936835C7B2A08FA0A578B22F4FE643D10A2DC6ED5C6B8
C67AEBA41D1FC3F9D2E05548AB782067526084160FE196AC55C518FC964BA4D7
C1B2522A37B14D7743D9730D4E707987E8E672F486552480FFE3D56EF1EC01FC
6B2DB0AEE932D20D9A5B4779DFFAD7B3E5D447023D6436E1A53F5D63F34360CE
A089E994C36CACD2E02DD5903B1D799E36FEB22014155487DC65936E9DEE13C6
587A8A051AD81C3450F0E044D557B151C1228EECB413D75F673D9B7A4FF24F67
CF51BC07DC66CB389D0A58E889084251BAD9A5590559709EA5208849A6FB3123
5EDAB83122EC5E041F7C0C74F9CE4254F78AEC52B21CBAC230AE43D2B35EE6EA
3BD8B9A68FD09AAAF0EB39C8FC58047A2000C9AC4221808708E80DC34541BB15
5EE7ABDABC47D2E2D45257D7A2FA8C47740F38365E22C500F42B6AE9A3439F73
E47924A24918A8ECE0D819EB2FD67166D19A73AE894C8A5D91A8BBABDDF51567
E26B50B0F25BD659CA9E620276D9F763A6A9B4BF512AF4810F47ECEFA53F6F3A
6467C14C2B8315219CC600DF9277C33BCE44A458C5F5EF1602C01D3283CB3A42
87345CBB97575EBF6B7F14B8887F576E9D5C9F615EC830A1AEB7555BA60C3609
04A44F1D1EC6A33C1236880DC34A975DB5B0A519BA4D651FE6428241F6B8721D
CBDF10EA6A794DBCE0B47E30DCC022B26EEA6DCDB780E3BC5C96559D5A8C0280
0D05C9291C14ACAC0C40F1183D804FD0A067F546BA25C1F3DFE5AA3D6961E21F
A4CFB1E5E7C54B3FE4F1F7C4EAE9607929DD0EC4414FD8C0EDF9C81A4876B424
A7ABBBDB5797E128099B8B6C67CBB26411768F7E3E4D52510631AE91755B980B
9E9AB694DC1D9307D72815EA95BB6BC922929E879EA5EDF607C614359CB62ABC
4F31A4AA99AC8B08E2C1B671986592AE7310903C6211E38EC99F57AD5A1601A6
C2E44D2B6799B72E8E1C7CB2B8DFA92F8C86B98A36AB956ECE9F5C562071361F
E1E6A80F3AF65AE92A9089683DCE3EC5E6EC689DEEA0EE5DC80C6BFD57170F1D
A7139D8696B56CD4E70C2DCAEC4686598F875C9C782EB39A105A71C22CF37FCB
41F289B10CF2C85E9E71CAAF5A17D5D96A584291A156FD739943FEC6675A9246
9945B599C97BA83F58DAE94E72786D3337ADECAB5896546A749383D638ED9712
A3B68199AC0C0A39BA6C46CAD8C3FA41BB25B3D1FF22C0F5CA332D26B60C926A
B57FBE0FDEE94EFA137ACFACD88F86E9BEBF61218FD2D9C11563480D779B2525
D06AE3AEC70E81DCA05C0ABA9BFD87333B8F06843AA799EAA496770AD10820A2
51ED7BA1AFC4C0016C607190A8F857C2F54BA01FAAC221D701C67236E08C7C31
48844E1D39319341D0F40B15EFC6B8101C4762D9EA7973150375E57F66F06D0F
943CB8B47B6498BAA98F8141F9BEDCE5884443D5A081512395BBE9E6A0EECBC1
365271CFC1932A19D7626D40189FDAF1286142524FB206832C4566363B820D85
7B334F26D55DD2E97AB66BE0F273F64CA9CFE75AB6288B531DD76F5B112B0D2F
53BAC417804C0A785600D9FF31D2817C2ADD3A675E31F93E948AEDE6AFBFA662
5B81A141C3AFD1CA05777BB56802707D254EA38E7D327F0F4C117F34AB17610F
5D7F76C202F319527A7F3FDF0C07D30FB6436D58753F6AE969F727C6E56267C2
1FA581E86060A00DF7E387FE4360955D683901181A08DCC0511627F96C725962
EB3A03C8EDF831D509A2A61D75C661613D01155E2002BAE8B740656A02EA3544
E80F8777A6B186C8FD3838F5B823E14F44F36A330846133DA38218DF587BD534
F05ECB42F2B6E4B578C61CDC1CF12BA7F7B1E80E82EDD10C378866E799274BCB
75737F5A8DEEB8A15A4FC1CB66D0F4882290A703BE1913B7EB2C4462673A9555
3441E128DEE848D79EE98512050E472B91B46102A0908699A19FCDCA4832B901
055CCDC85812697E9647C4642615DDAFD9F47F77F11F5E2344AA221CD5DF45A8
A35776182D61EBAB304935DB34A0F6F874E8BB308CA5BD2F0A89DFF54ECCB12D
2D3CC101C3BC0AD09BE31EF4B437A2A9165C52AE818D1DC0ABF0B62E3EA130C7
8C931C5077D76BF8FF9170695ADC080EC4FAE0B13C175CBD1EA476A39FDD43F7
91CA993D638658A82D65BC46704F50D874C56D1D278827B32A6B66E07EC8292D
3F74A31F71725085BBD257A59297BC040578AF33E298E66F32EDE57EF3EAC944
D972159FBA48E2F3EDCC75AF25592EB7908C5F306682FEEEF3130FE05C3C75D0
7120123447C36112BF0777521739AE7236389014C0BBC71BFE45F54FA7D8246C
DE71E0C49B3E301724079F894997221F5748B171017F6AEBBC6FB584D7F3CBAE
6A3483E38D0A188663992462551659AAA9ECD594EDF22194B47FDBEEC59A8D99
279F095AB2975A5DF18EF1E394B2F244857BC11010DF42404EA144611BC1D81F
DB31260FB1758BAC67E14234D25747F1E68E0C36F8C324097E4FF03F24FE6E6E
C301C6F0A929C0D2BF9F27D13284067B734D4FE37AD3231BA34373889606AA6C
FF3A42940FD79A7DC059F4401066579B8CF831785243FAD8F1A82441B4D3AA93
09B5A477BC70231072FDF8B9D4E4FCC2583C89B88EA8E7BB28390904C0E991C0
718F3889EFD9D641DB67CB16045892C685D8D662748EBB13FF9A22A528922308
C00CCDEBCE60D893C887BC416399E9556526F5E5F2205DD641EE39A4BD6C8EC2
0F3EDA8928BAA632825543D0F6A5C94630E63411A6ADBEC42431E01F44EC9827
715D8D755A09BA38A0C320169A8CE7A64869B9F4ED56C6C5CFA68B814B94B7BE
0A5F26540FC5A9A9FCD0B219E79EDC96592E3AC1B75FEE8F5D0788AA0483892E
18C9CD5BAF682A38C6FE1B4518E2FE49CFCCAAB748CF668FD50DBFFF0565D268
22AA90E850835FE466E0A1D180D702A68792361A7610C261A3FA3E0A52714F35
BA537CF45ED56B3CEE4583142AAA84FD3D372216E9DAE69E514E1F22B3328AA0
C13CDA7AD33192EEE05E294C0DC2B645CD0FB207639CA85E0B9CBB39B6CBD5AD
D9822E937E48C950802CC732C68045C0F14DE8898100A3E4EE647F90E00EA838
D145CE99AE700458BBCA59B5654D962F661AD47A95BF970170DE11D5B9EDC7C4
27FDC6C22335D5A9E7DA03BE6BFBE03DB608EEFCB7D367FF0BA58548797BA8D0
605DC225483BA2A10F412768519DE668EBA936C72D51B013494A738F346973EF
785037A4B6194E176C3C9D20196C16595542D8F32E962D41213E6B67A77B7120
EE6BC6DCD1FF5EDE9A5B6E38BCC3C78EF00349C15B56160359E166BF88694D92
194916965CA4B0D9FE18417CE56323C7E4428D2EE1EC6B1C465BE35668B0A2A2
9BFC593F00644D679B9F17FFED44F44192525D19AD04F2CECA0E3DCCBC573BFB
381C8E0BFEB2B97BAB801A9D76302E87A45A22ED99B04853D66E5A22B56F79FE
F2CE7890793784480596E2853A9922271DC7E6EE3F0F663FEEE3CEF148D23CD6
9F1FAAC221D701C67236E08C7C34D476684373C63265C59F3BD53A089D917C13
D8AA17DC27E5AA9581406ACEC8A56B038DDF8E42F18F3A44212ACE1E3F8822A7
E6A0D31D1125435F4C0DD0FA0146DEBFDC6ABE765C8F74C39453E3E0920E25A3
68F0BCD9CB64DD22EBDC28250F0731F19BA11706279ABC97EA381C7C3C7C0C19
1B6A7AD6A40545386569D9DEE8754EBA551B635693EC4FEEA9CDABACBB0C3AA7
04BEA3521ABEBAC57E0BB6721F8351D54AC8234A18216CB10F3B5D1BC063DFE8
DC181020981DD865B3721B91E3B18B10A96E8ABB5CFD28CA18CD9013BBD6BD97
269BF4593E30CF027EF28C6B0553B63380AB39B82397D9B7C2B7126F601786EC
4B09DE2F5F3077293624023E1D02CD57C8961D1E0EA51C02097026083440BB75
0E8D959D339DA261515C42555EF75A03385FDF6C7A68192BDEEB2DCCD7C4B742
DC3CF9CAC9D7E3D281E9C3287D15A3D0873CB6BC134147CDBB2844782CB64127
1AFD194C3BE3EE5DC01A9FA9D3613E04F4B21AFAB6EDA99C06AB165BC1104AF6
7922AD2C9EC2862981CC5EF5D278B25619FFB12C70FFED18061145BAD931651A
4B1EF94FDCB61EF81A112B7CC13626ADD81908A7393F3E1269DFFE6A835EAFDC
D1280ABC80024D10693C30D5F3A5DB5D887573CCCAA5A3CFEF6C4A72C5B41796
0997D2C70B393274F6728C893AF6F9F84A4B2DF633D3ED38414C3B5A23D4DD6A
F5BC1D317237C6C53069855D85A178940D0D2789E9900515399D2282BEDAE148
64E48C57D0F833DEB0CF2061EEC0AFF25CDAD43BEC7AAED1F6BAD964197FDC6B
9835DB9B2FB18042F233A0F99927AEFDC2EF3FA4005EA76883CEABACEE474D49
1BF86E2FF3EEF9A7CB8FC57D8D7B9BCB610CB75110924F82E3D6BC0A16946251
95F51269DB7E3C4DE5D8FD00310A083EF8BE97041E785762C2B760894BCA86D3
1D68A557727DC55BE510E2A7915EA5CD4EA899258848F22B4A9D803BD635C058
77C20750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E21CA39406D73E24E5E0
4C6E0ED12E15FF74ACF68FDB56C26315A2AB72848CD279AFD9FABFE3867E7164
C6BF36AE465553C18E846CDD1DE6D42DA99D35DE0382212930F5FA840755DD29
DD40CACBDEE19A5A6822F6DA8B6680F023E0E1C309A61BF9C4040F7D2B24FDD3
9350E266AA3D582B540D609296FDE0A1E5A3D00C40A8124A85A38FF68598C4AC
173E4D2454044F6B15A47964DE5CA08BE1EF71AE0732F89FED1E26BE5DB8A5BE
44E5069A5B8CE43228548E00800DE1B6C627488ECE13872593EFF76104D76978
B921AAF1E522B0134527426997D39D41A9850AB9E8BE225001F0CB10F8DD8291
0F9A54F134C50750AD5FA10FC0E6B5F36EB62D69D698EEB767B4E3CB1AC1EB2B
8A20A13A54480898D17FBDF12A3CF27F3EF5D7A718CF5B89CE505A8BF1BD7240
594784DBA4A122B66A36ECA3A2B2AD548B7E6BC11F3404DFB91962B04BFC9C9D
B0985ACE34A56BCC27BE0D5852C4AB7901F9481C6EC9BBF5C648646ADDF9A390
B8BB8CEB2E24EC8C0752230464AF01944BA2D55B6E014C8A068F6391E1108BF0
0E9BFAC42105EBEAAF269711C0CE1EE92FA7DDBA62C1CCEC9A9EB6A509DA1BF8
54E00955BF51B3D1E182054D1E0C593449E31AA562B4741A6B88834D87621FE6
703138ECEF7C54EA07F6FDB19C96DBA02AE3B0DF0C17BC13FA540D2771073186
E2284A9BCDE26A5D0B2058618429E633517EE593A104F3E07F80277BE4E8ACDF
170FB3A326D048C4DFAF41B77E0C77F98BF02C1CFA6831E0C2D636D81A1AC4E0
F6826F908BF9F0F7D986B1D43521428ADC8F75DF47CCF6216626AAAFA4DFC47F
F9D123C5F43F9BCADB86A41379B0ECFF59CE4E4C52FAE987F6A454AC31D06A73
3098062A3A7E114E79D1BE7A47589B96FC11C740D7D880595864E63715057D4C
A85D0D3ED28C30252DF7FFBF9237B579400DD74FE45DBAF25E9912BA77A241F2
E869E01FA5780E684837AEFC10B1F235BAE034E18C91CF56281701F4F6276865
1196F757C2BB9BE6BF31C9BEAEDAAEF7F7DF4CBDC72F5E526348017A7A32313B
3FC60C61D6BCF28EE4A50A09F5A528B8384E12BA2368F1B63CE5863BE41167D6
560BFDA6D73543417D4CA350F0106ECD92BECDC6C362A627D74797A124AFF82E
8E8AF846C0CB4FD364E54BAAB1EC5F91FF0C415AE6AFF6DD66CC771EDBDAF69A
D84AC8E0F70B991EC020C2C04DFC9F36C8253C4346DBC11A9D851DA3AC3B71D3
A53CA653BF2735125CEB2D1605B65B5550F2F40F1A25B0C96706BB7AE920C158
04482D69A32FE004E8ADB10FD7EC61BF69D36ECE3C13C6069C64B22F4467A952
D5AE1081304809DF523EFE64D400BA4D2277366427AA0E79D1775A4271DB221E
CCFA25639CFDADABB26AD8E4B2872E31DA8DD0DFDF35008668D8257FDAEA0942
D5DAE693B16645D354E54ED6C97ED4F591623645C9964D84A53E21DA2320F008
BD50F3A7176453B4B7F685759A09A9768824045B88C5088B012E82869A09552C
199933D8402994174EC1DAA29E4717CA1907AB351DC8A002DE48C6546CF32146
E98FEED2F1398662677FF6B3E1DE8D7840DEE2D456DE22ACE1DD3182D2B5A8A8
26D64B5F3895C57F73520337E68B60DC6E873C091A0C5D50801F16CDD9E4694D
DD2BF113A6FA2BAECDBBE65DDCDDFE65B73DF106C2D84508DEA0226AEFD2F234
D71DABD43C450E3F71AE59CBCB0882F35AE8A363D56093F3510E2989A7C08FD4
DB5FE7A8C7458E823062308DE3B3990F6E6FE68C75A3C2664227D225FF5DA54A
64E96E94CF13A3A90F3DC25010F66209D85E48C3C9FF0489A0C5DE2309C78DD4
A7B6D83F99EAD74396128B0C14658CE4E5137C82353C2086E551C702935BB511
1089F167B79048F9B9245FA7CF327CD80AA98451165EA950EB7286B0D26AEA1A
7A7FF7F93ABD957389284A9FCB3E8B92F3A27EFE87D783A410289C94B6EC85EB
810532C9E227577854190B5728042F1B19E598B004C96127695002C6CF7FCF44
7014C60E61C9551CC7A842D4C8440DD28BE6A6BA17246D4C8C41D27CD55696B2
CB1DA7292EE9775B6776A5E4A8FAB04F8D0FB952143BEE72F0D67A10232543AA
FA3E7AC77E51E1E4C9268E7E28A1ED57CB36EC875339EB25DADAA0E1A671ED3C
6E6CB2835B77B564586905D558A3CFAB0F1F342659B00931BCFEBE729C666E92
9DD2CC04C4F66493A56A493D8906BBCA66322FD2062E1691B9BF3AD43C472CC0
4075829EE18DD301AAA69044E56DCC291482EA4A2A2640CAACD7D4E3FB13343F
286E505014A567733A950B86CBA67BDA53571772F4FBEE308CEFD3F6AAC33E38
E6DA5E7B7F954AFEC321608E44A3CAF85C7F8391E2384EC69155F2263FDF3A66
593D9B5210F9195D98DDA9D204EC7091D36756B02471770D20C1D2C069C5377A
E449E2729085F80ED5E46648ACBCBE600E75328A677A7DCEFF62235EE2633E3D
C186ABA08FD02E9295A42F6A8BD1254595F131C6A1AFFC9A0D7FF6D0C3F69135
18950F8F74E59F6CDA5F6DC2B28A050B50BD46CC83DDD732C8EA614FC7631633
5707709A91A70B7401ED336615E9F77B8862B72B541FC918AF87D5282D0D7BC2
E56A5C60833A34B08B83F9DC471ED6488AA685D04243BF460051DA59D6142D49
8892CE6941B16BB0012D51524E0228494AE5977D8B218BBA826D0881E6FB959D
CBA34B5F5BEA5D4568AA7CD36BAD40F1C39ADF1F3636A28B7A4FC8E7CBA25998
74523155BB827311033820B0380F65B3AA4F3E837F9C73AE464E0B88E5C5DEF5
D0A094FDD4FD1E7432921368AFBBB299CFBC46A80CD1D1820D329A68E9056D5F
AA7899F47228F30D503E1E0A943EEF9BB23471D1CE0E36F34A3E70CB6437C18A
6FE63341D099B30191D50286647FD32750F78FA3820035607BDBC19C7399F905
08F5CA1341B6C814E2F47D48B84F12297AF2D267279A477BC3302B7B0ADDFF5A
C82153843C6F7837AF311F4FF876ADA8FB3F1051B1D86F85C68C3795BE36AF36
B47F985277156BCDF6788877A3104070C223170140A7516D83EA6B4310A159D9
00FF96495BB9B54ED7A963CA7625C148E1DCB1460E335CD8916D3E3F77050830
483CF6D2EC9380614846D12CBCD0A3335CCD7758BB7AD06843E35E010734B532
8D5583D69A74C51A611A4A52206CECC8759007B5E20376F60BD85C374F605A05
FC7CBFB86718C5FCFC08A348FAB07CE7C933BD984EB713405D2B3F48124436E2
D7DB3717525B37D33DC7D4DCE62BC5140AB590C1529ED437835B976D5CBAD20A
A538A07FCA3E44EE5EF03A2270D142F7D6039F6115845E21FB2D04A6E73B21EF
6FE8E53B5C31BBE28C4347C76E89E28C2D4AFFEC504702078861D61487561E6E
4CD95008A2A8BB4FA40DB26B60EDC157FACD40A0F0A100B0434CDF8653E5458B
C99AFD065A8CE5EA476056B6A4404A00EF9AC726D50796276A8645CF9D074BC5
679148F9B07A729355B1CA091B7B1E6F52081FBA3E79CE29FCA5C502B38C86D8
D507AABFF41943E10792E4096DCC5BAB8E5CAE0B0ACFCBC6BE37262D20D6BDE2
7B65F9176558D8B65362F61FD87D9E152651B276B471D10BD5C1D8CBB442B43F
C6DB808885D67448336E1BB09FBB191A0280B7892F7EB1599CB539967B0345CA
2E6113E992D2BE44DD9B12DA394FF35F44EB99D4DF9E52843B5D9A3073EF4AD3
4119785EEEFCEC494BE18D489089A518609C9597B8B480F81E3E8A72C30D6346
FFDABC7D3F4BEB5DDB6052CE8E68337E6473B96DCC5DEC4957690CD11BA026B3
F30C9D7CAA718913CBE0B98BE96684BFB78BD03562DD6EE838D77DDBFB34FE74
FEB0BFBB6DC2FA129B42E2142611ED0A8ACAC6EC3C1F925E58081E32B98A6F0F
70430579F5FCF839B2EB702F20223D5AD4D5EDC4E947AB2CF5DAEF593AC50492
028E31869511DD652656AAE94C7E3F4E753906B3088AFC193EE4742916BEAE0D
21F24A3E4D146DEBD19872781CD42CDBB4F35F7D6497774B221B165033544CC7
711582BF754CD04E4FC6B1E3DE635362BE899C415584C1F5CF2D726F959C04D0
4EC6CCC6D5C4515070E4EB6AD12185E3E810DA0191D78DC4590C6F4A4A6E8566
2526851ACD5C31DFDAC489CAB1E595094BD211C565837DCB8FC8B2F7996FF48C
5C5ADC8820A6316463981C89F3ECDC31C272199665C7417E292EF799DA8B5C1E
7862957544EBDF342E1FDEEDAB353DAD46B71839C2C70D6C7FD73E90778DDC39
52A5684CAA59C47C33F7B3E17AB8FE9F8619C9C2173126E3FDCF7D711DAC380E
4F048050E3FB3B79DC4D5521B5226A3CE66EF829DBD89EB24BB2F33508AD04CA
E2A11BBD869AD3E2131253789C00651A03320D8BC5D2A86AAA228B9C47E3E78C
0B22D2600D5CD55A311B7D479E5CBFB6407856406CC9C52353EAB3C79BAAEFD5
D940D8D1ABFDDAE449FE68185327170B046B27F59EF67FE9D8811E1799E40445
E29A10318D320D2C81AA5DC840FBF18F6046189BD0022AD86D661BD0C1B7AAE7
BA598D5F30FB6EDBDD8D01EE519ED115AEDDE1691251E0F7FF5509512D622B23
F00ABFD6759758A409DB1C7394DAA4327DF9C15DEC2AEA8C1983DFB4E01F67E5
294D3C642224FFB8367445B690245E81AE0A38693F0318A61A086E2129C891F2
FC0CDFB18D8A4D2260DC93D7AC1107B43BA5E49E61D575195A086DA3B9B30368
BC424AFAAAE45F4C34A69D56270FBBCD33071471AC139C90CE7F8D08EA06EAF9
8EBD7A1288AB7284B078FEFBECB1DC8F5EFA543370FB9B6E9F731B075C021DB2
F0DC106177F0F23A1B56651F2B690A9445963F346D0667986C994880FE884A89
082515779292470FC5F08C4BF9E33745C58511556A300087B2FC75CAD1888311
3AAADF162B023352069A4691E793630EF8783BFABF57EE205926A3FC636BA6AE
4D6EEB7C26498593783878C0A96D083E18D9F88CF840D45D746E13EB000DAD73
C64C1936A32DA881E68915F8A765FA149FEDC651186F696F54D06555A5B0BB86
729CBC7123F8CB5838CC4F288F7556007353D88969A3F3D82D45A99AEC79FBBA
92A27965AF40A71E05E4BA8D7FC27CD95BE6DD8DD35AE3EAC0BE9EB7F4A37E67
C704A4E08A03FD399BAAA3890E4F95DAA83D88BC9BF79C0F2F5954D60D7B576B
958780A86E89DF637B777B16C0F388D4796F0284F80F12C1F2882B24EA79F0D1
09276AEBE37600FF19FDC4AD5B38CE04E4C555757F69C669C5EC4032054B25F7
1065BCB57954C4CB5A9A42C6CF6EA0D80B6EDA4357DE05827AB2618F74F1C401
F5888A7EE7DA5F094F31D125234B2D29A7E0F0D39E57F3672BBBD0573C54DAC9
3129109D5FFECDE2BF3D42368F17C5E2C69174395C77A72EDAE496341C003593
705DB559617A08B471487EED5EDD98FC1777C6EDD006E0430BE88C877756AD5C
507C4D9306DD8B5BE74D2881CF976175F29A1EA23BF95C4A3A8932F7D47100FF
8A7D4BDE1BC0D6A04F1F0035F01F710F91F1E0E49E70FE25FE7FBB858B828049
A5CD77E5E436FAB31345BDF79F8143589E678D7B2F99BE60A97A6494F32B015F
A31EB5B9C93A2D1F80A2EB3095056CB4BD7791F969F3CDEBF9AF6DA57A5D073B
10907CC3E44AA1EA09B9528809ADADF12424004A49B44B2683DF88F44B9F9CC1
74C1ECDD3A63E5883BFB53562ABB1116532AD67AEFE0758C051241E301C7E139
D917756957B10F325D4EB35F1D0714A30E063355596DF97BCB0124DE9784FF75
38DC0F88112C0E8D91E53302048AFAC40CDFE499E24BBBD58B3B0A30A217FA18
4AC49D8FAC5CAFA7A2B028395D9345A98973E2BCC93E5C27D6DC0E2210AE5ADE
0322DDBA57C4B946D6F167A57E11A705C026F1760854F731043BADC914D489B4
07CFA86A666850E92E971F6A42046019E11D040BB87BBB7ECA6C4A3A38135BC3
12D0784932BE8D96BF2009528DDF1BC3368A699387C833AAA8AC9CA8A29BDC29
E04F8E0EA70334377BB3C50CC405A83C954588CB1EB4E5111A5B5B698DE7C897
3ACD8AE0F6576384D456A2C7F82E58527F941648A1EAB42297BCED0BECC30169
DA9A654360147ECCCCEEB4B975F60FCCC69232A04F2066269C156F8FC415A0BA
6147E6650199AF5F4C73B8B78639682E6E7F0409243C6256300F727390EA7C74
A64966DD2F49858BC351519FC213A14759EE48E16471530773CDB0D43E2671CB
B107D16C3B6E85961798851C4348C3109D0671951505993DFCEFAA29D97243F1
70F3EAFC1572D2E56F2F0F692831903D209791AD86CE9151EF2A4AFE4FA32112
954C5B86EF7AE3D012552DA4509288ECDB56336D01D8DB3FACE4484A4988FC48
5F9785AAD708B6888C37B603A4E54487C65650CD3EA87E40098AADEBB6A8AE4D
F924A93308654F1AEE0B9A46425B9D04AFCB278FB21D39890470B3200E566399
59957DFCC28AC760007A333E41E6D0E62CDA7F4B100C6CD01FA202CAEC8CBCA4
BB45C49782D9B2884339D885C3E4C4C45631BF269CC8B89441B674EC0697CB2F
FCE88D71C89BA997ECFC11B62612EEEA9E08BB45A93A475EBAC320A6DD1E55E7
A513EFB425B3A0F9ED33760E52C725CB22A4509288ECDB56336D01D8DB3FACE4
484A4988FC490D120CED49F055C3AAFA37312F9BCC4F4DFD7397B92EB86D6276
DA9A6A66EBCDF427FF838F292192CEB983813901F883767E8A5D9EB331968579
C3DEBB3E382BC5900BE8C03A525E467DF8744A8B6DB57E04C99BF7F56D0BD6DE
6028AF926E27403033E2AE41CB905AEA0B198607DA7CCE9374D76DA1237A4FBC
C9FF1805B567E19724B285E85AEADA1D290708A8224C649D3021CBAB14E58152
2451BF27F03DCEF58B7EAD68370E4A0A6FDBB0B23C42CEF48922899CB1E7D70F
650E6471E5408C44554E75E54751CE2B89C25231EE8ADC26E2C04E8E30A9CA12
F7C0812F192FFB2B5BBAD18B95F031362CB594A3D6D3F970183414EA23137698
1947B80419C6552BC98F10E251141A6EC83AFCFCF697DCC8808A931CB62997E2
9B68791924136570B4C3191D8A4E83102B81DC22CDD8965A3F0BE31DD7C45456
CB361F3E4DFC92F8E22872CF885EE7D54AF700581F8179E4B7182CCA68F8B35F
57AA77C9757DAFE3B82F4A439AF0F1B4D45E4DB17DA98F338822AE91A094453D
99349FC4F65130127A3BE6784780833670BD3E5BEC1DDDBC2AD2B526C6CD55B4
27B524171AAFC2690BB5E169FC53F95B10FBDAFD939D8FDBC0EBBE7399C7A382
CD38283E870A8A1B5899BA1183298C0A256E69C9A9C9245396C589BC74CA5561
A4B4E087AE735F596CDD50CAF9A67F25A39EE53DE552FBC92269D619E559067B
C2EBF7EF193AF71B537DFA79B8E84B39F4B0B2ABB1F875BE91E67BFE4A63F824
3ADF0C07C6C16AD3E33C17669D89F8FC20D48F88F1605CEB7402F291711607AA
51CE0B606CC8C1384B16934083213CC51CBF9538EEE066651BC3475F6DF651D9
F7ED759091062EED2A868E004E417D816C2A038097B778D17B0AA1C672E2020C
946F0F8E03A35BDB4BFAB387977946314C2FD50B1EFABC3D291F4FDD9B433C98
6CEF5A3DE144D44BB68F1FBD1166D8ED27FA1712E4CA7FE32B90D3209091D893
1BC21C6F969288B1CDCA3CE72DAA04EFE50FAEAA8C7B9291E8CC8AAC6E4AEF38
3443F6F3C18D8364FB1869A2441A399D11328DF9A7DFAE76DA0B21819E209EFB
5641184DAEAFF3FC3E99E96522F9A81BCEF06D768E9AA488079366B9E331D0A0
18612DFB4BE67A1833D36D09829FA03EE7D559D5AA9871BB2D4ED0A53C6BA6B3
01D3F42EEDB6BED24CEA54F2ACAB3511F4AC44FA5358837F7CC6ED863F0FCCE5
F7906191F54E14D191A136FAD0C22A1771AF31FA95258B6F30E3F98316A4935E
D92E290D81BE763750E44E585F4C8E537125CAA524C8B374AACE6AEAC8CB4182
A887EF4B2CDA0F1B4BCA8BC0A91867D9BBE00B986837CF9A24DD32536C1FD93E
5D2015FB30801B39C5238C5504416B1E20DE9BCA09A40067DB95276F5B087A24
353812C57D16F9890FD7D4779090C3DE6A3058620D45A743AD92BC9145A0C22C
1C1E854E43A202003126983D7EA0A161D1C416AC85C188F56CB5BD163E58651D
2D017D0876F86FEBD25557B85EE6EC360AB4E5ECB4966369BA85B6E7733A5C71
23CD20173638135BC312D0784932BE8D96BF2009528DDF1BC204F8B7BECB0339
036F3C3B3A2FB108872E8860AB6F6795506FE10E5EE241DCC3777131865BE761
841AF5E466AFCCEA253175642B9F566C11B5428F7BBAA66FDD4CA5276134D4E9
C9A6A5AE154E1FE70D44986BC913F0D278AA5B2479AF6E3ECB544654C43CA7BE
A5B305B1BCA2F0046727D43E3102CEC57B8A586D3FF862999D20CD6BB84E55D2
72E07AEAB1F2D0C9BFC8600FC97EEB77753977F201983EE35ECDC454411C1CFC
E43634791DB7B31DB29CE577298F7A361CA77F3E807F054A0DC988E60BE6CF11
B8DEC7EA4A5D541712051C69416202C10F53232183CCD24FA7770BE6068F5403
ABE805AB2A81CEC34D9D53AD10B33F5EB9B78E996FA66849777243B0DAF02CF9
8521BCFE282588EABC04F4E40A42037773349DE530D659A3EE6D7A1161558E01
03D69F95627A6E4560991918BB5B77A9C4CF1D411322A0A3F988455D7AF8D58D
6DF92DDF536C922E5D54C8528E8A4BEB8FAB9005788A5B07BC54B8E26BC4A7D2
33105724D3ACA93435328249AD9CD64F33199F3875A0BF4AAEC39143D85CD32C
949F3D935FE1DEC9A6B3ED3261CF7652215E55CAD75EB726F418584A0D4EE4F7
AC5252F4EF69BBA047FBA2599562C50397CBB6B41CAC835A14B1FA3C5919589C
C2B5DC72244B701E77A77CD77EEDDCF5D5FCB463D7EC135192132941F7D53BF1
50F206831E8F728FB5CEAC805E946CE2DD6F49ABE51E15A3363B4891D0A64000
6F2C42C70E99EA8170FF3999F81FC894266C2AE4FC7FCFF15F02AF05D6883A6B
70112B9FDB4B8938783198E6CF430574944083726C183D8003DECEF9D76FDAA3
3B1AA9CEDCB21C2A3B0B19B8328951941B644D69538C3D023168CD87F7D76979
A117FFD2A7F655409064EC92E4D0E7C706E4A4AAE9DA3E5911E83F9D6F409788
96B8F7A0B472D1F9FFC68F7982AF0F5C4AA381B8581DF3F82578AC6FFC9216A0
6EBEDA2AD09C3DDB7FC6A25976EC69FFF9B117C01C390C344B3B005538185270
39AC74088A194CB25BA1A334F4E393E7B65B1BD866436AA7E2D2C09DDEBD95B8
9FEE748F4E07ACD659F3518A8B601D4602EE86709E26426925972E4EBA5C1868
021E69F6DCF2B27FF31EA794BC8B59C0DFE3E678BF7806C7D90F8C2414CA1669
749E13E6748A7179335F3CE185C2DCEBF14A652AD3A8995FB0E88F7EDF36FDCC
748D4A2A0AE8620FD24CF4C248948E397F895B08BD7FD7D223FF9A05D570F0CF
2D735DF54510FFB1699EAD90E408AD5B9D30D7213B006216080ECAF450DDFBDB
9B71DDF800A4D407601BB632B33F1E4AA97827FC0F35280DCCA71C9B002DD0C7
77B5A90E3B75C7A15FBF489B83580D7240E7096F83E0D2E62F1C09E6DC9C9EA3
1CFB29A4FA8C83E4AD433C084D0AD5E2164D50C910BC044A50097240019E47B2
230986A5D37263D62BA3D19BB7A1BD88E1EFC7ADD58BA85D4FB629D14A2F2603
D8D293AC8E1A82794BABD4D8814B53865E03C0C0D6DE7B1534D484A4BF3F5BEE
B210E4A527110F4DEEAFA4790B3A7006285BD97E08FD7B07F49E5C1CE28CC68C
7C49BACCB1E84355A2170325114C5985EED0B4F03E7872206B38DAF16F721333
43F40992AB476E5F84F49B1D0C796F54767096D5F83D54A389FC2172DA93C47D
22E22208EDB0190E292114248C6E80E617710068FE18AC290371C3968F138EAC
039A019D0F9A6E1622F1F30609CC4215301DE571CF2D176AEF34CA6EA3F43E1A
20D841B5D1B65C089468A3398D6FCEBF0A2468C9ECC4B0F611CF7F47ADE12797
73BCB49E919FA2CDEA54D93F649DE7B38DDA1B85D97905EB207D7EC6DDAE700D
08596E7A2F89FF1CEC658442F99946159305B50638212FD3515DF4D95AA16183
80D55DD7CAB31F643EBFAC547A14A73EE3EB9CBA56C9E415D2E09184C73CED19
6934AEFAFCEFBB377F69795ACBBD9936B519792C5CAA2F2A5BE02C3A77BA01DA
6EFE112B5C7DBFFD3252B33E5654CA840D24A452FA9CE1F786D72DEB996FA675
C96C12C5A19EF17DD4D2DA12111E91B84180444A0A055E59DF2D8ACBFEB469FC
3E11EAFC65ED1E90DB2E9C645502AF7B00D43C242EDBC094A49BA3701128C675
DEB74618238A5ABB78BBEE1C75C01584DDC339F970D12A5C7BE23CB6ED4D247A
B61129900AD013DD47936A1C76261D1F114AF6C6B54A449ED805CA4AF4AA2F27
B3C21CA95A361FCCC59E7EC7C5C5CE1EA4C0B081477A9A2DD95F2C8D2366E383
725436ADCBDA1EA2798F5FF8F277230D34376F359CBA814391085D4C5A001B13
ECCE8953DB1ACABDF29591D77A755775054B565FDBF2BC4F3C1974C06C86473B
C971AE241B380F84C194C43129A99CD63AAD418AEA57ED4906BC6DC192035535
1DD1B90F11D0CA156D3F2E52AE3CD6531D7FA4F595AFB6205D03BBDCC3F81AD8
8211F3990ECEBA3BA3C6F4FCB62AA30EBB8037F4895A7D94FC0097201C3829DB
22E031ED135DF5F81CFEF3FB56E1A94B0D53E6E0DE1B9AFE745FDD973882DBB6
045657B6B8C5CB3741BD7CC0570325C2BFF8B479CA203532DF41D8C60B1DDD55
915E1F010210C0465715EBF3AEFFF61D6E1C75484FDA83DA769A8A9FF6BA35CF
1E1D725970DF0997521AFFF13641C8978AA4D9B55E33E66A5461DECD94106D6F
BEF47B639D2593B0AC1DBCF1A31EC23B34833BD3B6295B854B42B1D56C5F2F15
3CD9B9F49F486812A9DF8F5234579687189EDF20CF327E404A80274EE21C7C2F
BD3EB707C94A4B189885B502DCD4DFAC26031311D0F746530433AE717BAB9971
5D737A5DB9AC53C2F6F491748884086595F73746C390FF8D1545C24A6AAD40B7
34F3B17063DC90992FAF79CB53A36D7DA37CBF82B03A2D4F69061993398504DB
14621595E96CB410D48EF8883C4DA97E15BC612194D2B4D5A708BA8C5FEECA31
53D09E01F803F0DDA8995BD672D7AF5CB2AD5DC36F13141FB0283B5A5098596A
9D908587D4D3C54E49208E32258F5F0F1DF18478FAEFFF086731E945D4AB5810
0AC7A2C2DAE8A8C37B293E824729D57B7B6FF005C47F7D14F6531E5D840F990E
690025917D1BDB7E9EA1DE528D24048EB21F0DA1371D04B36BD53C89D646889D
57BFBE72E829DC1CEED140EAF6E3ECE3872E3E0F67BF16F9B4CB431B5EA91855
1C56B5B352972C158A8B9D85B51948814A4A16BC9AB61A9ADE133B3683AE48D8
B5A20CEF6A26741DC8FF8BCA65E9FBE9F743398EA2503DAE1CF44E9F8734D31E
1F66ACEB6C487D6A17234C4657108FAA275D42E19072F9BFF0D3106CDDED777A
592A989D88A94AC50BEB5E48925D1C3D6A8102FED0CC8074597CC02366C52BD5
3B2C792CB736D050B3A58606C82E52B2C3BBFBB71AE71A47B972CC135CA638FC
453F4A467205EC820FCF7BD32E90A2AEEC4E40C4A8582F109AAA7468F8BD4BEA
49F8B5FDEDA88D2497E66EFEBA50CE9D565ED75123D7B19FCFDCA1CC709A9557
05842557253B65F40E7AB90037FE909105D13BFCF6C33CB8C6BA06072B848A9F
4245A1817AF2E56DA72FE9ACC53FEADD4B215B3C1877C5CEDB9BFEA6E2AD2B81
596EF0ED0A34F80B8C50641C6FC42B7CE5BD95146BB13CF2A3FD8AF3DCFF2B9D
AB14A412066F88BC5E9F6375AEDF26FA6044B622B4F5981B5FC87DF2BE2CCEC1
E10A417AF8ECDD12762B8527CBE338897377821E4B79B947280E2FD162694AB9
DAD51AAA9F1D6361695CC30093B34EE07C1F1B35EC71B1E0BE1CE2FCB680243B
4092F1BFD83F7176EEB813F4D1BF8B8ADA8F5006AFCB2EFB4C523D8D8CA93043
ED5564F8A29F067D605B73F08FFF550C7547DBBDE29FBF9D44ACCD470AB92E08
D8E2A4BAF3030696AEA4FEBAC7E85ECA0AFBDC15DF20C538D87DA0FB745BEB4C

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
dup 112 /p put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DEB8CF0BE87C59313978F28295C0E3A01D2B5682DA86A38F390982A8FE
C3E81B8D3532C92C4A4A4BCB421D248F440B4AC162E6957AEEF5C17D839F24D3
3C7E48E8308626E440AD58C791825EC3613A660F110B0951FE60A61B2E8F82E5
39B98E4AD3D7561874500816BF6864E8E5E909569DA58311A1DD70F7E612FEA1
FF298F177EB59E38B3263AA5E89E9B959F24F5FF92D0A119F5D6C5C0A3E3DF99
2F067033331C2F03FB1DC706A93537A53087E360AE14D6CA48578C7A13D8FAE1
1BF67F57CF9CCF881D63C2838C14D7B55C715CF238883D65D6793AFADB06354C
057B5EC61B8CAA82D93DC2DC5B72B50F3E8C3EFAFC53D073182BBAB53A1CF8F2
54347450A5FE943E05993CD5CED27E33B725D1E9288F355F8885EC224E909F84
A2E95F5044AB9BEEA26B6FD72A3550299B03EAFD2D5EE8E09D994E4F2A16A57B
31910928454A11B2F29FC110E13B682F5F78B7CA055E056DB4C9980268E6C4A6
8AC03DDEB8FBCDE348DE316F8C38A1E54FDE43EEB252FCD82555357D168E80C9
A1D181CD985BEE4FE3B9C83E2538E15D6E2DA6F1B55589127544F1480E5C8365
7CC50B74DE36EE228C314D9314318D237B51452AF3F752FD041A490BD9B7BD3B
2837B68040123C8EC627811DD70E0598F6A0D81F830814103FF0E7171E72A578
6A718BC29AEB84D411CDB02D04914F2FD5774C7DAF0B3D8A1928C91CB3AC64EB
03751956F5B8F734A588AC9F8BBF5BBDEFADC57D758CE7F5815AE67871C37AE3
1C5805819BC41DCA2949C300E7B3D2CAC3D4B49CF75FAD2AD4BF056D1208A006
7BC9A3D7419072CD29161BCA1CBDDD1F764FC4F3E3D5A5B8E9254FA4C1FD7363
813DF8C0F6320B16047A17874592156F06C6D8FCDE9BD8D22CB871E86FEF917A
880D5B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /rho put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 75 /K put
dup 77 /M put
dup 86 /V put
dup 99 /c put
dup 100 /d put
dup 109 /m put
dup 110 /n put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD6809FA22A0DC3
112E7888A499450162B7373CC8855953B351E8873A4D7DCC40EEEE5A8A2D00E0
EDD8CFE7153824BF94833ABE10FA64768E457D5395519937705DAD2FFC5E71D4
521F01213B7DF82426867DE914CC9866E428F614F18078B4367187426E2260AA
AD0175A79820A845A0484A1A6BC193F68B51EF71CBEC0974C41453B653D34675
E4C129CC139E86E13D64DF42A5693B1F3FE178F90CCC67DEF3841305A8927C1B
DCF74E4E0A04E6C5B06CBF1E860D59C3409BCB8B7519792F4B52D8D8EDD6C756
09337A433BB1CF235E8E9B34557FA0A1F722FC6704A152CB8AE6026FC1928B9D
93266DD3BDD3429B095D451CF7C337AF9A71A40040129E3BC45E779D90C809EE
37008B5C492CC6FF818F7CD29A9E2710669E1DEF05187FD7F97ADD10EA81ED4A
0C5F3A41382744149BA8ECAC9A9EC5AF9C71EA4F486114762A1CB6478A487B7A
53CBF394FB20E046D615A425AD01180FFBEBEA57A521B4CEA29F6A62DB1800A3
8DA9FD66CC91D08817D96CE579063D5F23F7CC75812DC5D845CE90E7AAB07E15
8A3F2B9CC2B7BB64ED5E4A35DB62FF7CBA21B4BFC669B36B233A35653F87BB18
8E229D8C01D63E488706332E61E88764D3EF59F3F530B436C0F9CBE86C62EA5F
9C9D4161B632DF5EED931FC96F1C5D786054ABDB4CE6BE4B5F9719DDF309C437
819B4DC368482AF14EA13321BF3D83B951E6EBC21BCEB26471C370C06439F30A
77A19DAA73FCD6AF7CCE042E6F17C40F6DDC5A9F4D8DEEA5D7C868BB19FF54AB
19ABF48758359A62EDFB1378A82F124D3DDFEF3DC73CE1D558D38D29CF4B3D77
9894C7685D40BEBD2F1C598F3D6280DC7C3A7A3216C97191A62AA114A3FCACA6
8AD7618C5EFA8162930E4EDF50E08AF4E76BF576C54CBF4138C026640014D740
534714C0F587A6712F8BECED29E222695050031D697483560C61E4C0E0D5D11A
4B5CB436E82BDA83FD0CD2D8EC2EC7A3C506521C008E1937FD4E964400ED14D9
9616A5F47A028447A86DE1F8CCB4F33467A2E2542F8C9DD4281093719F2D8F90
DC996776C62B67FCCC8DC536279E90B262B7A63AA6AEEE8B531D71C3090D4490
836B53CF92613BC3325BA7E0795029EF3EF9234ACEAC1B9E51C4C096CB11D80E
1A2796B60DF510F385A319D82A2FA5869F6D57FA420EEC533EFE4EDFDA65A85E
1257657EA549754A332FBB8EAB0EAE3DF2F888FA10A0093B4BB445D34D47EC83
AE8EB52B264E62803751013D581889A97B42F9669ADBAAF93E6393D51B2708A5
A44B8690EF7550F97126C28CC0C3B8A41A18A615542B25A2B7DE0922C0D30AE6
E1707007959C05CF59F71AB916EFCFF954C8DCE1F19918F33FDC807E710A5CE7
9A2F7121D70F9DDFA769495155E4990309E399A0ED512107909B5818A1B7355B
DB0FA5A74B2A6B7F45FD6FA2A1A3FA4062D3A04D27D51F7CA93DBD4F599800F8
F9D9F64D939E7D855F2B88E88744AD2F56AC6440CF9091A7835BFF16AB73D72F
F02B815B5D4CBBEE1050725460DF28E431CB04E0D4920A0E76EC3253FE9648C7
65C3AC09935A502A735415B73CA4A777F4B9D4D91A1A3DCADB7B5FF55AE05D22
AF1D1325B3DDD66380244ADEF03A3B567127B0E1770BCEDC1E1A3445E583BAF5
EAA1431B0F88093A4BA1396FFB71F34EC8FB3AAB12E2AFDFC86A33B93C95745E
71616B5E4CC82B777FF0E3FA7ABCF3D8052D58A03F2C49587C08424E9EF1F78F
380D711E542F1967855BD6AD61CAADC793908217C987DFB3221B2E02EC1B6B86
443B77E0A8F4F48B8E51CBEBF130C241E1401E5F3EAE339C8339C1F4A2C2E6A2
3C75A5DE69E7B499C26BAE3AE5AC8A3AE8729BD0A881E0441CD79BCC8712EDCF
F9D903E4E00FFF01E407D37A98E43A98CE7A17851673237CC8E395629517EA58
8594E32F8F8ACA82F58102D8874623DCDCA8C57C00ECDBB4723B5785F6277CEC
739B780271013ABC455AC15CE2DC664D5F88D1365FB23CC32478F7EC8E67C2CD
FBB8E2AC07A93AC578FF85C3E2CA8ED5207F89A10451CE2331FA51127D8652FE
A395B4BFBA334520B694734C2981492F64E2522E366955985A5F8C9EF3CB9115
577E65001E6E61CBFEBBC30F0D5BFA99164500A4FF9676C3C83C52DC815EE256
10A723CB5059B30A7488FC08D8EE0702B320F00EC20E5653B9DDF6A72B166220
D356E3EE4A5D7EB0B5F7B549169C61F7F50EE138C90BEC80973A735AFBB43FAD
049BBDB02F4C8FD23B8AAAA8EDE5F9E8EB9A7FDE27773AA1BE23DAF4A821B7C2
E9857B642DBD0EEDB3C26D5B505B716208BB0CC2E751B6B8CE37699F53BFC7CC
1CBDAE2D3AF295B6D08465B586C6BFEBEBD6468ED4DEF5AC254B501BE3AD0B03
1A48A03613AB72667C16A9D81BBE1DCD8E3E72B473FA7A354AFFF2D9E1EF585C
1EB6EA3034E68434C59F86473D73C5825EE9E39746357F61BA9D329022DE17A6
70DF1A2B70542F301C8B4877425B17A09CEAE5BCC12C113BA1AA09DB7BCD45FF
1C4AFC95797CDE0DE7DB3F9ED525732B87F78A6A6F68BD03A0C4BC7CE50C24CF
B36119FBFBA42B3D884F1240D382595FD3B834B0AD71AB1E56D0F5F83191127A
91EC2FA73878B47D1792EB4831A45FFA2370F0C00DFA9E10987007D3F404DF3F
ADDFA043553E98422335D8D04A68B7E51243791A5FD494246ACF545EB718FA99
A270B6990F2D129B3F2A38CAFE1CD2E33C5AC3753CD227ADCFEAF86F3B073AE3
1BA05B7FE49E69F1F8036B66C61742AA104F3A1866CB6F0AF9D97C256CD8802E
F62F8DA9D7F555CC8A820C89767DD0BD1978B38A474372A7456671D78A988379
A60615EC8BCEA02C8DD089CED5D7D80C2C243AE45EE6EA9AE79CA7FE8A708062
6498547B4AA6E7AB0F84F68573F3C66B804FCC57A72716DC92EA3636ACBAC4BB
C811B6077004BAABB6BAB66244A8E90614DD491C1213388FC3D4A3D8BD4481AC
7825B0228AEDAD8512F6524838D6CEE1E967D5A7DA4B43D8529E5DA24824CD41
90F86E9C03628992246094C6F5135B014483C477475B9D20133DC343DB9690B5
E88D8E0EFC6E96368763E914F9EC6EC5726688A69AE9465DD8D20CFB0DC0DCD7
816F559280872CB866BE283EBD2E5F16FCFB9B86C403DAFF5FF1E9155874E679
A7504C87D9561FBAC94E856FF89495E08312913ED725555AC7FCCEC0D33B844A
5C2713C7BDEE9C561B42DC294204BE5D25CA070E9EC1C3A28ACE7452144DEE62
CBB2B85D37E31044BFB851675FB1DA32C76EE5F5505E9471C6A284476BB25ED3
559349D09108E2E0EB8838C7ED774B542A8D06A25135505C810EA8BF5808C259
875A0ADAC1E6F462327BCD3D91888AAE9D4B98623147F215F3214ABC5D868817
26017360C0F7B0776B1A39714272033F45F744285E4469B5579468B577D9D48B
E863807B6845F7B9F7AE27A247417080296062082212451BF41B3B34FFFD6330
05C40C34BB85D757C50BA25DD47FD1413796EF8178570E922EC25E9F36437737
D0BA76B5CB50DF38B8C5002A7236070932446F712CFF4EB40AE8B8B64392F807
7421B39E628E506948A8F1F833399369C865AE6AB99254848715F34AACB2CD9D
3B1659733030A484AE868D17C5B7C0486172433FFF96EB4128DC48269035F1FB
22BB9329553495DA478DB9D96FA6FF5124E695C417BC8DD192CF0C1E947E78B3
83B541202C9E3CA5BCDDC0E714965E7EE892FA17EE6633C18A91545C4EE82E13
08B20A5752792FB13B13D69305BEADFEE54D2A1E00B3A64A378C4FFA039DEF68
60ACF43E2D9FD2AC81A4A6D88689655154B8357D3E0DCA79946E8FBAF19D01C5
1FCB7BD4BAAD3A6B63618170EF0CE95528D127C624A749126D6F733DE685C815
2B460F4226227F2030569C0E3682672BDE9C126CA5000760F2B6D41A33D20495
7CFFE5A5FC4E76AF87A6BC89CA52ACD8CEAD4669D47312A608027E580C8017D4
65D5672396F03921CA9A3D76E002C6E760152AABBF3353EAF9806C6793944520
6F57D028D1BB06530C95A93AAE7285C5E70ACB835AD8999269F155C6BC9CFF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 14 /openbullet put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8D
07C9A8BBB76C74F0F05157151B418C385F2ECADE863C977BC1D0592216FF2843
DC1BB8509D9BB8356D008D7449147F456517EDB169678E28B2C0EDBD271BEC30
6E181064988515BD2B3AACC6D45DADEBD4DECAD9AC58CA06A6C9014B780C53D4
67D0FE46560B44CA4FF989A4D77F1B8828BB42507B524B622F10AC8781B19CE8
AA275F9FEDFB3036079F4F10ADC8CA8FAF5F5DA7088996FB632CEBD691C1F29A
FD52CB18BD258ADFB0B4B8B80F857B543BC64BE31FC83D5ED0A4866444501B5C
C98E1CF0A452E886EF57A241A093B769BB09B19B125F334D9D374A9C1B6CFFD6
FFED42F77C7624F8094CA624F45801B960F6E145D9623ADCB90F36C0C273C5B0
6E0AA4E0C95CDA1561529F446FE5489523B6E793FFF58C9DE63B03DA57EA145B
9F029FB1CFB5561C7149D486FD411C8E707D4E805F7AC940DF416EE24AEFF818
2266BD5E414B0E9E0705A1005173C293BC00646EFAF6A455AA262F6B54155CF1
873AA5D1F0603E74D4D9FA698211D75CD93944B15345682F0AFC4E4B87DCB24B
44590DE18C04FAFBC3293CFE4B7FC0E0C0293A310D956421EB00065BA9D4297A
1F78718613AFE8CEA04478ABC9F7894C1909E392EC51C24F932A9D5A20443F2A
584E651F6864E852BD3123F9448348685E12A4BC636710CC76ADE89515107327
11716EC0FFD894A0AEF39F2FDF9797BC22D999DED9C25A379E7DC4A42BB02129
69C539ABE4137C45FA4697D8D606D6B34AE2CDC25B2301E8526032F6D11480E2
47AF64DE0FB56E5230A6A0C7C7089119DF3E922A0727C5DB39A1EB958B350D0F
05856D5DF239E13E77AB80C02E7134096CC4A20A1DB7BBC5D4E77C80F7681F55
741AD1537E605641AF77E29ECDCA439DF7057338220287A28B2DD15D285CBF0A
FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 67 /C put
dup 72 /H put
dup 79 /O put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8BA2E216395135BB9D8D11C794E72CA06460A55F02528ABF0FE7EA7221FA52F3
E7A5C660E33E84ECE1BADC1866A5D520E41F813357F200AF91968BB4DD61A7A0
C4D13388442E9F796F91BFA1DDEC19E51D5AAC5C3A23CE55C14B95C124964AC0
8E3D7F0D04A17C5233C2CBC92DD03C1A8D06E9D5471B7A2E074D659C5B0561A3
4A2F1605CF54154EC1B30B31896777EF5E98AD23F40DE32DB9FF82CC4E4AE64C
608EEE0A2FA4E6E74BE7E3358EAF3C087A889420CA64CC1B060E260782BEF672
1328AEAA7F8175295BE364F4FF90ADDC9DB515FBDF97E286B1C32432485155F9
D14C370467D3FB101C510D7086DF36A41D78C76AF75315BE9F795314E5C4457E
F9AFBD1D9512ED9FB88A96BD877FA6C1B92D9B17F29DC512EB938A7DD954B838
713DCCA0885B0CA25A6947308F7FC7714FAEE77BCE39CB88A51E2AECBBE495F7
C8D181F4C52FBC301B5FFDFC44447FE6D1BC13E4287D02BDB0442BDB988DEEAD
C082ED6ED0D2033F472F2BE1409B7E4690FBCE2F829226F61E8BDB7A2DC9CF9B
9745E53D045D9C631B0D9C6E37FF6133EE08957E388D72557CCDCC561F590E31
CD5144503A563F06AE33DA5D2C59780917586DA85569C0C7C256C89174887122
F7257ADBC61532373ADAE2C599BEEA798F8B7CCE2F71605D2945E868479C2998
9A79AA4F9FE6A32D782D5372E5F4E222C73D9DEC38A03EFFDDB47AE650BF4F40
3B8D014979153BB2601E51DEFB4030FCC219DFFAD9A7F712D8E30B511E9C6E56
C5A60DB90933B021C0F85D682BEB2DAF735CD412ECCCE78A80CD60D72862EE27
0A8C85E07119B2EE31E0A5CB185CDE252B8C161443A4E1DE6C766C4CDAED8B75
C73B79DBAB4975724A762A1C20DF322B0054B68FF88754DE9EBA8713BC5F682F
F3920A601D96F55F0F6FCBC0E1635E0098F6CD769910E257B49D0398C690EF22
AF24628FBAE31F6A9A9CA6916B18881AEA39121E0B558B1EBF5788E045D343F9
F1F82AED48EF0BCD9E5AB0982B73BD929F8EF96DE7F31713501ECA4F68DE6F63
40777D8AC4FD6D5DDAABD9763AEFCD5900A34C767AE2B0DE4B10BA5FBFB91009
4116AF041F72D301018B281E5348BC945080AD8236B2CA332392E1382D952989
4478A54E89C910189522F61655509EDAE6FAE36CB8D5A9B48FBBB7A17ED7EFDA
6881F971B1D12730611B6A63C136FFBC1C8491300EDAA538F906E3722F278915
EF1FE5B7D6B4A05A376218D150793363E8312146D274578C0B2ED7FC77A20E0F
5BB7A43162E6E610B7E99BCF2898712B29CFDB80CA42651C108A0EA1AAAF8EC9
287D6382DABD7A0C3BC02BFB0146F44DA8D1C9E1E4AE9649A4D1681D45410BFB
9A2782D67ECE278F802E8B424E72CD05FDBF248F3265AD4307CD2AE314A3AAAC
934183EF6392DDD6C5CFA742A280CEDE834518F7084DE721737DF5CBEA44F746
E0A495DDB27EB22C7C9F5B035E6432E305139D7653611100FD01A6B2D99D8B15
AD76AD50F1D61886C0475AA664BF85E25345483DBE70A6F35D7BE8D8AD817E78
98F0BEBE0D6774DE3FCA73CC45C93485FD50499D65270B7107D55E52A3728FF0
CE50C1F7EA14FBD3E4B2B426453B353FC2B9988BDA6BCD32FD6801B199F0324F
34D092B9313BD0732D884827064412FCBC871C4B8D643A318B0788EC13078A28
7A1244CEC60C3EFA56222A51C056A6263AE5245E6E6FFAFF5F230423F6DEFA97
00ABA59D762E88300ED6BCA47C706A688CA2238CFD1F5C10DED75C5C7E5B80C6
4680D2BDAA50FA29EF84AC930D39D56407D475F1B4612655159B51AABF0DBA57
386FC3CDCB82ACB82E964918ACD9FF6C12A1639666FBD55462122E29C135EBDC
2ECD4FA7A9851AFB80113CBF6F9EE8B6130969C355FCDC606BADB6501AD8DEFD
B8CC16BD0D422EA15F2D91956C31BD15E347D87F942815285818F5D356AE7E49
E7D3C2AF5B405923C02F9A15E7221AB62CB674026CECF7141522E23D66CCEF10
D27BC0847ED75E0B4E832BCDBEDE7C34352A5C7C02FA3FD17E130E3008145C06
9568D7696240CD5B014B0A55135905C6EB717C38A6E75CB9281713F36885BD70
8A11CD973A12540EE8D8F07C7C32C58487A53525685462D4ABA931939B21F927
7546A87FB7E604C912EA7DAC46DF5763CA4A756DC0B51F28F06F5A7F59CE55CE
7DCE17F0E6FB4D1ED6EA25FF54A65299D2911E4B41364FBCA86A8A5643DFB9CF
8AD3512303D2A3E8539596C3BA3C547CAD316BF8CA8C264FEA13DA1AE7DF2D67
C6D7A25AF88BEF00EC0EE8A987065F661F6373DE1C4064B5F5EC92DF70C06A93
2185069BC6060E84A27F16F09C932CBF64FC8BC9FD289B8F3E0F2CE31C217305
4D83507548393614FFFD86F894C80A31C6F68A52A5100E3B670724151A015582
7C110C33790A441BF4E434ABEAF13C8FC0106E069DA3E747543B8F6A666454C2
0D387FA1E229732F77F0EC4091CB0C4337DB5076A1424151E73667168CDDE4C4
E8058A9720AD641D0210D10BA61CBDF99E6E8B58529959C40C34824FB5F0C0C0
3BA4B95F1D98F049D2F8FFBC799660E3D9DBEFBF3A1F157D5C738053C49BE4B8
B88C188D4628203635101DDAB315409DFA79D9DCAE26CC4814AE25FAD03CAF6E
F328CC08B494115699471856230A0AAC12698ACD495BFA9D9E33232937CFEC05
C090B91F139885E6C50B2AF8B5EBB80C594FE99E0AC88121A279667C50AF6DC2
68C34FC42290E63B152B954811907907E64CE5BAEA787AF425AA04820576F598
156FD70B97566229C62BB955E0DEAC485BEED412953E7A70B42458907A93A011
B72338A87F526D81F947A86255FE7119A47E2F3CFA1BB93190FF6DBC0DAEC379
F422126637DC4A78FAA5DA2AFCD86E187FB80F4DAEE706E18DD37615E5300B6C
33A0A6933A06FFAA845783597B1E78F67823D8CD940128A40495743E41EB2C99
C0067AC08B574F1A981EFE9DEEB8614D2EBAF8968F8582FF5808CB476DF4B9BC
767CEA94536BCD1958E4BFF8D82383388167CC31FE354E54EA2CED1D1DE04B42
ABA6249A1EDDF78DB6AB865EAA34E755D41C9C3DB21CDE0C462AADDFB213AC7A
7E697F251DCE841CFB0356F433C0D8329D686448AFC7FC11332907717CC7CA61
0AA973EE6964B079CBCBEE7501E8B4A1EE097AB66FD3828B3087F1F706161C16
2016AF6653D30FAA959DAE5F8C2F78F04F576F7FC3172A0171DF0A4AED5A950C
F813155054C1F005E9EC27A73E542E578A262EB3F50DAB1BFCC2079C0C885D21
210DD8CAB8F09F1570C9D08567987C8E43A2887213689E4AFD9884887ECA3FB2
AD17768CAC33011DA23D62868C8C657A30215315E9638C3BCE1A75A133A87661
2EA0BB1C827E15178CA3673E323BE5D63D099E7509D2A888122B984F7B5549D8
02672AF9060A7C7F4D19C7790BF19A80FAB40F37995106FF03DED17146B55C8C
40DDEF7486BB7E4F28A31B0369006E215FF34E64FE47BC3594468C96C0490C4E
5662F89ACA279A8C1D0CD40948A92BEB60D85B1E4379238BE8A5FC8E3A5C7205
61B342A19F6202E6C434C935318DF24216D4F91AE26D042559718DCF288950EC
A2D8A398DDFD74BCE0EE6041F26FCFB595339A75A063BA73D551F1FEE7835547
75BC7F5A2F5C6763A998699B5653C8310D5620B6496D2BD6E2F1C811DBDDB05E
37FD167AE74FDE153D89A2D7D06919F6699F69CA65104DE4CCA1C671BAD92EEF
274329C5C03D718F6DEEE572E22B183F8BE1354B93CF05FDB2DFB743CED1FFB5
CF901411B8AA3FA4ADD97556F6ABD79D0894ACFC61E3C974842B19EF4AF866FF
64FD9E3F4800A165440140E693EE5A8CFA3A3572F95E8741D649F78F65C0F68B
4F05D84E05AF88D0CEF6EBC2C42066C95E53B34EA5CD77E5E436FAB3A42C7D1B
1DC1033EA89F8DC48F03CC10CD04FEF147B0A9F8F7893D216732A9D6B7ACDB8E
466EEB142821C5D5BFDB8FC97160EC3904249159714EAE2302806874F6FF6A37
56C459CB5D34ECE20D991DDF401EA232BA9C102591C92B78A2F6A8242B988116
41D16AD33C32D1CBDE556A9A5942D8683DE713E8F5C244D171B1F0B8F0313DC3
49E1F1404ED80138C9A5740E034EDFA2F554F28186E4F58184E71B97D238452D
F73DB25095754591029E6FE74C1C7F5AF0749ED873171A612A6402284F103D49
6243CE1DBCAAEB8E572FEC29EADBC91486524BC0C315C692C563C3477B5282AB
AB572AA293E89E3F82D1A04505B66EA679CBBB7045D67F90C25F2EC478561F51
94AD52F109DAC93993F2DFCBA180769935A6013EB9F9F430444E49CEEFB6297D
0A055090BB4EA0BC02BD620334BFB29B97D7CEA658996DA2124A0236180C2D7C
48C26852BEF8C9D530A7C216E88598A6B4A46340010DBFCC4DCB1B7CBBE5B1D1
332D7F7315986DD5619378F546BD4B01262FADE972173713B946430909ABA85B
5A9B83C9481FAF25ADB83E279488FB5715C7849B7F8ED9A63FC6DF120D3B1CEE
E101C5360E04C0BBE8DA5548BCC5BE3A3D9B5EF3F3F5F29A81EA0C94F734A395
1672F5D7278419D09F857EC256414E2217C0D8E143228983B71A222844674CF1
050EBDB6B842D6345B3688E68370C89D4060839BCBD9C524CBEE7188D213C6C6
3D9F4D30D69BBC70D273476ABD4F41645CFABE0C6231F6A140CB24076AB237B1
5577204D10D070F9EA622E664BD1D979BC10ACF4AB0F9C066CCF9BF1E11E899F
3AAAFC8F27FA730024348136928E2AD7A61369827487C41A881D07534BAD93D4
2A61EC64813C92DC389C2CDA03A942F1A8D2BF6F347996E2D2BCFBE18715EF4A
498840591DD0DC36EC2CCB3E05056DE55563354306C501BEB7CBE2ABA30CB088
06385136B889EC96FE8E4C14168D601EB7327D862FF27AAC777A54D7A5462361
2F75A4B6E68126C97935EA14412D1AED0D4CE0131BE2A5471D8B3B7118
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 72 /H put
dup 76 /L put
dup 79 /O put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 115 /s put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2DF97AEE0D09A156F4D61E
BFAD51DE7C311530920A93FD6EC3E470330AAE465EC3B744AEE2F5C10C12018C
E74015A5F973442115232482E21867B22A7AC4887D3E82F32C16064A2684EC7E
78E1AB35E2D841DC068CAC8FF7F05E627E42F2B701DF842CD80161A57CC3A2F4
7F997C4288AA1C8CDA5E3C6F89AD4B0309808BF57FD24038848D6697C68C5194
87D2C0D18EFC778584AF39D2814139E38C4BCAE9E1CD3174CFDDA0974B9FAD12
5502A33F3E65A94AC101903963A84EBD442A298F148A17EF4A4CD214B123B211
2202761FBF8ED90C36858E64403E0894616BBD9691E64833B16F5BD6E4B65B1B
D866436AA7E2D2C09DDEBD95B89FEE748C24A37E511A043B25D4477B713B015A
306F1EEFB6694AA32B27B7064EAAE94F0FEC6437B6B4E988A1B47C8ACA432275
739721976F0D03471086549519212098D94298EEBD3EED8A0E8892BB78D04AE4
133AFFD328AAB9F195A0F1C4E9BC10E3F6634141A65185648E67F28A86E8AC68
9C1918C03E8A3F98100A686ADB740C45D0CB167BEB8857F79C1F86352211F2BB
BF036255E83C9F847EC2351997F4F85D0762327E1353649873CACAF6F08C1C16
A1ECDFF54FEFEF9B540A99B60868D8D3CEB7C2BFEBDE09BC866ED9AA11865B53
8D351174CA94DA51B8108E5BA74548B4769A0AED35C6A162A2F8042E0762A936
0B239F5407670A26DB1F7F5D67C4D22790BCD0F1E868456204DE3F6F1EAF14CC
B7901A3C1C54A705AE4325CB0CB8C0D4B64A6799C8449E97E13CA0AAAB196E8D
DDEC0A6F0FA98EAF74A87B9A62FE907F9F047272F59B626A0A86E2A3664081E3
8D43DD36E8252C7424120BBCB1872EFAA90AD207E93373736FF86328A93773D3
D9BFFDC6716D12AF51EFBB9410BC7408558E909EE979087A235A3586E7B93E6C
B91FCA6382226C92B9537DF8C4F37383902B4E1662256E96BC1C1E95DEC7CD47
FC235E96D3BB3D354DE81AB7CD100039346F91568267DBB3B5AAD9AF33542223
01F3ED3E14122991E7DFCCE4922C000B0533A22FF7F730A1DF211A3795A93EC8
F9EB7F8377C746DD71C8690B68C521317C9AF92B579720B119FD2C263BE7BC40
550DBD4758010F77135B3320E2003E221D65112E069F628D45A0AAF0202885FF
6B4AEAA7747249237157219D7961954D49CE14FD2A166B433AB705049F181616
6FFE8496B76E5248A3CBA43610EF3B41E58B2A7BBEF0D1DD9B4D16E2B08B8A59
9A6B7140C42CFF1589F768C9661A027E078AAF9E2F7A5ECA274083237775F1FC
6951B2F385906496758B6544ABA27E2050A1547ECC7FAAC1BDF0D64FADF03F9A
1290E91C4638656A7E3B69D1C0DC757F847BE33CA32243EBB7FA5DF8C6860B57
ED4BF5FE3B413805A02EBB77CD8026C915CBF178D2DFEACFCEECBCB930B3D568
7971F5EC8084991A7A4D73EE3CC57518E8210FC2C61BCBC9D7981370B9CE7E88
DDDAC05EDD640C86F19356D09FFA2D154B6746817FD31B267DD37B6078AC1C58
00D5233F46E4535BF0D44C4CDD4BE37E38CE83D9CD44D0CC32979A1EEEC057A6
8791DA15FF5999A8A0A26A1C469440C75A4BA862EF3F6E157210A3A46A4A3011
4F032BA029D8207CC83CD7567DDCD66E0A7FECABF664F02578FB384441DB2FB7
3BCFA45BBB87C515A0696A8E3E16985CB06F6A51A13403321B6B320D6159EBB7
CF980128435F46A8442B2506D535D1BF759930EA2C150FB078B1921F6DE29913
D2B6F1AE4F6DB85E249AC1E1A856CB690E4D9D6B4452C138A84B53712BD7B63C
872D964D7668B9D71129FCD5D4CC7763C70C28B7115634FD3C5526FBBF89EBD7
7EFB07C3DA6F0363730A2F2B44654351CE8F69FF607095EA8249069909E5FFE8
713DA536DE377B802DB51EC3DF27141DC6DE9BE82279CF5415640D5F1DCE22B7
229605912112AF1DBF25B8690226C381D7064768461AB47711845FAD8E75DFF2
08727DC428911CB820B9211D2A3C60C13E5AAFA36ED9F7A8E5D9BECFBE4384E0
4B0D6FE7C57DF41B86DB4AB32DB1BB2FDAB1D7FE2C451A54ED7938F82B8814E5
56CB4D1016889B98B36FE89BAEB6B3D26C3BE813DE2D28EADD3B7C0E18FF3E58
5C1D9DC7472D56ED0C13A96A816D538B2F90D0808FBEEB77AFE9274CC1407384
76A3E7C9E61D62CE0FCACB72E14C2FDB87A97F474251A2DF62AC15B5B4B0C5D6
D1D0BDBC1A0A79148DC119183993975A1D4BD179AE5684F91B6C75DC17746768
1DA19A8F829D470313242520B120BE71866F9CCD94A37BEDC720B27A78B12D6C
769FF65FC38C2324E2ECDD3E91D91C57D855D818C86819DA7A0A66ED02B29E24
5AC31B810E4C9547E1AEC0225BF9994A15910ED1B693697E421DE57D684F9945
987FC717470506D699774C4DD4ADCB4AA67EEEDA8E84EDCC157DD303205DE32E
A9685972A1270462B36D1983EB7EC64F3B6B81A97825C183D79BA0490D2E6AA2
8DCBF3BAE8C7A5ADEB1CEBA885B2207A70DD11EA6E1A14EBB1BBB062CE726E10
6E13371434B00A2C30C030979EBCCB7CDD87CC9059F1AFF6009BCB6110398F57
7234A79D34F58AD6DDFFBC47882111FEF99955886C444F83365CE41BF7BDA515
7CBAA3A9361165E9D8BDAC9197EC4A058ACCE10D39633C056ACCCE14E388A7FB
E9450BDC4365D2E660A69845C5573A55A929F91B3D0D6E79725A99A0AE2B0210
B46F05AC5DE29FDE928A4C012E2594CD2BCD38C237DD31475D2CA7322ED0448F
3E88D12FD386381AC66E98D0FB76249249F4A2606EEA409AE19FE44867FDE6F4
0B8EF93ECAF75089A1296D0171C95A1C2D8F8B9DAB021B09F2DCE6A7B72430D7
DECE5A9D0E5DAF001BFCAE24CA5272573F7E7E2AD72A13F14A2A739DA9D32E61
4DDE9659280C71E181018EFCB6F1C541E4831D20C11FA3F0636F2AFDA62E4F2B
C58118EDDB142207D6AF8076B2C29A346FA5B00EF2C4581962431AE6B35D03E3
0DB0451D0A8486F444B020226AB1F14ECE004067186BE334AACB804E973A2755
71270AAECED3726CEAC3340AA716E3C38B2D643164995C9A844EA8497AF14444
3B929D1D61205FC37C8722EF4F5000F629122EF878815D00BAD3B4324186BABC
12430CCE7B1FE7429251F8883F1FDFCF60DD0F44DDBAECFE8F1CE9149192877A
04EBB83F0435CF0D04698808102FB1532A43BE96AFE293731EE7455C04F1D6A7
64F886DFB22BCBE411C584DAEE2BA7F818E95D58280012CB229C97866FA3C4C4
929496CC480F4A083F786D1C23CBEE194B610B8ABAB8F5F4567EC70D7D65E8C6
7493732F92FDDD46AD46A0F58740AC5DED3806B4037342ECC6BD5B6ABF21411E
ECF7D1A49BE7AD6DD25AF95EDCEE2BEF084AA0C09C44F7E1DD4B42938CC8116F
4E6E95EDE96281D3205F5CB2460BCC9D55F761BC2ADC1574EED97764EBC1EC24
88348C9CF950219975819F060CFC68F063F8281ADF6AAABEDEA31299F12E8F20
0DA450E016D1FAC1EA8376F30AAD591E7811D76B80CF8BBD4BB16C804CF1D16A
8D1C6C67AE9A392670D18457893137411B1D7A7E342552216008542A12A3BCFC
E7CC4E03F30C7FF2B337B412DD0B89C7FF50AFAD0CF3A6D73F660FCA6AB74478
F10C61F085E41F465AA00CE74708B9192E51EE163B4A88DCF40C2324A3D89A58
3CDE73C7E3EAD764D61D0A494EBC87BBFE4A0930741EFDB3C660EE17159B3FED
758B4FD4015B15982B3C6498E6111263BD81B6DF0BDD162BBF207CD2E25BC593
E6E6A86E23AE110E758B95C16BC0ACB213A7558E6CC04F3B4472976C4A63E854
41A5BA4350E642102E2E9AB3AB3875CAD225F424DBA2D0C33CBCAE170A59CE34
7EA91DC98E212FF66D708D45F07840DD55FA0507FC519CFD8E19D61116981D0B
FD8E06FBAC992956C3B91A209C585DFD5D2113B145776E2264E3EB18FACDF0F8
C4706C3D4641ED9407750428F454F81315B08C2B3D65611110CF0C819FC5057A
F698B69490C47C9A40183C535B3F6D5516A6DA348534783AA19D148BCB205D2C
C524BBE9966CA7B479A7B003E457E88311F36820699E6043B32111EA514420FA
F0E1593C36C4747D9A776204DED1E1A025828B9D8354CE7C8FCCD76C7BCC42E2
3E8FA5D9ECC9CE8D408881E09CFE53AEB6485EC2B5CF13634265B7119C44B387
9EB3A58BC184BFD164551ED4ED7851F771827CD90A85BF13DFA25AC53FBFEC15
6D255E07DED78A529BD31E5BC6FFB1E67823A3872FD3F5A27E1771DE499BE808
991EC530AE5B215A3231576CAA9E1EB252A69BDF993681AF832CAFCD7013B4D1
401EF06A6A6AE7EFBEF8C475746D410097BF3C682B28D6B3E31A858894372689
4A84F55037484D8E07DAEA0DBA85FB5E6DB40BCCA0229526130363D305A27ACA
3E4F8585987D4D431C045906B34075FCB325B520B6B61C2AD9E35712197DD340
00D9B3ED0E1E8A327BB3123C477C8D01023426E53DAC5EF5F27591BD060E5381
DB6BE0EA285AB58ACDA5F32749C55A8A29D0FC11CA24CC45460893CF620F1D5F
11C4F84097409D53EB857AE0C8A0E4CA174EB1766F53D88B7E6E88E9AEC22017
EEB98851F224E8F0F300F5D462920D87CFA44FC84E31E04D7C370BC5B887DC62
5D887DF1E8320D9F7B0877761428EC3BAA31E2E2F632405EE4858A8CBA676440
7539E27E471863B5FFFEEDC7CDAA27F01022676D3E26209E169C6728CA2E555C
99DD796E06B403EBE8AA1532F53D511444B9308D8EC35E2910FD1B639D8B09AC
54672ABC3F30D1037645F0B319F7A97EA287997F1CB1E2A97DF269AEA6E35863
0649A3AFB4FD4B89AE4265B45B9D48519D1451D2A65615BACDD3742479CF6BED
58B4469F5A23F4E7EC0F2EAE3250B679FFE5FF299B8FF474852C89A8B9E45201
E0E1AF2D7D87BCE584777DC4B1E014FBB5FA13529F422BFD5F86FA537EAD4DA9
AA78A32101F3A896BEFD881EFF28DFE535D6379B3EE6B658FB3898261BFA3172
0CD8F9634180F38CB5AA02D82AB20CB19BDDE3D7B15AD907AC9C3AD846981A7C
F420162E88CE271AC22FAF95D9478499E666C48739DED200E5AD20C1D9E5018C
F458703974C44CFC05EE004CD1D375F9379AA0311FC4EF1A7FC3BD1549441927
3ED673E4F8863B653B2E1A2B686FCA8E1EF3F81C1626E3AC6A9FA6A7318E4F79
90938CD6C49D2F9324FFCD6FC309A18D54B33E75F7D273FA2D45366307C09214
E8D09239D2DF0F3E5BF4AE2A43D79A7D47C8F6BBA1828B708944FBBA5F834997
584B8802C0145D122BD467758B93C8057F6D8E5D8D46E871C697B6B9694904B4
BA215A8E002B8E359699D99877490836CCFF93BDBC305C7663057D9A6BDF1352
BD06596C303BB11DF11CBC466AA271AF5AA364DDE7579E59159C0B0C91B94C54
7AA6B1006FEB4CA82E73F32EAC4F7C1DAFC358FF85C2F7636277FB6EFE070A85
920F4ACCE2D6AE6BD6B8AFDA60B17536A4CE95EE28C2BFB08A1760D1F7259706
6B917DD847756F9EB968303707BDE6181D6B5A387FD0FC577A2456ECD49FA96D
0501641C352832D57AC31CC31788A53C2ADAF02BF8349878251BDC1880731E02
5FA58DB2E70DA04BD9FA6E094C51573825E56406CE67142ED04C0C4B9149B8F7
1D794844BF15D8D1FC65EBEFF8715A824AF8D06C09A1A441C143DC46A9ABBBC5
8F1ACFC21639E4D3BA02C42B0EF0B24DC3C80049D2C8138CDD8D93CFE76A6F3D
99FB09A63EB38DB142C0E337EBEA597E19979C064ED79BCCF77129E5E93EDC06
1D948301EAA18F754A9029E75C0246DC060DA6ED516F4CD1F3A9C08D1F1066F4
783D69E28AD927DD1EC8E02729F443CA47388C5A0CAE4952A143E07585026DD6
9BDA3BDCCBE37BFB52475AE445BC8F6BF787ECFBA75A197EDF602AE95CF01A69
7B459DF8CE01B2C2315699EB3535B9595FE114747BD2489E0EA58539BB714FA6
F052F6F08C654746D442CB14345D9204A0430BC6D59E7645A903A9154E32BF05
20B8E1F4D48BCBD90B1726590ADF3D41254A213429F51D8FE50E935A0E3D5836
5A8DC31B2D1F5043B48D20BD094ACCA27E74AD8ABD6C559C50B73E7A7A981C9C
F9DF70115ED61A1720E3CB84532A760190E98A9A924B4AE8589A135D7E52D454
872A862FD67B5AD9165A309CA09B02D82BE2A485C370232A0F0B2241A64CA34B
DD34921DEED3BE4F54095B7B78657E748D7881DF4182ABB9E361C88DA91C4C7A
F549840422CEC23BA131B74549F11ABD4E3A102B719DBFEBB58EA4CED6A1EE77
B06E4E956404295EDCA6D3F2057FD13BD134A7A26B297F495D6A8FE1964D9B20
CBAFADE3B4C527C7AB9877E99668518E2D219221D799E17D46F1E58DD1255D8C
10B01AF511046CBD6EABA0A7E0A0647CE4EFA77E7AF829FE22214166B1C733E9
60CFD0EF311A418289876508E3944310C3FA3EAE0F569918A737414C87B6F345
D5353F0243548B85B8B4D7F076B179EDD7BEDDAF5322F92D727628267EA961C2
6CDA75F42BD172ED1FC31E518A7A8BE77D6884D80A1EAF871D5D38535C28960F
8FC56F8428F3081A99C213FE122B701D44DD555769B3C307DC080E0207A59496
B75CE3956C224E5C287582849E2B59BE67C1E65B5441986069B62036E7075269
EC4CA80086AB04DF227B4176D44F39482BE21490517549BC00E9ED840CEA9318
D5FD3880BF3D0C1296B5C41E2F06264ECED0CECF483CEFF6222E3888C6F4CD96
9C86BF522026E176993106C682E0D9A3BB08C374CF7A5BBE12D26B6DC41FEF41
D643BD9D8F4A063881E251394AB68C911D346FFEC88518B4FED9124085A06966
8DE4DEBF454BC5E608A6F219A106BCACDDCDDFC3735B12E718692BFB4D1B7CC6
4AA0727AAADCA1FCFCF084CCE07CD587BB879FA450CA81C7B5E797EEF67D920F
EC1F8293647E909D970A21FE5DD140E71A7FFCE0620E23DF7007225ACDC6D829
F0026A26CC4D9B029F001A2821CA2E6F5D741E9F895861AAD0EE6B5A9DC39C49
6AD31F95F1397CC92B760B4700286B9222937AF99F6887EA98203D343CDB0E28
0C4046048C6E007142D9FCA755B6F9E708845E975D40FA73F5667940C8699826
0005AD399533F8DE82D6EEAE974A6A81D79FF038BE9596733DB84E4ADEBAE4EC
D7570ECFD7F1545D4ED5C997502C77E589BAA551FEC3C012829FA69B8F2D329D
F15CF6EC1E4DCC8FBB5C31D49270438038EDD7FA8C0B18E218A8B8355E154283
8520210CEAFB9DF338BF834F74F00F9E298B3BB482BB1E65B0421F79E95F2595
D29AAE39AA16734246ECDAB4C76BA1951372B88301C9D2B0B8F26858E0524AB0
7282FF7B58C3F42F5DD0662211D7E1156B2218FFC5CB0D409E9A456547C99EF6
A3082589EB24DBB38842531A30BA9B2E1CB3A6A135386AB7093CF836205E0608
C3D5D6EBAFDEB2B40024478ACAF59E086EF4F39E6728F6E1FE1AE6E64476E66F
BB9C701F64DD7D1B6B52FF17F75E995DED25CF5ACC86A5B6E6CAA4CDA0371DE3
B7221521D17B09E5971F0AAB6D8E4FA76DF5D6C2B4E629AF833B5B2098204C3D
86178EFE627FEB60D33A01E988213759B0BF3EE6C7F066DF2FCA74BE3D4C93DF
FA8D9D3DA0CF60A9CE5600D26514F85E6D6189203324CFF482C492EF118BA130
2355E93B2512CC9A799A6A1D31936CBC449C788B427E7596639D244CD89207D5
128E1ACFB38ED5A3CC3576273543574390D61D10F5F8489A550BA47305CD0B98
3299EC58754E9407853E1154055BC236BC6F213556410C8CC4CE0FA0AD6AD0E8
73D0A07A00919B843D4931086C6D4EED2B5395BAF25AAA67C8CD86573FEFD625
B0C313802354AAAEF3ED1F8F77704001E5A511E0ADACA8E4DAF7D662A1F04D53
8F3A6FA1C3EC413C6E6D32A8A63C6A4A24A808A99E8A22A7D79F78D35ACA893E
28956F10BF9B49969390349C6B8D6E7DCB4483BEBB641837590E9C7B0C5C0FEB
F3674C7171C0F25804DF74304711AC39448EF3C5E60A5065BE9DF74F5F20E3BC
10C304704174F31EFBC3DD98DC658BCE14351B388A07E8F6575E5572D9899690
7AE27BECA693044AA4A7F090AD02BFCB5418D3866A85E91551254D127F34DB0E
5F381D578F64A4F705B6F81AD3EE0B891F37A66F23A1CB2E0A5DDC4FE354B1C1
BC62D83F4BD10928A0F0D3C4F5096FFE90F06932259352C59F821DBC48FCD74A
EC601C5B11A496102D40D509C03B20AC02CBB477D3A44A068DF23D71D04545E0
E78A751EF5B96CD203448B1C76D1EB6FE5C1563E89331D1F28BAF07D2DB0E587
769726B9AF0F208D84CBA6A46F30D9E167C6543327B30D9854788430D5767DCC
801559E6601C8C7732AEBEBEAA8AF3894592D5ECFFAC9783ED9BCEAEB106E4BF
ED239CDB5F9BE7A14094D795D24DF1F17A36A25EC1375D20F2682A29DA2E01E8
06A5993D9082B51EEB416941DF5392887D537472F1273A1978C77E9B0271B41A
D8A993411E08F5C9E094A02CEBBBC2B18CB8461FA74D95C85C47F6D31FD5CFA0
15651CCD5E63C77F43B6963A02EC5087F3D030D33BCB5783272DD85AF97E3588
DD667BCE91960F0C400C1622623421C7DD107539FE4438E9A1518BD0546E59E5
88393AAFF5DE986FA172721E6D137348E8888ABE9F4E1E7BB0E81E42693E974E
AF1A67BE1A03E9EDBC1F5712E595D3BE5010911698D165FB7C3127EBFD2B5F7B
58B86F37132C75B15A7A3304B543EC1809E0F87BCF32EB11F25FB2137D1787C6
D4DEA162BFB24602803D1CF09B321FF35D4EBC5B70425DF96965B63AECC7D4FA
6A7C1FB18B2AFFD920E820AF7C5A3F5FC1A6C1918F8D0C6911C3D5E989232A44
F9F693069C1E5509BA05CBD2253566AD065DC142BC5E1B688184BC093EAA74A1
B86B34A1E1081D36A978DA88C4B974F69B26D7F394E2CA31D171E7BCE97556E4
372ED25C63274B0971208053F1EA77E7AC7D17D15FDEBCF4203E0C855AA680BB
31538C103E928682ABCAB97F5EFDE2E193E067720CA87567A6993B6F0153F429
2D6A29313EF1A8C412DFD7DEA8A0CD3ABD293790AEFE194A5B794AD566DA778D
B45C62B3557D67A2DB4F0D1E4498B2700EAA2751BBE833CCDF1DC4CD54AF87E7
B641190B187B7E22FE9D7AFE5AA69F0522494073BBBAE89260DB3C8D69A7437A
4DA791180CBBA94ED16DB6BAECCBB030D13DC540AB0292F5F54F3A8D7D28EDE9
1123B8592E79782B5BE979C04AFBE213ADB8A92844E9EEA6E1D15F8F6599AA46
5CE8E2CA7243CFD8F76D93FF66181CEA0B8AA5F53C5B45DA9F33FC9FAADC31EB
4276D624A3EADC531B36799DCBD3A7CA69CF96CB3C42856E7962ADEE96BD465B
76E7853021CE38E99B5B23C3A3C7E7A552AD51825D23856B59369F6DC0FD6C36
AFADB7CD802902132DCBBC48174C08376DC730C9C010B0B470108F884AA138EB
12DEF869B669A70478DFD996EE6795B5791956AAFDD67C2E106FEFCBD195227B
DB89A28A1840FD1F44D912D67CBFDA9602CF9EB3ACE5C80BF53923AD8999EA17
43567E235A52DF92A2C6BDC1B1B1A58097C22736DCF3E2D71D2B5EE0C3F09D86
02F753641F5F2738B1BFDAB0DF680B17E2A40C4D244F16A49E96A684C1ED7AA6
243D76669CCF9517759945937B530D6DE79826D24AE9443F00F36E22A7EA9B25
50FA786EA6C7F39E29835099C8E3D05554E34BB11AF42942E2200A45E941D50A
76111C63F0BD02784E7CAB5F9F11165DDAC15D4BA5EC71F4DDE83FC823E3B222
943BB9E166750FA443881E78E835747E7A56AFFB34D3CA6662F54EB4104B835A
D873A11BF42EE43379E449F34AA37A9DC90770518BADE6ED10F2CAF4884BF127
9963BE3776FA3F2B6BAC9F3339DA54802EBC9D91DB7500558C8383C255495EF0
74B8453EBC532787AC84E70931519A195C45D7DE558A1DF7F271D484D30A8A0D
3F707E5D3A085191739829FA5A8864
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 63 /star put
dup 86 /V put
dup 99 /c put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D76A470B0602AE45106417
0701ACD2C764DDE218B924E38B5A13CB82678372E743A8B3CC300BCBBB878978
D9847F0640A031D5E76B5AD07699C3B2FC6C1DBBF79938BA649C152FFB2B5BBA
D18B9570670B99907506494F362B124790A17D4F415D8447ECF70B67DBD46643
91AD465A1852B804CBE65206EAAA38FFD2B4180AF00DBC6296D1FEDC19FA5BCA
A34AD360FFF6448ECF0C070FCFC38C9B2A0C3BA3A2F5C501AF422AB19AF71892
751E333B368ABECC7AC0F3EAAA99AAAD749454CDC4F0D53DDAB6946150FF6432
8383F190ADF5A0E793F95B984EA4FFE8E3F0064CDD76EBBF356732D43D90B5F3
FDA9E35485D7195DAC101E55A37CC93949F576B4FBD343C963858B9A0C7ADE8C
6C5D3A40B7B6CEBDEEF87161DE49D406349ED5266412F8F4C1429D596FAA47FA
94A5BA698E80818C596FCA378F146A8D50416A77D9260A410EC766C04DB8A83A
33BC332563C72E07B87C6304DDD3D48D81E931E5CAED56609E05F5E3C02BBD17
A8F1115EAB1A69C3BEBF8DC9E60145F7EBE87401EB92AF447865859A94E83985
49EA1B1D26751D09E649C5B8C81DB886AA056924FB1DAEDC3E42BF9A6A6FC72D
FFCF838F7216130EEBDE21A678179DDF5B0E9C4A095D9EE5FB336797F512322A
F9FEA8FF055AF3B53B7C8EAAB466212B591DE82E9E572352980A036488B0C514
0F73D84972C3FBD37B7CE0A5A1C0C67B88FD675C42290C1CD494DE6E131F34B3
245D04A284511ED82A286B14F20C4E23B65FA55BA0AB574BC85B8776BAAADA03
DDD32F98DE9AB81F4C71F43FDADC68392B80DF5C31FB34F7EDE2364D100ED862
271ED7EB830EFFE1C36EE7AFD696947C3EB61529C58175974FEFBC3AA2BC88EE
6991E18DD142F2F5A3D3595ADC6E7A9BE2A96977EA6C2547B97CE59F112B60DF
A2FC2B18E67B85B4615F31C80E018ECDF2DA135B293E44C89552DD558CF54803
847BC15E9BDE60E7F4C4FD307EDA5DDCA8675C0D3F6A7A499BCB71074ADDC5CC
419EB76E25F171F42D98C5336319470626FEB07347174173BE0E7616B356FD14
114B95B81C5C85DAAA8945CE21E7816B010A43FE5076342DB7477440536B0B08
7B0557F692B16FA2220F2E8F5F72CF9618C13137D5A0C4798EDBCB7A3CEDF758
F1519F34D99F35775302F2A83FE32CBC61ABC5F80F2F55C654863CB2860B6DB9
C9A7A184E0DF2A1D64EA72E9B91C6254836610A410EEDABFD938118D9D9DF4F7
B9DDD4F0C7DA13D622D40185AB0480D54C890F4CA164C70FC3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: TeXGyreSchola-Italic
%!PS-AdobeFont-1.0: TeXGyreSchola-Italic 2.005
%%CreationDate: 30th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.
% Supported by CSTUG, DANTE eV, GUST, NTG, TUG, and TUG India.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% See the MANIFEST-TeX-Gyre-Schola.txt and README-TeX-Gyre-Schola.txt
% files for the details. For the most recent version of this license see
% http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt or
% http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt
% This work has the LPPL maintenance status "maintained".
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-TeX-Gyre-Schola.txt file.
% ADL: 750 250 0
%%EndComments
FontDirectory/TeXGyreSchola-Italic known{/TeXGyreSchola-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.005)readonly def
/Notice(Copyright 2007-2009 for TeX Gyre extensions by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS). Vietnamese characters were added by Han The Thanh.)readonly def
/FullName(TeXGyreSchola-Italic)readonly def
/FamilyName(TeXGyreSchola)readonly def
/Weight(Regular)readonly def
/isFixedPitch false def
/ItalicAngle -15 def
/UnderlinePosition -102 def
/UnderlineThickness 42 def
end readonly def
/FontName /TeXGyreSchola-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-541 -320 1367 1130}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E69EBAE83EE4CE0E45D4E0FE32296FE7E8075D
37E832BD4F19F832DEE0F6DB08CCA15E18AD216AE940CE33BB873F8BE20046C1
FD94D85C80873DFA03C7058D54287912EBEE050213EFA20991DB227F12C4420F
478BB723B6E6874EFC9280B5901BC5139CEEF30B204F8F03EDEA4F0AE618568E
97E8806F9130FFE69118A5D0CB7E3F7CE66CF7775D3AD1862F2C5AA2F705A67C
3667DB0678D2FFA03358C623A8DCD42D9AEBB091CF515193C72286EF964D35F8
72A0D8DC4847454261952A4A5A0F90192097D928E39A357F7181BB20B2EB16ED
A59BB562D26751F71BAA1921F6F4C5B462B3710102CA8CF131244588A92FE554
8411F05BF8A946719A200A86266FBA79539EB98D7631ED10F3AD19DC37BF1498
7444C742F5A4233906A02F132DBFA17FAFD310F88DA696E82EDABB73FE26CD37
A62F1C1D0DFCA78D45C67A0DBDCB6AAA80138F9BAA6169B8A416A96354A6BF40
70FC644A0F121F567A1AA4C667C724C4A765D2D44A0B93C01917A30777AFF6E6
F3CF57C34B43C4ED38DB658CA0CA35A91C7953EFD4F839E7193B9BAE72CA87D5
CC5FF2F225CF200C3B2275075C27EE11B7B271F5839695491B51898BE88E67E1
1F6B9187BD9B2B5FC40814A3C2A59CA7FDCFD8C0543C9A732DE412CF4E533A14
565A25CFF30EA1B83EA263488892DCF377F6B7A6F242979DFACA8C18EE48FFCC
4284818BCA55D10564DB1BB210E0446490C4055239B1536F405A6E3910112931
2D100FDD1B83D6CF8AA87C8EBFC881BA8F8682FD25185A8ABC00CA2DBBA8979C
A0686E5DFA05E5A0B2D33992982BF4B38E5A3DE5C89407B4AE0799A546A9DDFE
955451E59A559B63C10957247A70DA6357B12EDB4EDF4FEF2088BDEC56452043
07B442381E0B776FD37AED0B77BCDE6F957D1B013AF212358E0EC226AAC5C3FD
7F821AED6EB709CB2D71AFB68DF809B92E1015221C2C0FF410C57C973FCE4C89
2F595CFA01A072F4A14BEB7C5230B23276378C69DA055E9CF8212C7C3A9742F8
C5D2AF2F7D6D5D2E631F59A4F2082EF92564B809A3F2D591CAB4A81E4164F827
F35924B104E2D552CA2B448242D6361DFE40E999BCE6425C6A0B6426FC480949
676321FFFA0E5FF1A4AB5C77B5FFC96866641D00B0AB0281C7CD4FBA1531B7D9
0876614B5124081C877C70EA89406DE49C4DD9745142652D4566363B820D857B
334F26D55DD2E97AB66BE0F08340F7D727272E4D9457D8C2A1E937B47C402718
5A16F356294AFFB344911D7ECD11AA4FF54DEF7738C53B3E51C9FD432F22202E
89A91B046BA4CDD601F1DAB166058080D42F90499B415AD8AAFD99A83309A0F9
21F59D19BDDEEF94B13807520C8B4F0FC69BB710BC75E0106F5F94BDCD5EC382
6DA19468F81E0CCC91527462F8C8B2DB60A318DFD08CA53AFC3C56ACC0A70F58
A3967DE26F93EB7C1019B8A18D4135A9C32EF9EB9AD584935A58676976DDD2B6
E118FD1D46428D691A95FF11B58FD6F8BBDFAC9A3E1BA1D49D6F3016A0164552
AE036D30935949DB8929F2E389124AB038C9FB9AA802F3002A29CE268FE9D75A
7FC59B0515A81F088C9AE16443C5E70BC18F029243D6F681B4248CF9D68763C0
77C0C1C3D6CA8DADDA97A4265D15B5E1CAED0ECB0B4073475DFB74C2575CADC0
36837DEAF9EEC52118FECA4C326D9D8B30A01DDE65747AF9A72C1045FD7E0F58
6CBF2D967E468B2E8E763415D55A92E22567DDC967BF400AF513EDEDEBF50C61
D9A38505F3C22E6FBA8E9B22722DD25AE3BA2DEC2A0C9962595E9A52B3D8AC1E
8FC11E22707E26253E1AA57757488A18E338578927CBC76F06699BB084F049E3
2C1F9F58C78C3514CF2FB460C3623CA94748172F646F78DCA40F5946D9266E07
CBF681164FEAF332C19BB64D219321E41EA5FA846C05226796D86CF4415C5B73
9C3AD2D7AA13FDD13235C6D108916318648507B20DEA5F0116A7351DAF147B6C
496891B9F34006745CCBFB5672B756BA24DB51A2A131B516923D5CC746A428CC
0C0254C27B0A0F8D3ECD1B056A35C37842C492DC0EB9EBD541AA9FBFDDEF1F77
5BE0C411788B054AAF21D9A5930533FFBFA7D3873F8ACB0692B310ACA0D9C6A9
E303A6B9AE1AE673AEFBAB29855FB3D8891C19BF97502F351D81614CD73E27F2
30046F89E913D0206DFC93BBB1BB4A3200B92F0FFEF45ECE0C0BDF31371385FB
5F85BC040258DB2E044A6DBC0975EA6AD0CD1E8737E0EC21F7CD596D42A88458
B89786C2F6D96D674E6128ACFCBE80D55A54E9B0A6134FD07C076DCD93A5306D
2EBD3AA0CE027E4703A2EF8A43EEAC6048A78A4127CA7332E5039A2A7E32F238
9255B0491050D93E3B8C71D54471DC77362E329CB71D690E0261FC24B0DDBDD4
CC852F53207B4C082D3C99D3064637F8C113AC47E2372B4552D66D524DB3B2A8
D3BB4E94994FA4B3C4140F146A06890ADEBBF2BF3D2FD3C6966820600DD87A29
F1884E7C4B715935E2B9D435CB9B04E548DBDB7D441B7AE1D7BE2A4374EE3E98
958F9D0FD7E0EA629183CC196B5EB07D748A38D399A82B39AC72D636AE969256
DCE69FED198010F2078CEE12738CE1B8F1DA62F4F1D35FD7704B9867C833ED3E
CB005A96DC5D8D10E3E553921FAB9ED7F964ED314D50CDC06341481153D90C3D
704E58E7B65C8DEED54AB621BC3AD46EA86FA3C085650A8610901321BAFE2BAF
5CF065EA8A940B85D60632C24BC2D66EDD81132E44128EE1BE623EDD5DA8FE01
20547662CC0F00E35FC8A0D1276E933493B29F362D90CBEA0DB526FB45FB1478
F8554CC7245622765FA72E4176D1B9FE2AC37C8C0EC10FB99F32B99FEE84A030
B0553B3249D6BAF5A5D3E73EEE440216A87F2F7EEB6B877B917F3C1DC024FB4D
5E3D1751ACBD3DA16D972A950DC85C427E584BCDA54C7892F94C31BE1EFCCD81
03526C7DFF028DA7052EF72E9BCD6B99FB5104432DD90CE65A096396CA62ADD6
3F8D083ACB44B52B1944419DD718AB56E6E325771A6A420B04A829E167AB5A5F
7CBBEECC4CE833C10CD0854D9CA3E18F9478476E7434D3AC1960A5B2429AD49B
D463F47C7F9E04FD5DEA0FB07B391FEDB7A9462D7789C875F633134A31C640EF
0CCFC2AEA3B4E408FD0141F7696DE8FB7741B741D355A34A02E9BA9C87712273
657C2FD31E9717FE5EC1A550EF9E2FDEB0F43558C34685030096DEA6AF7AD28E
2DD526D66EF00BB3F498CD7D8F73A0EB1FBE7B70C8CE7D21527DCA75C05693BD
96C3C5F7CE2DD08FA2E031925584566E36545DAB1BB0350ED11962A1AFC0FB26
154E033218C2490507219F411B53860DC62CC446D3903FFD37E0BF9162ED856B
CB883AC64DBACF13C8CF4E2EC062206BD45028320F612F09E20933D1022DA4AD
3A3020F79368632768C2988B95947F004F0A897882971D1E415B69CBD76AB14B
9D483E312CDAC16CA060FA5E8E42B7976BDB0BA9541C4BC4D52E78B27A856A88
6BABE6D47BCECB901989FD377E93EA23C45B7C0F0BF79744EA0F0CE4A858AEA8
BAD797B3D3E2E24CC0880D07E42434B2ACCEFD44AF65D2D67868628B408F56BE
5DD221F4E05D8C864F9DD3E99FF86033345AF77E9C396B60AC5143932D62BD74
54D7C4A19574338E0B37511CF3AB6B7EDBB237ED747AD16E7C3D0D96B19CDEFC
01A7C48DB7041AEA1D83C0F18DB47CD8E2B830669F8630FB55709D85C29E7014
A84F592D70029D909257BE14CBF3042623E280EDC775565934D142C6CA069465
E5A64A0E8A150835751C717DAFF65FC7EB2C6DF873174345CA9B25F491371A13
508556EF13A41D27D4E2D6E2102C7FB130B8642096B3D2816A6DC191F533A5DA
8B4B245763D43CF575A503E44679A8690BBA3167FD6C8780F3FACED5AFB51E84
44FBDB3EAA76EAAAE99801DDC5B9823089EFA718D0D606FD8A7370CFEBB00CA5
98FB92FF2E8F4981BBA26BB860E131ED9AE9AE51F1C27B6FDACEF33E471AA9CE
A4E344C196954CA653AEE2BEC619DD75BF2679D456299A52802A64B2E8572DE9
1ABF81C8AC2B28B098DB90E754F6CB19C6FC59C10EAA581E6AB0DE87BDB8437F
B2BACC6D518A7C2DC72235C37392697AF95FB4F1AFD8CCF42255F33B3FB25A2A
6EE01B5A0A6F29AD66A67B1F48D6F21238F5377B3F1F1427F5826F5D00BD603C
8E0FC735A9A2813A7205A402012BE5E3FE8E6CC190CAF25D9965C7D9929B90EE
FB3B1EF3AACA3FCEE17C7835239CD8296B654CB5C2B1D6281AD3B91FAC8450BF
5CAC4771C3ECDFF1D7C22793E76FCC5C42CADBE15BD012DC48EEA1439351E9B9
EF85ED875422A0A51F2333C9056CE79C62C1591B12A9B82CBE1F3F03D7E973E7
4B0DBCAD0AAA3304BF771CEDC1ECC1EEA9D34523544C00B58BDF6D1CB094A39F
0AC8535F07BA31C71CA5D158A149F93122339B78D42537BAA87E0BBE78BA5B5C
0BAE2F3534E41928F97D117A3D578BA261CE4E68C0F77F30F59EB17E7F860247
02EA8A9A31D45A530C3C76BFA4056CF63C5A6CD90453B564B8FD5D5C6FC917E2
A4CFA8FEEAD0D310BDBC7455F9E07E0D00E38A7A2FF7E623808F4B3E81F77423
011EF6036096398D8D10ADD46B3FCFC12980C2EF79CC7326BAC78D75F9B073B5
62F6812D9491A77D5F75F8B16BFB2B9ABA68B9495E15ED996F3AFAFA8B8FD730
796CA5DD1E06D19E0E44804AB992686370EB8BD3975DC524541DB83BD9601E40
AF90D567EE3258AA1C2FD38476B93A046DC29FEB61EAFAC41DDD746500C46060
9C209DE4D3D5B4171074B0B21AE18BE393984499418AFFE2D26E3A15DA0432E4
E6B15F9E7C2C8477AB5B1C5A25CA32FF7B1DFE2FD21D3541474DDA5086AD75C3
5E37CC601D82EF4EBF6FB5C8C1B20D1AD0FD2E6A4C530BEEF479CA1632A86738
FC4C2E7A3A4438D1D16BC51653FAA26A3D2570E2C36D1CF43D1AB5EC07FD0265
1DB2565E849E3DDB2D6D35AF7717016826D699540EDCF90853ACE5012FF6CC42
08FA18CCB93DDF3784D054AAF95DC58EE4FB86D7C0CF2B8E9FC3FF3B65E9B480
E59D1FDE2AC1E48300A2276706EC7C748A40418CD85FD323D46131B928489270
FB04FFC130DB27879AF2191145B1E926385E9AA37179B6A2FD7FCE95CF0ABE55
6B181EEFAA61A240D72310EA68C48B1D5BC0A9F9A1E08F5F5A67D699C2FD288D
79111B17C741D529C5C10F6F5F38FDF5A90092054138EE72EED47FBF3CBE34BA
43402E29BF660674457A70FA85749CF8F0CC740618BA5DCDAD4693F4E1736386
4CC8AFAF9A5710951883B78DA708C33340589D3651EDD7EF929FFD03FF109B6B
54A2EB3A3D18E08CC1F7D36D1F00F49922B662DE05805DCBEAFC5985067ED286
06969DFB353E078B200461EFE9B291836685071A7C7643F9546746A4E5F21D64
7E2546E5E8702729D1144DD5A9AE100CAD85EFFFB94024CB2D6F57CCC4134CB6
07D56892AAA406A3D0E01C25CA3751047547D99EED11AEFDF7FE421D3D937F04
97F0F6CAF8690596A92D6B28370196094CE0D08966822BEDDEAA3E177C5141A9
845302F716DECFF0D598C6E76D4C38D855CC53AB9F5668272B4E4BCCF9E6C32B
C75EA72EF317F76DDDFA3ACC3761B10C6BF22F5D830E7DEE9D4CBEE4DC23636D
83F81ECC28DB55A59A2CD4188B3A8EF59F0297765D3E4DE71F0CC30B63C9F47E
8E7FBA337E6AEACC7FEB7F64CEBCCEC52EAA2364B7C4C22B20FF8BCFDF1D312F
C0FC0162F47FB4D8D9034DC1921134E74040E6E7E797E18AF57941DDF7DE2072
ADAF57F1385EB8D49CEC9F91A24DD05CE41B0B5C871E5F56F52C87C2BC948400
5A11A8D4F968E95FDE6C8C6BA0949ED87351020E43047E47CCE0BDC342A927FF
F8372D49296F9FF922648E6D6191BFA132B8B8B2F95468CD1EC3FFA200D1D0B9
A91F0F83DAD1DFED8E8E569D3D3DC4E4228A81A6612CDD70EFCC77248DAC4E0D
14CBF511921B641397A1B020389DEB8841CB34E59B660CAF50371D6C1251E17C
875B7531CD1BC116AC4F21FDF43764C2E9B8BFF1C2FE513C93C7EB2528CC8B04
72B5A579EC88E8B8BF3BE742E2EC53C778F677810DAD0C8F97E6FC8724E1A1AD
2B8E5D150CB3584CB2DDC5796F17B54A16ACA137BAC91CECA3DEBEB081964C61
50ABBD5B3A4B88B8F217AC3DD0ABDD83226C25C32643FDA7E4F9F5DA3AFE7421
68E255B7F6CDC435ECAE7B8342CD51E7450D43FD144E5028CFC8E3EDA1EC59EE
43FA5C128733D5FAA37D5032501CA2C9848B0C170A87568FC3BF12E2F3FF6DA7
F1750CE53F15B4D5A61F5B257AE0F3D2F5F807CDFDED8A6F5EE9C776AC7EE474
E7D47F4F435F098D346360D280B813A8BEA26BEBEF093499F07B7E0E31F556E2
E019FABA5360B9827E6EC7D46DEEDCF7E1E1A36E82BCB10E5E51B131A7CE8E50
24A871B21B3D4073AA4A21E208510B16A23D9F12641FB54B836C7FC5A1A8A411
A597335E6BCB62888AC8539B30EF076C41B5B2AD6BE04FA169800228BAE3E6D4
040A1FB0350083FAC01F1A052E23200E94DCDA8807FC3021A6D00D6FF12D0174
2E9AAFACF2CFCAF0517858C28A24FFEB50D681604A5C1836D42AE44E13620262
3EFF3B3871D98899CE058CA4994F6AD3FD93A2EBD338C28CDCBBA3BB2CEE0596
87FE5220B6547F10E5C09F9E499346B2E37AD55276BF2C4F9BE9BD77A75D5A1E
7BEC988F06F62D5F1CF6343910D9FBB4225C1BAFF7CF3EC402F58A640D1DF58C
398B5B6A6A2EE27DFA1F3F613094594116E0EE25362D3738D6F064C3BB1A935A
3156AA5802E082179E316C22CF7531B886A9483867A5E3CB8A961CEB372CDE1E
A8520524CEDFFD53A6555556089ADAB4DAF9B826BC53D97B43C4CEE666A5693C
95962D6AC49F31A5D39135CC8D7625FD5EDE4F12067CA525859B73E6FD4FDC8F
5865595402344823B8EA6D147D264E48E69939FDF48DF49CBE4C79136D6F1C92
4FFD9E94B76F6EB9D89B157A3F26BEA910867BFBD51E0BFF44D56F0B5A0AB3CD
1F01A0271DA66EFD51258F70E467C0A77E0A3D71A628ED2C5458AED85755325C
C39BBC3BA6A8099856FA043E143FA1A5B5F00E5CC3926F051D0EE5EDD68840C6
134EB89984A6F1086256FFFD08BE34848FEA0015CC28BA9335A5931164619549
7E5D4D6BD6F5B16CA72F10CA9147EEBB4AC1205264C06087C7308074735EEF2E
EC7F2BA3E5D66350AC0FBDF769E54B11A5DFF7720FC03CDD0260801639B3024B
7847E996039601F6AFCB849D7FEA9789840A5620C8DD4F4FAEADDF737EBFAA0D
7F3977EEE12722F9712F9A88DBA8330981646E985FA022E096575F5B893924EF
A75FC55E740C78D4A1C58DFB927128915966BD921C486DFC3FFAA3903870ABF4
07D82A8C79AD6DFC8C619CE8FE1EEE3B9FE2203DC6C75B23C05C7C17BD16A11D
FD7D48F4FE71A6869C42FCF442B14CE63904BB3AC4563D3E778E0C96590D2D4D
A46741A9F8D33BF4A11E12A7615492844087C6D5BB3659B7E9A51A59BCD775A3
293189784AC8218ED43C956761169D95A304DA3A579EC35F7F38C9A80F29BB2E
6146AA109B8C300D2EDDE58958E4928D006C5017706C1C0CE6A08C877ACB80D1
36B87307C25B821828F53A261608FFD5E07E1D36426F3112E17476602F3D7B5A
A66AC7125730106DB09BA4A2A46FAEF9273CC1C02223B545B466DAE292DF8FFD
27680D2ACC6987BE974B04232D56DDA60AD2549941B173A01BBCE289A295CFD5
C2D2ABD635DA7FFE17B6ADFA3B8D0272E1BD78909C7D352D00C27F99EC32C1BB
CECC84952F238557A5044367C4D455433442616A4C524794944C34C57BAA1868
58CAFA75BA7DFD613802C1A92DC1B582F367CCFEFDEF1C42C612D947DF7BF714
24AC15631E1644C74DAC6FBAD49F35764DE6FC0B0215E256C7DD1E3194BDA9CF
6C6CAD374FBD8DB58EF1E81CA38D9BB91C681B7DBE3E7C7BDD5E6E3F28BC2BC1
F61B40C6B7DB8193FF92366AB94B406DC87770A2258EDAF9CC898F5FD2C294C3
516F1EE4C13CAAC355E995A962D99276682FD5E5514CA68BB67B6D0DAD8CC299
A8CB22ACF609E7A2358CD25F409B5A642CE6C33787F3C927C79180EE44B58339
DEE85CE619109DC5B0CBA8EAA63129ACF3A942E784AC125945B02F5E350BA327
DF3F4F721BB71490406FCA40D2F1CEC1E150F553908DFCEAE061855719D9E701
E5C03C65A92958D22B63F541A5C8997C5A7CF67EB699B713822F634A96C5D192
3710DB4B98B063FA07A5F807526F4C9FB31628AE92D61AC83A80D1EE1AB160F0
C89D478F514629E5A25C4FDE51CB19068F183D547C8A11B2D32C4A7B17865D9B
7D0FC9DAFFF25889365D6071B557001309AE34EF4E7CF2799E7589449EF35A44
080F6E41F8953EA5F73800BA28FB0A95B31985C9B36A75CC7D79AE2AEA2111F0
6336C394A67EB4705D5E99A4AF22DA60138EC1501C46CB5B5152192E8D337A77
D60A3BC09E9856D14729E8002E4507A1AFD615AD0A613DDA0C4176099B6CECE7
2D7992DC7BC4F5D001F82EBFBE58CFDE6CCB8BC92D0D26A7DEDA6FE09F7DC39F
9F2DE66A66185653110505BF29411E0A908DB4E1BCAEF75C34B1C0A724AD6C74
95948CB7CCE21BAAC7D1358E4BBD39AFEA340EEC152D77D1880741555F4B0897
78D5E104CC29E7ECE5B1525A740B80BB8B3C209EEAA6A4B2422F75140C6A530C
5AFB3DBCAB07A8F9A07FB3455B1CE6936AF27B3CDA90088CDE1323C6040FB8F2
D23C0B2B9E0DFC9F87A76B746B6AEEC9D5B0D1C9641E59CE041594E0396A0BE4
B3B704C0AE0FB4F043144C99F35A215B53DD2A8F4654B5CAB1CFD59EEBA7F5DC
2C1BB8614BF8524B14273B0CA7DEF3C1DAA7F1FE10CDF6C081F3345BB234239D
3421ECE06BD22862FBB603738B2776D1C11C1CA08BC250CC633D28A004F1DFCC
0578C321A250C9B349B72DCBE46D50CB57458FB78C6ECB6460A281A80F502523
BC02292D6BBC874360F8EBF20EEC39C37C6FC2087779FCA72E27D320FD607249
CF57E563E6D21064ACB65D4AE6108365B1AEEB8CAC3B04F079E4557AEA1F9C18
CF250FC5195F3777071DEFA5D9E32E3757D29531D7FCF22989718F2B06BC3288
1DDB7B0ECCFFCE5E082CD7FF922805C21AB944093D8B7306E4DCA49805DD8D20
731DB26C86ABBABBA38577207C0FA4C177C140D2E1DCAED1B2AE879E7BEE3E45
6B41B6AEB440DA475E13240445D46726A6D4518F3069E89E1ECAB22C58A1678E
A936F6804E78DAEAFCF1C3E202EDDDDD7AE2A28CF1A20F7B73911F39D6E41D41
D918F8B207B57B80116C42EED0BE15D728D7D835AD380B5D0F6C696A120E2380
F15F664122CD4E69A92200F9ED0ED696F94F94A574D4E7276F96E891EE4B905F
7287E3BC7124373543A2C18439DB2227247B30A41C72B8841461E0B77700680D
76C4999A7EB3FB9C5287C3764AE202FCC9B323648D1111EBFF81835631AD6C6F
B88D8E7F0DBB9FEEFEE14143654B5371340E1067A2A61839FCC9E73887A98CF4
85A5ABB5580D48CAA783FC4360E8E4982B8465D8B9959A9855B99748A4BFCBA7
2B3406153235F7A04DC6B684A2ABBE3BD976D458A2D390517969821220A959B3
A519F57AA785B3391F9355F74CD2351AF96C96F484D4DD6EBD8D243D45E089AC
01843A0B408603CAB0C3A0C6CF7962A86B26F3AB70A8D25526BAD00D4DAF24F1
4D814CDCAAC830DD6D2B2353019C8CBCEF379827150B19A3CC34CD2B4F23B41E
48AE0EC38B4BB1CBB269AE5892ED110F88E341751A56221115586A9ADC136D92
191B5A4643102DFD0AFCD8682BE5CA11AABA54285DEB166E9E55882E29B65E5B
ED61359E90187A6854C768BFBC9217A54F7FFA5DE7B0DD369BF65E34A8B9C328
8D943DAF7738923689F96FA3FA86AA4C503C7CA2D05701B6A32862589EE9832F
C6295AF61B462F8DDAEE658222AE1FD097BC4AF5366221DF88F3A15D9619D717
EBCD444493D5465513E42E548F64A50ED78AEC9D62E0F9CF61ED5D856630C0E0
ADCBD3D1F3B66962A7C6579DE0654DFE73CC849178718824AB8E417CBBF6433B
B9F2BF304D1CBD00B46EBFD5E6625286B9FAAFADFF8458994798F6AA602F5871
B3187BE186AEF93732E6BCFDDC80F39F89FE386B48244E65F7A54E14EA3DEE46
21E32EE2D2813675D84447CFC054513822A586932D1B1219BE525A61FFEED925
47E94188A4298D6A7ECA57A9254FE680E5344B953002E0F8A0DC033E93B040A6
121DA499CC2DD64BDF070BD7CB20AE4159CCFE773D9A5EF6627DBC1F119BA6B4
88D32E43EBC09FFBE37B6495723BC90D3AB7C2E039B5A69EC900C2C1F2C78730
EBE1B02A914C78FC579B9719D1AA1F470E78026438BF382FD927C83759D6C66F
C517A48E426E9C627B066489B932A3E4F390DBA4EBA9D633AA770B9C5B25B3DF
8F05B8E6BC9B5F66B7234202167D21C96D24FAAEA15C27782523E38769E598D5
38B9DB53CCD8CABDAFB48BC05A5C7619880B5D7C058A411AD96E47CD658DA1DB
1428B10CD72CF6AF051F4D1CAAFB2CEBA0AD82AD77382DFF4908D6A6639F28A6
BE7ABC199BFE58FAE681A7788D900508B2967DCFE830F70A6EDCA33AE8876EF1
782BA3F49B7D581AC69402BD441A20888426D2073ABB96A6510DCAAF4A2F4ABB
726C7C4968FDDE3B2DF8167A847D82799F51E010A72A30771C3E3DEE872B7244
6B3FDC036B54B7BCFA1B9207F1D2A57485B766422143DE09C91CE6E890BF6A0D
BA5A97D1CA85E8AE66F2A3B78345348073A4037C10CD790A7F3B8F4C35DBE5BD
5F5678EC145A6A7A6376AF4D64688C0618ED26CF4ACB665CF384897F3E5156C9
C207F4D6D914D06D2F587530D12214A3CA55B5C2F66574675290E6D6E031AB34
225D92A83374078E036FCFF098B6D25837B8D326997431B13D7B0494AEB09139
2FE028B0FFC90A38B99AF20B5898BA0B611AC689C140BF1F60B1660781406614
AD0E7B8FE0FFDDE5A65680DB97DADDDAB1D7850CE231A66F5ED8EB40882BC1C4
DD8EB1E1862E5D6D3B6E62AB8D85CAC71B48A83478D7FFBD94E0C35763182A05
1FCACBBD666E03347A68B3CCBC0B777B1A25EEDBC6225E0A87C8FFE62A839C56
C87FEDAF1F500C600FA6FB1903E2DD19CA7A461F277A50C78EE20996F52867C6
CDD54B973B6E01CA937D4D9088779538C4E53956E0A34D2982F11973A8DF98D7
0A84319C33EE3FA771C63D955358FE5F9F5A4D42B36AE8F988CCD6E64FCD908E
186B5A055FE0AAD9EB00BE389DD4D813DBA3D9357D935934F67B0348C37CCE6B
311F839595C39C3DB2BD411F9967497EDA800AE794DE6E5CAB072FD1497CCE94
2925D67F296B99BFC9F4A789C0923FFE8BE2A8582D16303A6BE41FBEDBFD190F
C922477E56D545D471DFB03CFABE88193C3FA86141E17DB1DD7EF75A885DDDE8
8C932DF20906E6873997A3490967DCFBB99FFA480FF4A0E6B9B715F5D846F222
0FBF861CC7166BBF91AE735D53D42FFA530EDC774B5CF4BB6A1F73F9FA72DABD
6F0BE02841E00F29406853D8A5D64194339EB99785EEB01882C1F0DD063901C9
671F77F34A63F361C5579EC5E00C59D1B3A6228590F5F3284F9A188908B72E16
7E4F1573A2669C04CF556E37AFFE1CFD4672A06DA6EE8B8FBB54F26A1D3383CE
1209A8F68D09775E74B254EB0B14A027BFD749FE5F671803013BE7AC73C7D0FD
535A1119972AC26EB884477FB65A798339644DA147DEE106AC145DCD4E1893D4
EF42DD3E28A9EC051F64A36A5A38915A12C9B284B1053495637749526511702D
374EECB15A2199286BE84A17AE9B4FF267F464BC5739878038FEF6C904AD2958
EF6F22CD2AE3FF6E16A3F931E710716A97737B3D37FB4ABFE421C4560A2BA0A1
F1C0E7F4B6CDC2165E496FF11535ED3B564FF116B0E2F68451E7B864C0700A27
DE4DAE11665F42DC5BD542C2EAD5DB2FD2FEA98E31587B5DC90FA6E61837CC71
B70931A761D0F3E71B37CAFA7163C250D520FD4DA2857B5DD6AB92698FB10CC8
092D5C43ECA174C3FCC1E50E06CBD0580B41789D04B48259CAABA1A954555864
919B6EC746C96CC61C818149D45DDF710499CBBFBE1AA5D208AFC8A38425E05B
C5CDC1F8BC375505B3B89136EAC99E09A4F10AB877C436C3BC468BDCD6D69D3C
10A0DBB28EFC16DB6E115995CDD5B85319EA3EABF03C0D21319F3267804C0E19
1B225FC00404E09FF8F579B5930973D31347DDDF10BD1B8D4F0A56772E099635
0AE351A759FA096A1C9D487A77ADFF91DCD9990B87BDFB5EA9D85BF589D225A5
D314F8128BF79814D9BCA3527FFA8C0C2CD094CD7C9831906F6ACEEDF20DE115
49205CF413071EB168D0D9D3DB282B12BCB512B9D023CA05156D31CE8E8D9AD3
E301DB0703D8F304486556BC509FE9421A06AC4B263FA08742165E85E8C5DAA0
7B7CD7F9D7CFD1A202580A24E0E4AA0F68375EA6894B275D26BBEC215C81BDA1
A9E134662C8DCD6463C7418B4BCFC127238A8DD5615E450E6653CBD04282058B
D4F4E44AF37188FE8AB9B30AD421BC959C5F3A1EED70E7229620E9DAE7A397A0
915E8EB30C2E1AA12AF1ECA0CA22CBF8007BDB97E5DC70FAE069B481457BAD5C
F6A7363AC04B0624A7DF326F0688CBDAAAB9B5E8D32537B288D4F9A1D8983524
757DFE076524A2C8470B83C41F6592E698BF8F9A7DE48D15F86742B800D3B977
2625C20B39352AE4D14D3340A9AA3A0EBFCE8A593AF15461583509C50DE3D7C7
7FB860704EBE8C24D1A37A5EAEA865B9D2FCEDCD09993D20C04682EEAA387FEC
06865EE5635217E61396D3716E266481DA0C9F542F8D5B82F24FBC2BA440EEA0
59A49A4D00015154500BF9F8D28FF946A9F22B358FD68A09E5CB4F69D2117390
C131C5EEB071E0C177DAA00B92890A034A2FFBBA5D41964D82FAF6B0066072FB
72D19A52AB06B3B7EE9BD7982E74D7913C424390FFBFC9EAA73C453C5BBB1250
6ACB3D859E331225BBE0FA30CF533A2C6D45C74603D2B5D851BEEC46776CE531
82DD8B9A3222D4F4BB9C4287EC21452229867A357DE95A7D545C3562657CC9EC
B255919BC66942B8C6E776C6BCF8801843F7AE08F5ABFF0D61CA76C9310577F2
48D349C1F4F1554E90F97B21AE9DD369F5CCE7690670E290534304D6AD769FB9
89939CECEDE2FD4EFB2375B3DF9D751AA46A9C52B6DD8D27A08551AF34C0A1F5
DEEAE71F5F1E91F5A29107A68066A53704817BD1C99E378C2BF41018C9E39AC2
D63122A3A409DF2C55BEA6741E8F957CCF8B49350116A94C1982EEDF66EFF793
2D12617F4FA5B2075ABBFA5B9682D05205EEC0D0EA52D31BE772DCF52FB024C8
364F1BCF967FEE2B84DAFFCD73213018499582A93468F2B52008CA3622258442
A17C3E8F531A57EA77DDAFC82D3A7D1985B2D02C4BAD9C35A3CFC85292B44183
EF1CB9A9FC0AB37964741028260920CA34A77FC7E662A73335A430E34EE22716
9B1091F2CBC03F4DE6B7D752883AA80E31A0EF0A2B5546DF1A50742B284453BB
6F824835CDF9DB098BC76CA1F306EA7389FDC1874319631E4C662C9C68868890
B42D93A1326890443C692249430BFC3D84DD1BF24F80D0975DBFBC8101CCA5E7
0934685EDDC8AB34F4C00FB81E38C70BE65D9B8200B32D7368EC958971F6DD8D
5D97E9EFF2FD03268A3665B519CDB7E2378F46DC92FF8F7970CE5EFD9B14A88F
147851FCD85007E977C6EDD006E0430BEDF4A484B4B9AB0A69C94BB35D55EEFC
72CB446B6A381C3CE7C6A67DF2B651C3A7791556B1DA71AB27885183D965ACA5
3326E328A8F446C41510A842D5DFFA8223B0357CD419B7A344550A1D33ACDBF5
636346E0A2A60A0D4E992B2353FF01581DEAFC030C2CC97DE5E1DA366BBAC522
8C6352EA88F4538F64D0A08C138EAEE72D20F59CB8F5DD64D4FAF490734DC075
0B3E204D6FF38C1F6ECCDE9F628D62581D54A0EADF9DEFFB3DB34A9F052BCE33
D75BBB3BAA0BF98438AB83FB5D3F976ECD26A4B5D7980BB4054BCBF911BBFBD7
3E1621E4508215C9B660518C4EB6656BF5E7FD4AD8D5F07BD93BF7D3B878829E
0C4DD826569CE3129549C594D33B30DE0A59DC9A63C681536BA48CC79062A6F0
E358BB96C815AB13296F3745582FCB7AFED6E3D0DC8157A389BBB3C8C2D91E42
A8F3E97D7C975FBD9EFC4F8B8906C6A7E33CF0716850CA543604E81B2C599A51
3A5A5F8F39BBA8D08AEB6465A1FB12589E22DA0733C148B5A052196AB08680F5
ECC44BAEB2FC47935AB42BDB21F7619180B8C7E0F275BF550881FEFF36A47EDA
8E024D71908160B1EE7C648F246AA8FB60C78AC1704B9F20199F90DF5B338501
403614E907DECA0184C1BEB1EFB3EC49F1F25FDED5170B8100E581BC6E2AE6CF
D348673DDC36E79AA59E939FF62BA99C4C297A2F854FD0B4097A3D8EA92EE7AC
FEA6047FB0FF00F425ADFA05630B820D009616EEBD310CFBDBE1C441A811D350
93556CF4B40107213965AA67A0C5B73480D001E82AA62AF79152B5B7B5179459
85198DF174EE59566AD118A44915C93D445D418B57419811A93863E9697071E1
4D3267A7FD5A42D031810A28CDCB4D31C8E5E6DB585C2DD28B5C0305C968BF0A
47E3E9F4E403A22EA36E867F53739AA226E5184AC17772A8043A2240FCCFA643
4B1639A763B4DEEE7EFB11D9855FE5D7BC788EABD2A7459B0FE262EDA172A99B
DB56F619FA9CB2E53E15F94647C5EA30E90077FB245D704083E501841347B976
5E60F83D6F20F53EB1C3A2ED0C303EEE4C9BA86B02C4CFC44F89B64CC45BB51E
F8580D994B7B74BE4D0D47F6548D36B0D975FE9459A3CD6683415FF835C40C3E
672EB79BCFE989DDA09ADF3A275AF627BB3BDB8A8EFA4A4DB85DF14DE86E3343
52207EE5C4C1EE7ED874D6095BAD166CB1315340C58A34B71E25E517C60BC43F
C2FFF114DE809047AE8212F17AE01D12AC2D222CC97EA68C0E05E41D652C2AFC
8B63DC605F460F05F85CF44CD05C77E3324FF90AB06040EA11AD5332B417CF2F
170B91A1D48555E87F345D19AAC9F0570AC9C72345C8E2B75CA880EEFD398FFA
1C70ED3610B3D0DA9317A3F278FF5B9D579D390B5A0CD6BB356544510C908E09
48F76183A847F202D77815ED3E8E7869950B2767E0AEC2B41D8D1A84EC04FD87
31BA938A4163D000A0A72962886E7D1782813C55CBDBECE69835137D4D76FD33
5EF8C1899BB3199B31F30DDC42416A75061A2EA63087EA40F53F9B36D7DA980C
81000E8E512EF9D135FFDFB1493959FCE2A9A26CB9826C79124D008ACD573F96
BF8852D5A333E30FBAE70CCFB3261EBC3A0CC57509279260A2C3B160F0C93C29
A5F3D7F05C158F2D5265244B7101DBB64BD5484A760D9D80C7E28B8136EF6171
348567950DEFF2A53F013DB39FAADA620063271FD38BDEBE93A014A93C98A866
C8CD020591DA7BA2905B0AC0B531A0149B69BDD7DB19607B7F19006CC52D9E45
1D42625607170DF7BB2B96030028D8C5CA07D1663A71E3637A1008393792FCC2
34282CC28B6B97EB8F4A991BC5F598FE02F048AD0AFE6AE59B026CA6F7F84F05
20400EF78BA6C5592399A750E28DA73352A1FBBEC9801F13A07770E08A0BAEC9
D3F17AE9CC501E78CBCD6F051F08F7323399358F7F16ABD3337C46A431F92928
794EA53BF6AEE178F911734AF3486D76782A5F80648B426BBF325849D1C77454
884F139D1EAB7754807F42560B41346A8F9D0E3BF7AE622368ABB67E5F8CC071
B519A677FAF653FD747222FDE01C6DCCF9CF4D08751285F890FF78C7D0B93F09
67A9A94391AB4330B37D4E7E2102D867A3C279A84F2821B1F50E79B62C4F6DE1
2998A6A5B49B42DEAD15A5CC039216762900C1A624AACA506DCBF9AC0D226D76
E55F11BBB5B54FF7A64755981F6387E865FF8DBE35441FB381E05300A295431A
DB8341097EEC40F28EA5744BE34857AFAA7CE31278DD472D9F6EF7A841D89700
FA1AAF40B03C08897AF9EDCA74EAA39D08BC61C5D58A8D0716B66752C9429612
753E3B373D0E29E29D74455E60777F079B759453A60D406E409CF5F12CB20EC2
E3EECC4C39DB7E367BC2EFDD812615C7EDA14D0629A1A42DEAB1D8D2F1241BD1
3F4A15CC138923BF6311BEE16177E918C64BEFDA9C4A453DFB9DB961B8249C09
F4802F670AF5EF8A5E486D6DEA88558FF303F4BDA6BCEB6C702067144F49172D
12B6548A0EF5EA7C71974B454BC118E66006F7B0A68CCD481D7DDA50F03561CA
2C42A1ADD0EB0CD7D129121C8E8BE7CDCAF9ED298D780BDABD4FA2AD37FD4955
6A5BDEB072FA02778A438546C89222570553EF7B2DB33030B32C85356FB3B94F
5D52CD300AE66A6A6A8862CB15324EE61A19A40B1C9951D8A457A401DA741F9B
F40BDA72275ABA8273E1CF8CBA06479A43CC8138CCA05BED986AF15E1A9D5D2C
9246CCF7B884F315A4275C8DDB7EC0B4A3FA3DD3720739A572A10F0069F9BFA4
6CBDDD23AFAB7132EB99687681D652848431A15A8CFE27680433BABE5AB123A1
FA95C50BEB32934270702D4C466FEBFD1A492C418E90A879E70C1FE775325A6F
55706B3A10E2F8C3EA53645E2E7FB17FA52F6950C20217F02106645116C02BA0
7760B6EB83C36829DECE216E9C9CA88680D7B5695918C2B3C35679A49FB39892
D4E91ECDB76A81259C4C1043A3869292E5FDC173B68826B15E9D51DE4B0D29AA
AF0817C72707E20B57E4BDF333D06F1A75EC9913D2BBB6905704CF35D7BF8C3C
B2AFBE30937622A90EE8A7E00080300F0A05D265549982D566148BBA780E0253
2671082D805DB8A97697501B6A40A3AE9BD72F0FA657F157C5239A213A2BF53D
C4A68B4EF2356C9CBCD04E2831ABD0593ECE983CB5E976DBDB2D13A7FD525E0D
116F38220E50161799BE7C2359DCC11C39FEB3030C8F1106F98799495DBB3A05
C04BD649053FD293825767E6436434BA54C12EC437D28D0AC33B7BDCBB8DE711
9B2E83A0D7A93F3AA16385F40896D4A047C14C559BE065D8EAC5711476373596
FD03E57B1CA8E39FA995C6A085013C8ABDCA62FA6E2F80DE35A2338CD8D5C4A2
38143C28D33F7DB0985F0A3C2E9D379189360FED33DD98101CBAAA2524F7D33D
E2C3F202B96AB0C59A00DF442A73F40DA3AF073C9DED0369646F6B36693E9A3C
0BE496898F75E974742B76CE9724465C49DC221DF6D624C688CB8C4D9C66FE58
91B484C4F3ECCE8A8CDF069387E4FDEACCFC0095524A10214171DAA0634B7EC0
296D7EAEE516010EFC5B997B15965E5B5B8779665647DE7ADEE2203C6B2DFBD4
F2197C12D305CE48B43C98050AA91046FB501E57F616FC9A044E053FB6CCC909
0011C6678EF212A348FCE24564D1137D71A01C315A382571ED9010D25F2E6D16
0A4B66F25512A3ECF773864DF886BE2C21FF7BB347D45455A0628C7EEAA37952
55228E5873C19FCFAB9ABF69C098D4224DA6B50A77D39779DCE9B3C895A32473
5D50DAD944AA3946B0A4B2BFFE6FE4846184189A379F9D142DA3AACB7A8D2E1F
8E0EACE73A27563097AAB3156885A07BAF32AE2614BC0C8887C67F61E5FE2DCE
6483532FE5791ED473FC32BC61175BE7D8B6A3E3D673A7936EF0908A0C47C118
ABB101CDD3C429BD4CC3F96584C065FAFEA3EEC98A142E1B60BA9D54EA09C0E2
FCE8507F619CDA4BACFA4A95855D4FFC51223EDBF645427399C7CF99FCAC032A
E647AF6180623B6CB8ABA8D9B716C021A65FF920CCEF8C97E5D4847B11295CAC
70B1A8AB7740C69EAA22699C5C55B4DEA83BF0FD3D61B04AFC64C0C293D82B98
C0BCE28C692AB80CCD2235A3F63F2F0B6BB680DBAD3F8B7423FB4FEF17A5DBD6
867F59FE9265FEE14AD84CE5BAEC260ED93686EB5168263E98510F65B40719AF
05940AD6D920B48DC265C7923D76BF6A92474A4610C8B86FE4A819455105F6E2
E60A52BD821CEFB257B415008D9FB847DBCA6643318A83713710BEE7BCD3659D
F75EAD1F1DBF566707E910CA07D67A9709335EE2137524B0E83DDCE1703CFB5B
088986EBB856C462B1F7B915331AB135FE2F48A4FD22C67D7C3AF71758B848F7
712C064081A7EC21FD1F6781D44DC2D138829B49DB017FE6C5895D6B38283878
928E69D0B4B7D9F1D28145008E5FDF9C86DE6697E60438DA76A0A508D8A179E9
7CAB38570490E07CC72DC667B7655B5AF313C622F84633F397B33FEE92536D6E
ACA55F282E55AA1B2A1E8F9B82D272006E02349DBBBA98E38FD3207B706DC643
8CD174316236BA1F396DC87E9CBA6FF13D81C43BB0F28A5754744E2B8D5B1407
4CF32B45EF98F5BC74A1FC1A0A6860B8F819AD0834C9B7DD00A05C1F7CF09A04
6115D45493F7A67587727B64D2D562A294A1A32660FA0D8A24F2D5873AC94FF8
E0670B96D9D551AA5979D22020F251DB7C95C09E89EA1F66EADC31A51ADFED67
7569C646EA23E316AEE1EC29BA8D4A7B93206CE23C189818822E6CD053D8118A
AA25FC998752DF87A6F1929CA192818AA9BDE03FABE59313873CB1AD4B7B8B5F
4B74E77A542ECC85D27B1E7B2892E94414ABBDE6EA8D490FE15EBC6A6956477E
8B7DAAF1AE28A6B256CC9F48E2CC80A917B83F955C00BE042DC2D87E2C0ED5AE
6A57D369532EE83FAE343882DAD100712A841E51F60FCD033645CADF45ADD970
8861E9BCF113F9EAE10024BB068E1BFFF5E74CF348FCD407AB5A493168C0C6E1
5B2AE50E8B454FAAC0FF5BF01429A4CD2E151CFAAE5FF3E298373DA0C6F6DC98
F55F814B292E99A4B6AD93AA4E6FD216C7B7A8109CED49F487003900359010AD
52472E97602424CC86C82456F9385DF5F7CCD561DC7ABC388F4539424239C618
F1DCB943CF31BEFA92A9DF8D76C4F49C5CF8BF118B9ADE304948393BDCD349EA
093EDF3861D8055DD7605F9D205C8F9F6442CB14BD2C5658C938BC685FADEC8C
6514A72F902CAB5A7C83CE622967C86ED8157CE246CC8D5C9E7BC5A3DF9F5F71
75382997B8DDC1BC31FF9BB31C292002F438695AD1DE3E935E231AB657C704B4
FAADE3CCBBD9ECBA11A128380FC7668DE35AD8FF7901A071501004D718C36232
477D1F39A73F7CCD64404AC251E82C6F8DAD9FA111C6FA52E9323191F7B83CB2
46CD2E4BD5401727515FB75924199D0B7A5547947DC1BB9D24782DA5E78D9846
FA1D97110E3AD5BA3103CBF311C1BE34D08A8AA78EA61311DE9106E91B8D869C
9EBCDFF01DC1A3FE088567DD7EB69563510C525D05E195960D0EAEFB77105003
9E67EED83F7858FA73ABB05BD003F42980FFC7D49BEEA72AD7326EC4D7384A9D
9A09994282B995485CE83DD41A7AAF0A9F966EB9261170ED04F7433A928756FC
9BE5324CB50B1CC6781A016A285C8D08E7F4229B736986E87EB4A93E9118B332
2A5C34894BEB40BEE8B5C55D9F5EBB02C6370D566B96C5079D12C9D4F0FEE873
1D3788121C5DF32B47D4836ECC48CCAE1FB7DBBB6ED76DBCB40D39A3D3437891
4075B7A31ED94233A9690AA696EE8686AB4B03E6A8E7449093FDB99991507C71
753EE604A02EEB8B91BDCF0E009CC38FCBE921D7D2D3D877B044794010D83457
D17C81740DAFE000798A2787814333C50AAEC66DB086FC994070DFCB8299304A
5AB02D643D8B74EA8A253D3D0D52370090D1698DCA05D3505E7953B691D46E5A
0F6F21CC05DA1CE1392F29895BE53E4212079FB7910940D4C0196027C17B8EE7
1D654F0E33C5E5A805438186AF3851887FDA4D03F83EDC6F2618FCC7298239D3
F293D7B9804A7F49654F2B9CC5E6F2006EB0C32DF29131E5475B0936BE0D4601
29D423FAB61B1D49C8AE59C693CB7C9261842A53247A6E43E75057A276867463
97DFE7AED95291EF9E305A1F4463791766573F323E05A26550C0FD9765966E9B
6F104FDDFF2A4E383A4BE678B3CB1BBB97B62B3439D1F3C9DB5A61A40227FECA
D7EE3663C781E65B138CB497733860420838C9179ACA6A3EC249FB00D18FF44D
2B065FF6B036FCDC451C50C76BBEAB3E02336A4618FF7036976A76B37F6DC5B9
3BDA314C4167C25603722DF8F19F1A9A6AA5DED522DA2A5EDF409A3EEB573561
7E77A7A77D8D016241BCC24238BB910C11D261C932E3DC221EFC33FBAEA335C7
F48A83807439B5FD8EBA768215E9692675FF0FDA30FF864B5A09120AC21412CC
002B3E834463E08BE72D3969883136EBD82E8E29760D93F6E87EA2B20EB45F47
522BD93ADC978491E3A718D0D606FD8A7383F068BA765099A86BD7EE72EFC8D2
2A8E991888FC44FF9ED2954B7A9DF5CF6A3B2EE1077721C7DE55DC385B2EDDCD
2699CD35368FD72F154C65619EF4B12B877250A8A69E83772646DF8D04AF5714
045EAFA1BA3B9F0CE87FF63A46BC80D7D9A120F7EAD57FA29A966CBFF1A9034F
40380DD7DF932F962F76D5C95ED44B939B27616A053A193A1B0AA582C2CCDA4A
B39A27AE30A0B1536D76C9184F8DA9C313FFDC1281379FC2AD3324AE6C9704D3
078A7EDB51CFA5159A270497C44D0C5D34FC406C877AEA43141AF61462AA203E
215E10BD1697B62E199B50193DDCA689F084336AEB0DCF37DFE3C79EDBE00878
008538C79938E46E1247D01DC0E4E045C797568D10935F9CE00DA71C11CBA157
B926EFDB7B7527D21780CA9B8CBFBAB0ECEAC671C36CE025792581FA60E2AA38
CCC27A3C645A19F23A318395DA8E169A035E7523EB27610737CB42966EA61884
A31D73A058EAFA86D92F51D7EBEF27230ED4EBEBAB65F81D9A1A68EABF9D06FC
7957BB3BB69B1BAEAC9B56086B9BCC7DBA7DE474D404A080E658BC0BD81D2770
945D3D6BBCC28F896FCB285FA5D7E21AF5F8CA1DD90BB7149E3A5B5FD6809FA2
2A0DC3112E7888A499450162B7373CCA776F065826D34C38C598D8626BFED7CB
672F132E065C46EDB172BE416FEA0D359CBE04C83230BF3F1AC0969AA5B21DF9
0BED14A3164DA8B2883B0B2CA52A8B48F33AF28DC0AD02381732BEB2B9587D6B
50E6F7B4E9DAD17C5BB9A10A436108F0D6B87BFF46E7E197D8541D72B9E65083
F86BE1CF273DAE91E99437ED9DC756D71C7D20D4E5B251508CE2EC38D7D14E3F
8171CA16CDBF876C5AD7DB2ABB2BCC08B2010B4F6837598F4ED5A3D53490BFAF
28A556C6C22E25DBB80C3B25D069B2D7B0AE6C673245C688EFD142EA2E40874F
4AE55118EA3F62891AD4DEE7C73D21C0087486C7E70C865DC98E53B30FB3B1FD
F228587D876766E4DD935E84F20223C86A0AC1CA0AA110A224903525C99FD036
A7C3AC181342894A012F7A6EF08238AD01C6655297E6F1EC016DDF11F79234A8
80A99AB7E17843842B2B788BF3C139DC3289A2A81EA6B5679D450CEF9B23502C
9A8211B42FAAC844E0372759E2EA617C309512468C69E29EFE240A93BA44A73A
5C23948AE73A1F29EEEDE43EA482069F2F35CD23DAC55E103B4556DD1C3020BC
8A977F82C5126308521254642C43FF4089667BFB40D7FE187115B43DC7388312
A79773543DABD9D5F71D3D76CEE600EB3F5B5DEED685422D00399F1BDBDC7764
7265EC79D92B507EDDEDED0EDCE621F3FF24EFAADA5632EB665A825001DAEDAE
4021FB27FD1CF175C724BDC23F9F74F394F1E304E736B2CE6CF0C3DA052F5A08
1910783A30C807B959F9270F7A615F27A93D8C76370C87943275C36814C460BB
788A0965B0B2A9818EFA495DD7323AD188214EC435BDEF282208B957C39F0E77
7BE87C953965460BC44694D27E18F3B04937D26635220FB98495B2E4CD4729AA
F9B80ECC6A374F606EFA4CBB077034D588198BBB5D13982D6EB24862AB5FF382
082B46F42D4E1672B2076DD7714172F788DDFD273A02C5DFAF14A6E9660AA825
3D564A36E96025B46BA382F56BDA3B469D678F0138CD5465966A75A4558B406A
743FA920405ED194136141C32A41E40DB8B879AA7F785E73A758B50092D48D8C
F0EA5B8B8B61B4E00C448F26362D2A39A888B8FC65FD9DEFC68C0C2B37B06923
F120D387697F52A3424F1B7995A97253C8F822C11204E3406344CC931104741A
6C9845338F0D171803EC04C9534EA6AEBF81067990DEA8E620009AF715685BF8
1CB8BB3376D82698307D4FB15959B8126D915FF6F0C3EF0B66A09C6B0FF699FF
EE5B7FB9F34A31386F07D66ABC40B5D164F1BBE52FE335CA9BC02E9932C4295E
25982DE1DC5A7E4FFE4FD910C8D37E7BDCC2C074C2F322737FBDE1BE1FF42184
927B2668B569007A840FE3FA92A0F6A00C43DB6EA98CCE5B7D23ACB3D33E5DC8
9285D1A79BA985B300F84FD5C3C6C486658937E811DEC0282EE3D0E3C1A31D71
D3D5F626175A38CF69B612336DF07330779615B055A68DEE38FE96A5EE6334C1
2E55B24E5CA3AD0E78C5B2E2E198AC1D7181D637A568C615AC3791D8E5094228
7CF353289C06D33486429269E12A4FD6E5B4F65BC8E13B09C8550E9C21BC719C
0DCE89FBB23B25B8BD6276ADA995043FA18E62BA4676860D0F2CBA941C24205C
9F1792BE4D3702F8B5064F862222925B5E8CF49D89729F92CEA0B515FBCE46D1
3BF1304F0A6E92E061BA5D234082C64992910D293A059BDC593A9D4022CD9BAE
FB623FA556B769DC218126956CA9B66DC23FBDDBB5FC55006846633F1DC5A10D
D5F4FBD3184047F8F52B0787EB4B70BBAAB39D62F34059CD19DEE5041502AD1D
4E21E95678CE324C7FFB36B2867E0B88169A56393222CAA9B96151BF368A6632
37E82970FC0EC032AED2A2FD2D948114EEADF92EAD93F38819388A2F582208E0
2A2DC5BA46C067432CF7F3A7A5FBADAB4FCA85D1E0E9149E638845279D7D1A7A
8908AFB27EADBB293B26C5C35F7B728145D99A8E87C1D52B3DE5380630A194F8
DD60AD0138F1A3425B0981117B7BA91A0CB3EB6AF0AFBC58BBADEA8654250969
27C957440EBEBB371D8C04A76E7B57B775F889B9CE9856EBDA0AAE2511A0731F
4CFBEA451BD48C15D194B7A3207E528604FAE8139078F1738FDB78BE9E806E91
5068CF2BC369DA41DAB8861155A0B48DB7048568AD27673762B77CEFD1F5022B
E5B15E1D75D8A3950397E5EF6995AE340B48F645B799A92B58734D8F1EBBF10A
7E363AFD1F24ED503815316CCEC391025FFF8E6838E92AEEF0B85F4F6CB8B656
BB0015D7D80E0A79468ECE32F5EFCE7F417F6ACD76361FFA0EBFCDCE08ADDF14
9731756044BC966F0FCABB0A87D3C5CB53AAB376645961C355BCD58F95E65725
6BF0A7BCABAC49BC4ED2413E58486776B0093A41DBD260753B64030759472D93
8C84A71C114A5627B1ACDAE4BF534FC07180E277C771BBC84A300794A6ED2F33
6EADCFE52D2A9D0C4C94CB706120B5F5641CDE1F91A226019EAF34A2B13634F5
5E964F8B7C21D937310159CE7D4588DB4957DD1E286D45676C9FCC9C894CFD8F
ADE9A6191A51723300EA98739492C91EE775E06E20F3482F64C794C6F19B2493
E5C38C5B17861E28EC28D50B6C3B38B1FE6F1A7578AACCE5E275E11BBA1D0821
C1D032EE351621C368BA40F4B9E6455261765317BD77C085DE0934126927A9E5
9B7B92FF780C412A606D33C0739FC40FC1EB30A98240A5DBBAD1FABB461A009D
F7C2666F3973ED120FBC0D19B0B8A9EB179D36E67B902309CAE9B2BA2912BE0F
0FAB91E7C13E732A0D8600186A7C0EF9FB00DBF81D603AA8E1C41CE5D48D0DE1
81A612268EF758A5C610923F255A23E86A87086C49CFA284AB0522460CDF6706
C5B8623C5878851829764ECD7CEEE9FFA5CD26EE2A3F794380A1EDBFC92017D2
8038AF034D8886EC66710D89F533C1C758731AA34857F056DAAAFDAD87EA4171
EF04AEC9DC4BCC641B346FE048D51EBC0040128116738AADAA2860077A16C6D3
0991FFA1007ABBD9E82CCD3229B5836092A7444313C171B4CE46D867048E5DA2
6AC7D0ABD2820C2F4E7B76F2F0D59497DBAAA15C2BFDC446E8217DC2E3535071
8D28AA6D2CEA770638810834D55746262B47195560253D16818C5EFCF122BE9A
E47BAF81C8F356470C31B4F54AA5E59A569BD948A6A2075F675536A3F0AAD19C
2EBD390AF25F8A740310312A3CFC4AA9737766394E6DCD202B31E51622E8566A
CB030A0FAE31E830C857AAC89EC0A90CF14792AA8446657FE87EFB947F6EF31D
CC61CDDFC39A277184DFE2315DC641D6051E47EBE712EFC665D97DC2E35A77F8
93D281AF0BC516AE5D6CC4E176544A47869A64E63E58C91A97E520CEF18D77C9
3470857058A2D4E08CA6D470166B6F27C39FEB34D964638590E25AA60E8F85B8
3E6FA3049517C3A95D471EAE9D83E664D7CEF78D51D4200D4E752BADF79F03E0
33D5873D5292B58642A9D79D69A337C81D41A0BDB45D751F6641FDAD6065A366
14A687874A0C56599A8EED5E1C0CBDEF2D29FD5BD299DFB1A11DB7E1CA3B29D0
275E10F95567168AA785FE3341FE42FDE0A88153CFCBB70E29B7073AB33F7BE2
B6BD070EDD4DECD00A0FA54A7F5E9B7AB69DC77FE9A283B3A8C6A4100DF9CA03
F6B4CA4588D5430DD9943FA6EE299A4FDB8257C65000714978E352F4D301B968
8E76ED5AA7BAEC9176B9DC36CBEA7C2ED59423853D6650D0E4B4C9307DC4C092
39790F6B0B3DD6FACF052D2E1C0EB34672AA795321257479B89D127E5DB62C86
F6751F56A4D23CA9CDDD896EBC1CC20E83CA0576B9DA29CFC7332750E88AECFF
73B93E2DB8FEC394C43C85B901287375C1E53DB61E70D397D8181B63685B8E94
077222B339700D6457B335C2D5487DDBDC27DCAA73799D9308C7344ECCE1374C
63ADE304189A993413F74081530FBDA87E66F9E05B620615883B0E589EE3A0E0
FAFC9DC93DE177F14DAC5E4FF45B40C1DE5509B5BCC2BFD9D20A4CF88FA4D965
E3F451B091585C8E0177B7BCF056049D1134A6DA964E4BABAAA4C2AB69381C9B
2ED4272389354F9F6F408CAE1E41803749A8A0F7D3AEA386C7B9F084C0D81A91
2ED19C84EAAAE99801DDC5B98FB6B5198903BEE40A9F1FEE2CE3375D67D77D11
B92C018DFC2755E2E7F9C81FE8C4F9F1F2AE3B9560C9DF5FE69572F5C40F7C77
68A67B861D5FC2887F1635AACF2784E9BF8B1B05BCD9E873051C730ECB6E0F01
085AA2E378991312D530ACD19E72E021322879D341AD85B3A6DFD16A62B04999
AF01F220EB20E6D7C8D33829FE1DAAC495CAC844A9DB3653E34BEFBCD4E4F952
A11211B12176D834E8F8609B3609736F4C3E149C1208CE99EBB4BDB19A68DC6F
C5E3254BAD874D4FB7581C7082EA167108BEF6F7E34D932505EC67483124923A
2145E64953D1431E63A25EAD350CD8AC4225406AD7709307918E322F471CD166
27247524C25D82EBEC804D15C0FEF51E81E63603AB1E9281C2D52F1FB75FED51
8F62D40390A7C2E5682DA716B05A63D2D0C379F90BDE98CB15B4BA24624E1460
98A7CC2A669B37B2464C87E51DC00983F964BE9851244F76C01581C24A5AD87B
C27392D7A101E273541B8FFD8A9F88AF428F790BD2721C066F31553E26153DE9
FED3B3F6B887D60ACD96F1FDDC2F0CA8FCF6EE1422A206BCBA5E76C691FAF2D0
064EBFC23908C4EE8655E12DCA4E6B66BCB89D1304D6C00DF5F2109C43785B93
336E939EB40A8E211E19772D4973C92CC976AF06D7CBB5667BC5737A6818130B
DCB28FA508F31573372865BD27C9960F0FFE55C2D8122247BC752EB0EFF7BE8B
688A3622826EC83CC42DCDDE05649D44399EDD9E9B893820416437F76C29622F
9726A80868C39500AAA7F469E6533983CDB9C1772CA11B4554FD287BBD3CBD18
8F380E53311BEE3EB789A64FA0724DA2C809CAA830479D9CC088E1E84FA3B14E
0B3ABFC7AC347C4D891ECB9EA86E362683301207BC5711AF71E17890AFB51717
8C9DFE59CE8B036E3B067B364E0F7380308F2494FA6577D5C87A08B60FAC1D94
B851392E349606C096304D8B89079E58545654FB813BDB3B9713965E2392693D
46FA97FA786AF63CDD9131A69471466029687E54807EC4D641E21EFE2B0B8A55
0B4264FBEB14FF75816A955703B904ADAD9DBC56B76E85B7B6A5705502F55E4C
CF73C65E4071AAE50D5ACDCB2163996299FA25E75395AAA2CC8DCCFEF0BFB148
E17AC26F748ECCBD48000277EC979A63E6F39D416B32570E543C37DF2901B611
D9294AA0A3EFC6BB5C98826F55898CADE887047A1128E0AB55B30B6C3014ED96
902B67BCDC6AFEA2CDA4C53332359B80AD7647D8218353614511C94D025DFD94
25EEF795DD0F464C85D6A1E672DD1096784ED2206D80192C2787656CDCEB4D3F
2089D2681FCADC8E048D462410F11EB72D7DE3EA90399F7C1CED5127E1055826
F236D00EAF468DEC9ED04BD079834D21FE82D7D2B0652C35B5C82BB0EA061E35
21CF9765A4532C526D7B0D4E3F7174153A5D789E88984E0A07EE0943FA52F32B
47D4836ECC48CCAE1FB7DBBB6ED76DBCB40F95C8E027BC9F127F79622FEB3A67
81181EAD3F0210142C7DF0F349157850C07ABAB38446C399ABA963AC971C2ECE
B302BAE8E8134F7F93A3B0892E1DF87ACC44C183FA9203F376411C564D7EE358
86FBE4D6F739C66AF48F5CE8183A1B00377476E6A9D87F9685ED49D86A5FBD0B
AE42975993E68DA3E1ECEF8F3FB57A5CC84D1EFACA3AE57541A9C9A4CE8482AD
4BE58057CB7DDF52D8289D5F8E2EA52E4183F35ABDF05D23A0031FF418499B3A
E7D01E3297DF93CBA6EEDDC1BEBC9536C17D7F7254F831A2C0D6D1559DE16723
BFEE1B4FBA65ABFF7C516F5DE400DA6BA8684A5D1DEE81415796E13DCF906FCD
ADB4EE8D164E51081B57847EB7A96CF69DC3B99D7E681A9CE20A88FC0F98EBA8
5E3873810F3123A000E06E0195EECEF1D899B4D1C345C18970019E0686B41219
E201FDFEBEA6F0EAA156E3EF0EEA375E66905D49892B70588D7089D13E21F26D
BAE2550DD4ACA051EA0A003010767638CCFA520F60BC12355C3872CD092F77FE
06EDC4E167898052415423D618A614D4829E16219EDFCDC202544F6987D129AC
7265E93F600D76FE5FB7667A6C08D7004D09BA6CCD236543FD33F885D1054A54
F70EDB1BC66DBC4F45F35848CD2BC751170B446F9FC06F4B6EA145D5DF32F3F6
0842186A6C1F554FD4170AA76E3F7E07A2E00518496EF834D4C635A26437DCF2
F41BAE6CAE8EA99AB61F0CE531826A96B840649848D40574931AA278F716A935
8D2BFE5B83E1D2DD33E5F85C523665E89BE08571244AF54108CDCEEDD003C61E
F73480A4CBA019D4C4866C81D848EE94D1CEDF1E2D29BB43864AB5B770A14C98
A432AABDB6320CB7B552FFB89F11EA22D02AE6333848C96279C7E6912DCFF9FF
07EBE821AAFF09597BDEA4E71E766FC1480803414679A145541628F6DEA54317
1844C4B662F2D3B6C69E17A074031B8EC4BFCCC16DC273D4A01D4C79F1B1568C
E34A4F7FC812BF766372E6F0277D86070827B460613A74F5D36BD72480F45DCA
F2FEB961F89407375510C431701055B624E5F7395082640212DE3A620060C06B
060DF0589093336984A0495B5AA8A1517064842913363C4B65F87CF18201D188
B0A9DDECF2A3CAA384605B57BED96737F4A41FA5AA86DFB00CE05FD7243C653E
976021383B78C55A565982AA51D88E1AB664B22F44305B33B673DE9DAA749570
72679564B794936F23D3C8E3370E69D7321D49C77659A4E2838E4392D18D4744
DEDBC054B6BBFAD05EC6815659F8DC9DB424EA4016706FF4F78A80C6EA83D4D6
35DD9BA87EA6CF9F156AA4610A9829A0F3E1301D04E91DD624D23DEF5E77BE12
B94AE917A8A950104309142026FC381D8D871D7795186BBEEAE9ED53FD5C1D31
F8409E90BBB4163F5A43A0867B31EF023FDC15A6F3BC13248D5843436CC4D10B
1707A8052273A21F149E7760B0CDF9CD8057802CFEA4AC5B6005EA4F696F69D1
30E3278DB6F5B7CFF11543B818478E592214A9C25195A288B7722018742DF7CA
2D119C445C9A68407288E20B5E2926E5D2D0A82D6081FAC0A3C4B41D526D99AA
57550AB05019B885646DAD954E1B9464426A675BA2F1FBE5680A401341D1E615
926A5912241E13FC08A26D3348B9C06500847B716B1817E84B6FE8B0B788EDAC
29470C1910ABBD84B9A12678D343D502A1C0DAA6D1C272383535386158001B1A
DC41D7509EAD00F9A3F8B14875A18870703214B9C2F4C1C184C93F74E3D37536
548211822E029493A5A565340DB184D4E12E175BAEFC408EC625E310DABE5D33
BA544AD228EEF4C99C5F9C40C62E1E5130C4006B2F091CFB2CB3BC13FDF966A9
9CA280C1D40B9C42446A6F20C9441019FF9E4E165D28DA7E2AFEAD0191C6F248
8675BBB4628550AD4700593AFA0A742BFAAEBD918FC069D2ACD1FC0EC357F8AA
28B85E8E4C9E85A45B4BE4AAB05AD94DD8B055B7FBC783F698D9B2D4EF86E896
577AD6EF7B89C6299464C15E70D0EAEC7F2A0949ED23AD690D864E97276CD4FE
6F347256CA9C18EF24CD7F126A2957BA2372FA5F636E090500DE4B5176757412
A406C7506F7FD5405255E99F6613789507EADD8D14A136756FE4ADE8B2C1B9C6
9FF32C9A96818156A29BDB32AA8FEEA8CB99CC3F8A25B3232E790FB6EDFAD183
BA620CCD64995BD798F64CD32364DEADC3F2CAFB9EA50D4FB4B18E01C44D7121
A56BBB859A62302A8B4AD3F6880A40C011C2C5E114DF03226B8D3A17D0F6C582
EE27E72DA39C71E18E45E4EE2D0DE45A408BBBC627389BD7B3531987F966CE5C
4DD09D62FCF496AF0126C34FD5FD579B40FF0CE75F249FA189ADF8D4BA0A71C1
1D1C9204FF416949843518973C2044B3F056156EC5881DABE7DAE8F5F89E6F58
371A9C1A04BC0AB3F721B9547D72A03B2F3558E5F9632D47FA2137B6879A99BC
AF708E320C3857FC94695FF80D6CEA44DAFD44CDF1787A1EAE497522BA7E4F25
9B56A323E3CF5EAF66A052CE77C20AB30BB1D7D413B2EE669E977B6D75A79EEB
EBB20D7C10A20D83A89B61468BCB622C87B283522D21031778CD56BC4DC76A70
70F1256E6D8B100B81F6D1DF23AE8A289E7595126F1047CF2D22AE4159CCFE77
3D9AD45DDCE5202E2AB94A34440263B0032402101D645726A65E483440537C68
214384FE4F819A4140257C07EFAE7FCE2D99EF85DC1D4C01769809BA9973DA94
03F652E060371031BD3738C103C1A5408DFB54C995B3E76F29B4E985CBB04908
81A9CC708A7978685AE8A10E38AC0A2218AE863CC9FBE2CCE383E471F62FE42B
1025D9C6569CE46A66A6C6CF6B72F7CD5D45268A50EC42284856EA48F915B847
AB28487F260F8F99E3FAECFA926453EFAC21833A06E5F9EF12C253401C867093
BE68D9D28DEDF0FFEB7DD80B2A57BFF20EEED12A50F72F1ECBCF042303CBB0FB
C0C446AD7AD4B729CCFDB911C6EBAC180CD6A2EFFFCE5E910FA7E2B6655E1034
CCA473A6A7374AFC5F8634AF9A15597CC3948F340C61CC050F99809A443C0004
2CCFDF822E98FEA4751DD81DB91316E9ACB5A242E523ACFF1EE3598216E85A7A
176F0397A0C490E956C7BE8CBA2B97C85A523B7CFDAC57C03FFB3554FF7FFA95
A18979000334F282FD945CA8D0575B1EE31660B7621949CDE8D7AB4B572F67FF
8FB83AF68734F568D86B2476E2FA2E156688F65EE720E64A8E0A5D5E13536663
6D6775D409E1BE230ADED73055D52DD63DDD8387267140DDA5A905E8C8560021
88B4C304CCD45044FD661B631DCC1697E9C08121158DA89599C17342CBF14C0A
9AAE4FE7061C837D74531EA9472BD0DEAEF9CFDAC9E866F97C602CF908D8EF0D
EC8E328C52B054A5852389BD6309FC64F5C9ED515B6ED16BAAC5B0BB4AC0ECCA
1880AFC084C8BC40DEC0D154921155AF78BD8C800FF3BEB985881115605D54BF
E423BF2CEDA7EAE7B1E55814AC2BCAF5C4DF5BC169AFD69C8184103DD19CB5C6
4A3EE59CC8D58CE1F14F12A8D3B29E02242F0363BD8FA341B9DCA80D1F3E0A54
D62003FE9A1B5255819D477857A53E177D5FA024840E5474338627B4B78E9140
0614C205BD7E93151003B3C24776392FADABC7A7D5D63FED5E39F0A3D14F84D9
F80AEF105033141264CEAB490740C26446EE634DAF1DF9B9024F4A93112CE4D8
1665321AC10E9EFD028686F94860F9B5B8C0430EF36C7B2E35CEB58F786B37D7
CAD6090DFE8807FC302E55023AE28F8C407C8AF07EC45813022BCA614385B215
C88D14FE5290ACBBC83BDB48AEAE80CCBE50D214C6349DE989B27FBA20C66020
48CAB0F3F8F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000 (main.dvi)
@start /Fa 143[830 39[1168 72[{}2 1328.35 /CMBX12 rf
/Fb 254[469 469{}2 996.264 /CMEX9 rf /Fc 176[621 6[595
4[578 67[{}3 664.176 /CMR6 rf /Fd 254[284 1[{}1 996.264
/CMSY9 rf /Fe 194[796 8[512 1[512 6[796 43[{}4 996.264
/CMR9 rf /Ff 145[618 902 31[989 18[284 58[{}4 996.264
/CMMI9 rf /Fg 23[387 122[689 7[387 101[{ encqec ReEncodeFont }3
774.872 /TeXGyreSchola-Regular rf /Fh 137[396 2[304 300
10[377 1[338 49[377 1[377 377 28[377 19[{}9 553.48 /CMR5
rf /Fi 130[498 498 498 498 6[1107 95[815 815 18[{}7 1106.96
/CMEX10 rf /Fj 216[861 23[553 8[861 4[307 861{}5 1106.96
/CMSY10 rf /Fk 22[762 114[812 910 566 664 689 861 886
812 910 1279 468 2[491 1[812 1[762 886 739 1[812 12[959
10[590 5[1033 1033 1008 18[369 442 45[{ encqec ReEncodeFont }25
1328.35 /TeXGyreSchola-Bold rf /Fl 143[523 39[705 72[{}2
885.568 /CMR8 rf /Fm 119[671 136[{ encqts1 ReEncodeFont }1
1106.96 /TeXGyreSchola-Regular rf /Fn 135[633 2[634 6[664
972 8[576 479 12[646 8[1074 1[940 13[553 1[307 307 31[572
26[{}13 1106.96 /CMMI10 rf /Fo 207[255 33[454 13[692{}3
774.872 /CMSY7 rf /Fp 137[465 489 1[351 346 465 489 10[394
489 2[441 17[680 6[653 4[632 1[653 13[441 441 441 441
4[680 23[441 19[{}19 774.872 /CMR7 rf /Fq 22[915 31[1210
80[974 2[1092 679 1[827 1033 1063 974 1092 1535 561 2[590
1092 2[915 1063 2[974 23[708 26[443 46[{ encqec ReEncodeFont }19
1594.02 /TeXGyreSchola-Bold rf /Fr 140[437 2[615 553
1[922 307 2[307 1[553 1[492 615 492 1[553 3[307 1[307
11[861 2[692 3[830 4[799 1[830 3[861 3[553 553 553 553
553 553 553 553 553 553 4[861 1[430 430 40[{}32 1106.96
/CMR10 rf /Fs 156[396 12[523 22[454 3[263 59[{}4 774.872
/CMMI7 rf /Ft 22[491 110[513 4[676 390 491 491 1[635
553 676 1[369 1[349 369 676 594 1[491 676 2[635 14[820
1[738 2[1045 3[451 33[226 39[{ encqec ReEncodeFont }22
1106.96 /TeXGyreSchola-Italic rf /Fu 22[579 111[577 3[663
526 528 590 1[552 643 663 764 537 2[345 1[628 1[579 639
583 594 590 10[799 1[738 697 9[451 1[861 738 2[799 14[615
615 615 615 9[226 39[{ encqecsc ReEncodeFont }30 1106.96
/TeXGyreSchola-Regular rf /Fv 6[676 10[349 3[553 553
553 7[615 31[799 69[532 594 594 1[594 676 431 513 491
615 635 553 676 984 349 1[328 349 676 594 369 553 635
491 615 615 10[799 902 738 697 2[738 861 902 1045 738
1[615 1[922 1[738 799 861 799 799 799 6[308 6[615 615
615 615 1[308 369 308 2[369 369 226 902 9[676 693 5[615
3[431 431 16[{ encqec ReEncodeFont }65 1106.96 /TeXGyreSchola-Regular
rf /Fw 138[1663 1[1385 1[1603 1[1603 5[868 1[1570 1[1454
1597 1460 1487 1446 28[2143 22[917 45[{ encqecsc ReEncodeFont }13
2754.12 /TeXGyreSchola-Italic rf /Fx 139[757 3[795 12[840
49[886 49[{ encqecsc ReEncodeFont }4 1594.02 /TeXGyreSchola-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop gsave 1 1 1 TeXcolorrgb clippath fill grestore
0 0 0 TeXcolorrgb Black 0 TeXcolorgray 0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0
0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0.34119 0.32158 0.47452 TeXcolorrgb
0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 0 0 0
TeXcolorrgb 23033 1107 a Fx(tp)443 b(c)355 b(1)9673 6336
y Fw(Dos)-14 b(a)-55 b(ges)766 b(a)-69 b(cido-basiques)20573
75263 y Fv(Hugo)309 b Fu(Sal)6 b(ou)19598 76591 y Fv(N)-33
b(o\351mie)309 b Fu(C)-6 b(ombey)28408 75938 y Ft(MPI)30700
75537 y Fs(?)p 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb eop
end
%%Page: 1 2
TeXDict begin 1 1 bop gsave 1 1 1 TeXcolorrgb clippath fill grestore
0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 0 -3166 a Fu(tp)308
b(c)246 b(1)16262 b Fv(Dosag)-6 b(es)310 b(acido-basiq)-11
b(ues)18478 b(1)p 0 -2723 50142 45 v 0 0 0 TeXcolorrgb
1107 1107 a(L)-50 b(')-6 b(objectif)758 b(de)g(ce)g Fu(tp)763
b Fv(es)-11 b(t)756 b(de)i(r\351aliser)g(des)f(ti-)0
2435 y(tr)-6 b(ag)g(es)556 b(acido-basiq)-11 b(ue,)557
b(par)e(colorim\351)-22 b(trie)557 b(e)-22 b(t)554 b(suivi)0
3764 y Fr(pH)p Fv(-m\351)-22 b(triq)-11 b(ue.)407 b(Ces)e(dosag)-6
b(es)407 b(per)22 b(me)-22 b(tt)6 b(ent)407 b(de)f(d\351)-22
b(t)6 b(er)-39 b(-)0 5092 y(miner)329 b(la)e(concentr)-6
b(ation)332 b(d'acide)d(ac\351)-22 b(tiq)-11 b(ue)329
b(dans)g(un)0 6420 y(vinaig)28 b(re,)309 b(e)-22 b(t)308
b(d\351)-22 b(t)6 b(er)22 b(miner)310 b(s)6 b('il)306
b(a)i(\351)-22 b(t)6 b(\351)308 b(frelat)6 b(\351.)0
11225 y Fq(I.)1594 b(\311tude)457 b(t)-8 b(h\351or)24
b(iq)-16 b(ue)1107 14847 y Fv(Lors)355 b(de)h(l'a)-33
b(jout)354 b(de)h(soude)h(dans)f(un)g(vinaig)28 b(re)356
b(fre-)0 16175 y(lat)6 b(\351)246 b(a)-39 b(v)-28 b(ec)249
b(de)e(l'acide)h(c)-17 b(hlor)-28 b(h)-50 b(ydriq)-11
b(ue,)251 b(deux)d(r\351actions)0 17504 y(peuv)-28 b(ent)310
b(se)e(produire)i(:)1588 19403 y Fr(CH)3217 19569 y Fp(3)3714
19403 y Fr(COOH)247 b(+)f(HO)10110 18946 y Fo(\000)11165
19403 y Fr(=)307 b(CH)13962 19569 y Fp(3)14460 19403
y Fr(COO)16981 18946 y Fo(\000)17974 19403 y Fr(+)246
b(H)19911 19569 y Fp(2)20408 19403 y Fr(O)p Fn(;)1589
b Fv(\(1\))1588 21181 y Fr(H)2418 21347 y Fp(3)2915 21181
y Fr(O)3776 20724 y Fp(+)4757 21181 y Fr(+)246 b(HO)7555
20724 y Fo(\000)8610 21181 y Fr(=)307 b(H)10608 21347
y Fp(2)11105 21181 y Fr(O)246 b(+)g(H)14149 21347 y Fp(2)14646
21181 y Fr(O)p Fn(:)7351 b Fv(\(2\))0 23080 y(Mais,)407
b(la)h(r\351action)i(\(2\))e(se)g(r\351aliser)-6 b(a)410
b(a)-39 b(v)-22 b(ant)409 b(la)f(r\351ac-)0 24409 y(tion)288
b(\(1\))f(:)g(le)h(couple)i(acido-basiq)-11 b(ue)290
b Fr(H)17326 24575 y Fp(3)17823 24409 y Fr(O)18684 24007
y Fp(+)19419 24409 y Fn(=)p Fr(H)20802 24575 y Fp(2)21299
24409 y Fr(O)d Fv(pos-)0 25737 y(s\350de)338 b(un)h Fr(p)p
Fn(K)5838 25903 y Fp(a)6672 25737 y Fv(plus)f(im)-33
b(por)22 b(t)6 b(ant)338 b(q)-11 b(ue)339 b(celui)f(du)g(couple)0
27065 y Fr(CH)1629 27231 y Fp(3)2126 27065 y Fr(COOH)p
Fn(=)p Fr(CH)7659 27231 y Fp(3)8158 27065 y Fr(COO)10679
26664 y Fo(\000)11426 27065 y Fv(,)523 b(comme)i(le)e(montre)i(la)e
(\034-)0 28394 y(gure)309 b(ci-dessous.)p 0 0 0 TeXcolorrgb
11141 43926 a

 11141 43926 a 11141 43926 a


 pgfo

 save

 0 0 0 setrgbcolor

 0.3985 pgfw

 save

 restore

 save

 save

 0.79701 pgfw

 0.0 0.0 moveto

 0.0 112.59023 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 112.98872 ] concat

 save [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -2.55046 3.11095 moveto
-2.0845 1.24435 -1.04614 0.36295 0.0 0.0 curveto -1.04614 -0.36295
-2.0845 -1.24435 -2.55046 -3.11095 curveto pgfstr restore

 restore

 restore

 -2.83484 0.0 moveto

 2.83484 0.0 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -23.21017 -2.65674 ] concat

 pgfs


 11141 43926
a
 0 0 0 setrgbcolor
 11141 43926 a Fr(H)11971 44092 y Fp(2)12468 43926 y
Fr(O)11141 43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 -3.9663 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(HO)12832
43525 y Fo(\000)11141 43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 60.21344 -3.2102 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926
a Fr(0)11141 43926 y


 pgfr

 restore

 restore

 -2.83484 99.21382 moveto

 2.83484 99.21382 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -29.82437 95.9947 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(H)11971
44092 y Fp(3)12468 43926 y Fr(O)13329 43525 y Fp(+)11141
43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 96.55708 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(H)11971 44092
y Fp(2)12468 43926 y Fr(O)11141 43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 60.21344 96.0036 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor

11141 43926 a Fr(14)11141 43926 y


 pgfr

 restore

 restore

 -2.83484 34.01608 moveto

 2.83484 34.01608 lineto

 pgfstr

 save

 save

 [1.0 0.0 0.0 1.0 -52.82178 31.35933 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141
43926 a Fr(CH)12770 44092 y Fp(3)13267 43926 y Fr(COOH)11141
43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 30.79697 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(CH)12770 44092
y Fp(3)13267 43926 y Fr(COO)15788 43525 y Fo(\000)11141
43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 60.21344 31.77446 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(4)p Fn(;)q Fr(8)11141
43926 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -9.23286 116.62117 ] concat

 pgfs


 11141 43926 a
 0 0 0 setrgbcolor
 11141 43926 a Fr(p)p Fn(K)12696
44092 y Fp(a)11141 43926 y


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 TeXcolorrgb 0 46793
a Fu(Figure)616 b(1)g Fv(\025)h Fr(p)p Fn(K)8177 46959
y Fp(a)9289 46793 y Fv(des)f(di\033\351rents)h(couples)g(acido-)0
48122 y(basiq)-11 b(ues)309 b Fr(H)5577 48288 y Fp(3)6073
48122 y Fr(O)6934 47720 y Fp(+)7669 48122 y Fn(=)p Fr(H)9052
48288 y Fp(2)9550 48122 y Fr(O)p Fv(,)e Fr(CH)12655 48288
y Fp(3)13152 48122 y Fr(COOH)i Fv(e)-22 b(t)307 b Fr(H)18911
48288 y Fp(2)19408 48122 y Fr(O)p Fn(=)p Fr(HO)22513
47720 y Fo(\000)23261 48122 y Fv(.)p 0 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 0 52069 a(On)235 b(doser)-6 b(a)236
b(donc)g(en)e(premier)j(l'acide)e(c)-17 b(hlor)-28 b(h)-50
b(ydriq)-11 b(ue.)0 53398 y(Le)643 b(suivi)f Fr(pH)q
Fv(-m\351)-22 b(triq)-11 b(ue)643 b(es)-11 b(t)642 b(donc)i(bien)g
(adap)-22 b(t)6 b(\351)644 b(:)0 54726 y(l'acide)510
b(c)-17 b(hlor)-28 b(h)-50 b(ydriq)-11 b(ue)514 b(r\351agissant)c(a)-39
b(v)-28 b(ec)511 b(l'eau)f(f)-17 b(ait)0 56054 y(diminuer)342
b(le)e Fr(pH)q Fv(.)g(Mais,)g(un)h(titr)-6 b(ag)g(e)342
b(calorim\351)-22 b(triq)-11 b(ue)0 57383 y(es)g(t)319
b(\351g)-6 b(alement)322 b(possible)e(en)h(c)-17 b(hoisissant)319
b(un)i(indica-)0 58711 y(t)6 b(eur)254 b(color\351)i(adap)-22
b(t)6 b(\351,)255 b(a\034n)f(de)h(v)-28 b(oir)255 b(le)f(c)-17
b(hang)-6 b(ement)258 b(du)0 60039 y Fr(pH)300 b Fv(lors)f(de)h(l'a)-33
b(jout)300 b(de)g(soude.)g(Dans)g(ce)-22 b(tt)6 b(e)300
b(situation,)0 61368 y(on)281 b(c)-17 b(herc)g(he)284
b(\340)c(d\351)-22 b(t)6 b(ect)g(er)281 b(le)f(moment)h(o\371)g(les)f
(r\351actions)0 62696 y(\(1\))407 b(e)-22 b(t)407 b(\(2\))g(ne)h(se)f
(produisent)i(plus.)f(A)-17 b(utrement)409 b(dit,)0 64024
y(on)323 b(c)-17 b(herc)g(he)326 b(l'ins)-11 b(t)6 b(ant)320
b(o\371)j(la)f(solution)h(titr\351e)f(de)-22 b(vient)0
65353 y(basiq)-11 b(ue.)327 b(P)-28 b(ar)326 b(e)-22
b(x)-28 b(em)-33 b(ple,)328 b(la)d Ft(ph\351nolpht)-6
b(al\351ine)329 b Fv(a)d(pour)0 66681 y(zone)317 b(de)g(vir)-6
b(ag)g(e)318 b Fr(8)p Fn(;)q Fr(2)p Fv(\025)p Fr(10)p
Fv(,)f(ce)f(q)-11 b(ui)316 b(en)h(f)-17 b(ait)315 b(un)h(bon)h(indi-)0
68010 y(cat)6 b(eur)404 b(pour)f(ce)-22 b(tt)6 b(e)403
b(r\351action.)h(Le)f Ft(jaune)h(d'alizarine)0 69338
y(jaune)255 b Fv(peut)f(\351g)-6 b(alement)256 b(f)-22
b(onctionner)-77 b(,)255 b(mais)f(il)f(f)-17 b(audr)-6
b(a)0 70666 y(c)-17 b(hang)-6 b(er)347 b(da)-39 b(v)-22
b(ant)6 b(ag)-6 b(e)347 b(le)c Fr(pH)h Fv(a)-39 b(v)-22
b(ant)344 b(q)-11 b(u)-6 b('il)344 b(s)6 b('activ)-28
b(e.)344 b(Le)0 71995 y(titr)-6 b(ag)g(e)254 b(du)g(vinaig)28
b(re)254 b(se)f(r\351aliser)-6 b(a)254 b(selon)g(le)e(pro)-22
b(t)6 b(ocole)0 73323 y(suiv)-22 b(ant.)p 0 0 0 TeXcolorrgb
990 76215 a Fm(\210)p 0 0 0 TeXcolorrgb 553 w Fv(On)448
b(dilue)f(d'un)h(f)-17 b(act)6 b(eur)449 b(10)f(la)f(solution)h(de)g
(vi-)2214 77543 y(naig)28 b(re.)295 b(\300)g(l'aide)f(d'une)i(pipe)-22
b(tt)6 b(e)294 b(jaug\351e,)h(on)g(me-)p 0 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 27838 1107 a(sure)442 b Fr(5)353 b(mL)441
b Fv(de)g(vinaig)28 b(re,)442 b(q)-11 b(ue)442 b(l')-6
b(on)442 b(place)g(dans)27838 2435 y(une)207 b(\034ole)g(jaug\351e)g
(de)g Fr(50)r(mL)q Fv(.)f(On)g(a)-33 b(jout)6 b(e,)206
b(jusq)-11 b(u)-6 b('au)27838 3764 y(tr)g(ait)331 b(de)h(jaug)-6
b(e,)333 b(de)f(l'eau)f(dis)-11 b(till\351e)330 b(en)i(secouant)27838
5092 y(r\351guli\350rement.)p 0 0 0 TeXcolorrgb 26614
7610 a Fm(\210)p 0 0 0 TeXcolorrgb 553 w Fv(On)282 b(r\351alise)g(un)g
(titr)-6 b(ag)g(e)283 b(r)-6 b(apide,)283 b(a)-39 b(v)-28
b(ec)284 b(suivi)d(colo-)27838 8938 y(rim\351)-22 b(triq)-11
b(ue.)366 b(On)e(place)i(dans)e(un)h(b\352c)-17 b(her)367
b Fr(10)291 b(mL)27838 10266 y Fv(de)516 b(la)f(solution)f(dilu\351e,)i
(\340)f(laq)-11 b(uelle)516 b(on)f(a)-33 b(jout)6 b(e)27838
11595 y(la)274 b(pht)6 b(\351nolpht)g(al\351ine.)276
b(On)f(rem)-33 b(plit)274 b(une)h(bure)-22 b(tt)6 b(e)27838
12923 y(g)28 b(r)-6 b(adu\351e)286 b(de)d Fr(50)187 b(mL)283
b Fv(de)g(solution)g(de)g(soude.)h(T)-28 b(out)27838
14251 y(en)512 b(agit)6 b(ant)511 b(le)g(cont)6 b(enu)512
b(du)g(b\352c)-17 b(her)-77 b(,)513 b(on)f(v)-28 b(erse)27838
15580 y(prog)28 b(ressiv)-28 b(ement)442 b(la)d(solution)g(de)g(soude)h
(dans)27838 16908 y(le)461 b(b\352c)-17 b(her)-83 b(.)464
b(Lors)d(du)g(c)-17 b(hang)-6 b(ement)465 b(de)c(couleur)-77
b(,)27838 18236 y(on)309 b(no)-22 b(t)6 b(e)308 b(le)g(v)-28
b(olume)309 b(v)-28 b(ers\351.)p 0 0 0 TeXcolorrgb 26614
20754 a Fm(\210)p 0 0 0 TeXcolorrgb 553 w Fv(On)958 b(r\351alise)g(un)h
(titr)-6 b(ag)g(e,)959 b(a)-39 b(v)-28 b(ec)960 b(suivi)d
Fr(pH)p Fv(-)27838 22082 y(m\351)-22 b(triq)-11 b(ue.)467
b(On)e(pr\351l\350v)-28 b(e)468 b Fr(10)372 b(mL)465
b Fv(de)h(la)f(solution)27838 23411 y(dilu\351e,)527
b(q)-11 b(ue)527 b(l')-6 b(on)527 b(place)g(dans)g(un)f(b\352c)-17
b(her)-83 b(.)530 b(On)27838 24739 y(a)-33 b(jout)6 b(e)264
b Fr(90)139 b(mL)264 b Fv(d'eau)g(dis)-11 b(till\351e)262
b(a\034n)i(q)-11 b(ue)264 b(la)g(sonde)27838 26067 y
Fr(pH)p Fv(-m\351)-22 b(triq)-11 b(ue)298 b(soit)f(bien)g(immer)-6
b(g\351e.)300 b(On)d(rerem-)27838 27396 y(plit)594 b(la)h(bure)-22
b(tt)6 b(e)595 b(a)-39 b(v)-28 b(ec)597 b(la)d(solution)h(de)g(soude.)
27838 28724 y(On)301 b(place)h(la)f(sonde)g Fr(pH)p Fv(-m\351)-22
b(triq)-11 b(ue)302 b(\(on)e(\351)-22 b(t)6 b(alonne)27838
30052 y(pr\351alablement)450 b(le)d Fr(pH)p Fv(-m\350)-22
b(tre\).)447 b(On)g(v)-28 b(erse)449 b(pro-)27838 31381
y(g)28 b(ressiv)-28 b(ement)233 b(la)e(solution)g(de)h(soude,)g(e)-22
b(t)231 b(on)g(no)-22 b(t)6 b(e)27838 32709 y(le)367
b Fr(pH)g Fv(de)g(la)g(solution)g(dans)g Ft(Regr)-11
b(essi)p Fv(.)370 b(On)d(aug-)27838 34037 y(ment)318
b(le)g(nombre)i(de)e(mesures)g(pr\350s)h(du)f(v)-28 b(olume)27838
35366 y(trouv)g(\351)310 b(par)f(titr)-6 b(ag)g(e)310
b(r)-6 b(apide.)p 0 0 0 TeXcolorrgb 26614 37883 a Fm(\210)p
0 0 0 TeXcolorrgb 553 w Fv(On)345 b(tr)-6 b(ace)346 b(la)e(courbe)j
(d\351riv)-28 b(\351e,)346 b(e)-22 b(t)344 b(on)h(de)-22
b(t)6 b(er)22 b(mine)27838 39212 y(l'abscisse)284 b(du)g(\020pic\021)g
(de)h(la)e(d\351riv)-28 b(\351e)287 b(:)d(le)g(v)-28
b(olume)285 b(\340)27838 40540 y(l'\351q)-11 b(uiv)-22
b(alence)311 b Fn(V)35337 40706 y Fp(\023)-417 b(eq)36274
40540 y Fv(.)p 0 0 0 TeXcolorrgb 37253 56083 a
tx@Dict begin { 0.0 29.87566 } PutCoor PutBegin  end
 37253
56083 a 37253 57973 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 37253 57973 a 37253 57973 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 37253
57973 a 37253 57973 a
 tx@Dict begin /mtrxc CM def CP CP T STV newpath 0.8 SLW 0 0 0  setrgbcolor
 0.8 SLW 0 0 0  setrgbcolor  0.8 SLW 0 0 0  setrgbcolor   0.45235 SLW
0 0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto } if }
def /ArrowB { } def /ArrowInside { } def  [ 8.5359 21.33975 8.5359
0.0 -8.5359 0.0 -8.5359 21.33975   /currentpoint load stopped pop /r
4.26794 def /Lineto { Arcto } def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   clip newpath mtrxc setmatrix moveto 0 setgray end
 37253 57973 a 37253 57973 a
tx@Dict begin  PutEnd  end
 37253
57973 a 37253 57973 a
 tx@Dict begin /mtrxc CM def CP CP T STV newpath /ArrowA { moveto }
def /ArrowB { } def /ArrowInside { } def  0.8 SLW 0 0 0  setrgbcolor
  0. true -25.60771 -8.5359  4 3 50 mul 100 div 0 cos mul  8.5359 mul
exch 8.5359 mul exch  0 Frame  clip newpath mtrxc setmatrix moveto
0 setgray end
 37253 57973 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0 0 0  setrgbcolor  [  5 3 50 mul 100
div 0 cos mul  8.5359 mul exch 8.5359 mul exch  42.67952 -8.5359 -34.14362
-8.5359  -4 3 50 mul 100 div 0 cos mul  8.5359 mul exch 8.5359 mul
exch   /Lineto /lineto load def 0  setlinejoin false NArray n 2 eq
{ 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt { CheckClosed
} if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1
def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1 moveto
/n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha y12 y11 sub
x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11 sub y12 y11
sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos dArrowPos
add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos mul add
y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known { ArrowInside
} if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.
 1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos
add def x12 x11 sub ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11
add currentdict /ArrowInside known { ArrowInside } if pop pop } repeat
} ifelse pop pop Lineto } def n { 4 copy /y11 ED /x11 ED /y12 ED /x12
ED drawArrows } repeat x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED
/y12 y0 def /x12 x0 def drawArrows /y11 y0 def /x11 x0 def /y12 yy1
def /x12 xx1 def drawArrows pop pop closepath } ifelse   gsave 1 0
0 0  setcmykcolor  1. .setopacityalpha  fill  grestore end


@endspecial 37253 57973 a
currentpoint initclip moveto
 37253 57973 a 37253 57973
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 37253 57973 a 37253 57973 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 37253 57973 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 8.5359 21.33975 8.5359
0.0 -8.5359 0.0 -8.5359 21.33975   /r 4.26794 def /Lineto { Arcto }
def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def
} if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul
neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0 360 9.38954
0.85364 0.0 21.76657  0 true Ellipse  closepath  gsave 0.45235 SLW
0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha }{
.setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.25606 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -3.4143 4.26794 -6.40192
4.26794   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25606 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.25606 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -3.4143 8.5359 -6.40192
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25606 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.25606 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -3.4143 12.80385 -6.40192
12.80385   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25606 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.25606 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -3.4143 17.07181 -6.40192
17.07181   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.25606 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 4.26794 -6.40192
4.26794   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 5.12158 -6.40192
5.12158   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 5.9751 -6.40192
5.9751   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 6.82874 -6.40192
6.82874   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 7.68225 -6.40192
7.68225   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 8.5359 -6.40192
8.5359   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 9.38954 -6.40192
9.38954   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 10.24306 -6.40192
10.24306   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 11.0967 -6.40192
11.0967   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 11.95021 -6.40192
11.95021   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 12.80385 -6.40192
12.80385   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 13.65749 -6.40192
13.65749   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 14.511 -6.40192
14.511   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 15.36464 -6.40192
15.36464   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 16.21815 -6.40192
16.21815   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.17075 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ -4.26794 17.07181 -6.40192
17.07181   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.17075 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 37253 57973 a
tx@Dict begin  PutEnd  end
 37253 57973 a
1890 w @beginspecial @setspecial
  tx@Dict begin STP newpath end
 
@endspecial 37253 56083
a
tx@Dict begin  PutEnd  end
 37253 56083 a 37253 56083 a
tx@Dict begin { 0.0 38.41156 } PutCoor PutBegin  end
 37253 56083 a 37253 56083
a
 tx@Dict begin /mtrxc CM def CP CP T STV newpath 0.8 SLW 0 0 0  setrgbcolor
  0.8 SLW 0 0 0  setrgbcolor  /ArrowA { /lineto load stopped { moveto
} if } def /ArrowB { } def /ArrowInside { } def  [ 0.0 4.26794 0.0
23.47372 -2.13397 25.60771 -2.13397 93.89494 -4.26794 98.16289   /currentpoint
load stopped pop /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if    0.8 SLW 0 0 0  setrgbcolor  /ArrowA { /lineto load stopped {
moveto } if } def /ArrowB { } def /ArrowInside { } def  [ 6.40192 98.16289
4.26794 93.89494 4.26794 25.60771 1.70715 23.47372 1.70715 5.9751 
 /currentpoint load stopped pop /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   clip newpath mtrxc setmatrix moveto 0 setgray end
 37253 56083 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.0 SLW 0.84314 0.5098 0.49413  setrgbcolor 
 0. true -8.5359 -8.5359  1 20 0.32 mul 2.68 add  8.5359 mul exch 8.5359
mul exch  0 Frame  gsave 0.84314 0.5098 0.49413  setrgbcolor  1. .setopacityalpha
 fill  grestore end
 
@endspecial
37253 56083 a
currentpoint initclip moveto
 37253 56083 a 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083
a 37253 56083 a
tx@Dict begin { 0.0 38.41156 } PutCoor PutBegin  end
 37253 56083 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 4.26794 0.0 23.47372
-2.13397 25.60771 -2.13397 93.89494 -4.26794 98.16289   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.45235 SLW 0 0
0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha
} ifelse   0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 6.40192 98.16289 4.26794
93.89494 4.26794 25.60771 1.70715 23.47372 1.70715 5.9751   /Lineto
/lineto load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq {
0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul
exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2
ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.45235 SLW 0 0
0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha
} ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true -0.85364
13.65749 2.56079 17.92545 0 Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952
gt { .setstrokeconstantalpha }{ .setopacityalpha } ifelse   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true -0.85364
12.80385 -1.70715 18.77896 0 Frame  gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true 2.56079
12.80385 3.4143 18.77896 0 Frame  gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  [ 3.4143 17.07181
4.26794 17.07181 5.12158 19.6326 6.82874 19.6326 6.82874 11.95021 5.12158
11.95021 4.26794 14.511 3.4143 14.511  /Lineto /lineto load def 0 
setlinejoin false NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop
pop } repeat }{ n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0
ED /y1 ED /x1 ED /xx1 x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div
def /y1 y0 y1 add 2 div def x1 y1 moveto /n n 2 sub def /drawArrows
{ x11 y11 0.5  1 gt { /Alpha y12 y11 sub x12 x11 sub atan def /ArrowPos
0.  def /Length x12 x11 sub y12 y11 sub Pyth def /dArrowPos 0.5  abs
def { /ArrowPos ArrowPos dArrowPos add def ArrowPos Length gt { exit
} if x11 Alpha cos ArrowPos mul add y11 Alpha sin ArrowPos mul add
currentdict /ArrowInside known { ArrowInside } if pop pop } loop }{
/ArrowPos 0.  def /dArrowPos 1.  1 gt {1.0 1.  1.0 add div }{ 0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x12 x11 sub
ArrowPos mul x11 add y12 y11 sub ArrowPos mul y11 add currentdict /ArrowInside
known { ArrowInside } if pop pop } repeat } ifelse pop pop Lineto }
def n { 4 copy /y11 ED /x11 ED /y12 ED /x12 ED drawArrows } repeat
x1 y1 x0 y0 6 4 roll 2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def
drawArrows /y11 y0 def /x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows
pop pop closepath } ifelse   gsave 0.45235 SLW 0 0 0  setrgbcolor 
1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  [ -2.56079 12.80385
-2.56079 18.77896 -4.26794 18.77896 -6.40192 17.07181 -6.40192 14.511
-4.26794 12.80385  /Lineto /lineto load def 0  setlinejoin false NArray
n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop } repeat }{ n 3 gt
{ CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1 ED /x1 ED /xx1
x1 def /yy1 y1 def x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div
def x1 y1 moveto /n n 2 sub def /drawArrows { x11 y11 0.5  1 gt { /Alpha
y12 y11 sub x12 x11 sub atan def /ArrowPos 0.  def /Length x12 x11
sub y12 y11 sub Pyth def /dArrowPos 0.5  abs def { /ArrowPos ArrowPos
dArrowPos add def ArrowPos Length gt { exit } if x11 Alpha cos ArrowPos
mul add y11 Alpha sin ArrowPos mul add currentdict /ArrowInside known
{ ArrowInside } if pop pop } loop }{ /ArrowPos 0.  def /dArrowPos 1.
 1 gt {1.0 1.  1.0 add div }{ 0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x12 x11 sub ArrowPos mul x11 add y12 y11
sub ArrowPos mul y11 add currentdict /ArrowInside known { ArrowInside
} if pop pop } repeat } ifelse pop pop Lineto } def n { 4 copy /y11
ED /x11 ED /y12 ED /x12 ED drawArrows } repeat x1 y1 x0 y0 6 4 roll
2 copy /y11 ED /x11 ED /y12 y0 def /x12 x0 def drawArrows /y11 y0 def
/x11 x0 def /y12 yy1 def /x12 xx1 def drawArrows pop pop closepath
} ifelse   gsave 0.22 0.05 0 0.1  setcmykcolor  1. .setopacityalpha
 fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952
gt { .setstrokeconstantalpha }{ .setopacityalpha } ifelse   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true -4.26794
12.80385 -1.70715 18.77896 0 Frame  gsave 0.22 0.05 0 0.1  setcmykcolor
 1. .setopacityalpha  fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 25.60771 -2.13397
25.60771   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 28.33925 -2.13397
28.33925   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 31.07068 -2.13397
31.07068   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 33.80223 -2.13397
33.80223   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 36.53365 -2.13397
36.53365   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 39.2652 -2.13397
39.2652   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 41.99663 -2.13397
41.99663   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 44.72818 -2.13397
44.72818   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 47.4596 -2.13397
47.4596   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 50.19115 -2.13397
50.19115   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 52.92258 -2.13397
52.92258   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 55.65413 -2.13397
55.65413   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 58.38554 -2.13397
58.38554   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 61.1171 -2.13397
61.1171   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 63.84851 -2.13397
63.84851   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 66.58006 -2.13397
66.58006   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 69.3115 -2.13397
69.3115   /Lineto /lineto load def 0  setlinejoin false  NArray n 0
eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul
add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 72.04305 -2.13397
72.04305   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 74.77446 -2.13397
74.77446   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 77.50601 -2.13397
77.50601   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 80.23744 -2.13397
80.23744   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 82.969 -2.13397 82.969
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 85.70041 -2.13397
85.70041   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 88.43196 -2.13397
88.43196   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def  [ 0.0 91.16339 -2.13397
91.16339   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a
37253 56083 a
tx@Dict begin { -25.60771 0.0 } PutCoor PutBegin  end
 37253 56083 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0.25 true -8.5359
0.0 8.5359 25.60771 0 Frame  gsave 0.45235 SLW 0 0 0  setrgbcolor 
1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true -6.40192
17.07181 6.40192 23.47372 0 Frame  gsave 0.59608 0.57648 0.64706  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 37253
56083 a
tx@Dict begin { 0.0 20.27277 } PutCoor PutBegin  end
 37253 56083 a 1 1 1 TeXcolorrgb 36639 56300 a
Fl(pH)p 0 0 0 TeXcolorrgb 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0.0 10.66988
2 copy moveto 2.56079 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse  fill grestore grestore 0 h a sub moveto
  EndArrow  } def /ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor
 /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale  false 0.4
1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0
h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto
gsave  1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha
} ifelse  fill grestore grestore 0 h a sub moveto   EndArrow  } def
/ArrowInside { } def  [ 0.0 12.80385 0.0 10.66988   /Lineto /lineto
load def 0  setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n
2 def } if () length 0 gt { 1.5 2.  CLW mul add dup 1.4  mul exch 0.4
mul neg add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED
/Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength
mul add y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1
sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin
ArrowPos mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def
/dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi {
/ArrowPos ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add
y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse
pop pop Lineto } repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat
} ifelse CP 4 2 roll ArrowB L pop pop } if   gsave 0.45235 SLW 0 0
0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha
} ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   -4.26794 4.26794
2 copy moveto 1.70715 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   4.26794 4.26794
2 copy moveto 1.70715 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0.5 true 19.20578
21.33975 23.47372 38.41156 0 Frame  gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true 19.20578
34.14362 23.47372 38.41156 0 Frame  gsave 0.59608 0.57648 0.64706 
setrgbcolor  1. .setopacityalpha  fill  grestore gsave 0.45235 SLW
0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha }{
.setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   21.33975 19.20578
2 copy moveto 2.13397 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.85364 SLW 0.22 0.05 0 0.1  setcmykcolor  /ArrowA
{ moveto } def /ArrowB { } def /ArrowInside { } def  [ 0.0 25.60771
0.0 42.67952 10.66988 40.54553 21.33975 42.67952 21.33975 38.41156
  /r 3.4143 def /Lineto { Arcto } def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.85364 SLW 0.22 0.05 0 0.1  setcmykcolor  1. revision 952
gt { .setstrokeconstantalpha }{ .setopacityalpha } ifelse   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a
37253 56083 a
tx@Dict begin { 0.0 12.80385 } PutCoor PutBegin  end
 37253 56083 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0.5 true -4.26794
0.85364 4.26794 3.4143 0 Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952
gt { .setstrokeconstantalpha }{ .setopacityalpha } ifelse   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0.5 true -0.42682
0.0 0.42682 4.26794 0 Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 0.45235 SLW 0 0 0  setrgbcolor  1. revision 952
gt { .setstrokeconstantalpha }{ .setopacityalpha } ifelse   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 37253
56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a 37253 56083 a
tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 37253 56083 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.45235 SLW 0 0 0  setrgbcolor   0. true -12.80385
0.0 12.80385 12.80385 0 Frame  gsave 0.45235 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.45235 SLW 0.84314 0.5098 0.49413  setrgbcolor
  0.0 6.40192 1.70715   1. .setopacityalpha  SD  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.47012 SLW 0 0 0  setrgbcolor   0. true -10.66988
2.56079 -6.40192 10.24306 0 Frame  gsave 1.47012 SLW 0 0 0  setrgbcolor
 1. revision 952 gt { .setstrokeconstantalpha }{ .setopacityalpha }
ifelse   0  setlinejoin 0  setlinecap stroke  grestore gsave 0.56543
SLW 1 1 1  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse  stroke grestore  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.47012 SLW 0 0 0  setrgbcolor   8.5359 6.40192
2 copy moveto 2.13397 0 CLW mul round sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.47012 SLW 0 0 0  setrgbcolor  1. revision 952 gt { .setstrokeconstantalpha
}{ .setopacityalpha } ifelse   0  setlinejoin 0  setlinecap stroke
 grestore gsave 0.56543 SLW 1 1 1  setrgbcolor  1. revision 952 gt
{ .setstrokeconstantalpha }{ .setopacityalpha } ifelse  stroke grestore
 end
 
@endspecial 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a
37253 56083 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 37253 56083 a 37253 56083 a
tx@Dict begin { 17.07181 93.89494 } PutCoor PutBegin  end
 37253 56083
a 37253 56083 a
tx@Dict begin { 5.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 37253 56083 a 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083
a 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a 37253 56083 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 37253 56083
a 37253 56083 a
tx@Dict begin { 17.07181 29.87566 } PutCoor PutBegin  end
 37253 56083 a 37253 56083 a
tx@Dict begin { 5.0 0.0 0.0 0.0 0.  Uput UUput } PutCoor PutBegin 
end
 37253 56083
a 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083 a 37253 56083 a
tx@Dict begin  PutEnd  end
 37253 56083
a 2835 w @beginspecial @setspecial
  tx@Dict begin STP newpath end
 
@endspecial 0 0 0
TeXcolorrgb 25624 58120 a Fu(Figure)380 b(2)g Fv(\025)g(Pro)-22
b(t)6 b(ocole)382 b(de)e(titr)-6 b(ag)g(e)381 b Fr(pH)p
Fv(-m\351)-22 b(triq)-11 b(ue)381 b(du)25624 59449 y(vinaig)28
b(re)p 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 25624 65106
a Fq(II.)1594 b(\311tude)457 b(e)-24 b(xp\351r)24 b(imentale)25624
69020 y Fk(II.A)40 b(.)1329 b(T)20 b(itrag)-27 b(e)382
b(color)20 b(im\351)-20 b(tr)20 b(iq)-13 b(ue)26731 72299
y Fv(On)591 b(r\351alise)g(le)g(titr)-6 b(ag)g(e)592
b(r)-6 b(apide)593 b(du)e(vinaig)28 b(re)592 b(A)17 b(,)25624
73628 y(comme)500 b(d\351crit)e(dans)g(le)g(pro)-22 b(t)6
b(ocole)500 b(ci-a)-39 b(v)-22 b(ant,)498 b(e)-22 b(t)498
b(on)25624 74956 y(trouv)-28 b(e)310 b(un)f(v)-28 b(olume)309
b(\340)f(l'\351q)-11 b(uiv)-22 b(alence)34728 77543 y
Fn(V)35620 77086 y Fo(0)35350 77817 y Fp(\023)-417 b(eq)36595
77543 y Fj(')307 b Fr(20)247 b(mL)q Fn(:)p 0 0 0 TeXcolorrgb
31174 80864 a Fv(Hugo)309 b Fu(Sal)6 b(ou)314 b Fv(&)308
b(N)-33 b(o\351mie)309 b Fu(C)-6 b(ombey)333 b Ft(MPI)49633
80462 y Fs(?)p 0 0 0 TeXcolorrgb eop end
%%Page: 2 3
TeXDict begin 2 2 bop gsave 1 1 1 TeXcolorrgb clippath fill grestore
0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 0 -3166 a Fu(tp)308
b(c)246 b(1)16262 b Fv(Dosag)-6 b(es)310 b(acido-basiq)-11
b(ues)18478 b(2)p 0 -2723 50142 45 v 0 0 0 TeXcolorrgb
0 1107 a(\300)308 b(l'\351q)-11 b(uiv)-22 b(alence,)310
b(l'\351g)-6 b(alit)6 b(\351)308 b(suiv)-22 b(ant)6 b(e)308
b(es)-11 b(t)308 b(v)-28 b(\351ri\034\351e)310 b(:)6088
3812 y Fr([HO)8086 3355 y Fo(\000)8834 3812 y Fr(])6088
4555 y Fi(|)p 6586 4555 531 133 v 531 w({z)p 8113 4555
V 531 w(})7237 5458 y Fs(c)7633 5569 y Fh(s)9326 3812
y Fj(\001)p Fn(V)10525 3355 y Fo(0)10255 4086 y Fp(\023)-417
b(eq)11500 3812 y Fr(=)308 b([acides)q(])246 b Fj(\001)h
Fn(V)17626 3978 y Fp(0)18122 3812 y Fn(:)0 7980 y Fv(On)337
b(en)g(d\351duit)g(le)f(nombre)j(de)e(moles)f(d'acide)i
Fn(n)f Fv(pour)0 9309 y Fr(100)247 b(g)324 b Fv(de)309
b(vinaig)28 b(re)309 b(:)5738 12483 y Fn(n)f Fr(=)8012
11734 y(100)247 b(g)p 8012 12229 2476 45 v 8515 13243
a Fn(m)9487 13409 y Fp(0)10866 12483 y Fj(\001)f Fn(V)12065
12649 y Fp(0)12808 12483 y Fj(\001)g Fr([acides)q(])h
Fj(\001)f Fr(10)0 15710 y Fv(o\371)525 b Fn(m)2726 15876
y Fp(0)3747 15710 y Fv(es)-11 b(t)524 b(la)h(masse)g(de)g(la)g
(solution.)h(Le)f(f)-17 b(act)6 b(eur)0 17038 y Fr(10)409
b Fv(appar)-6 b(a\356t)410 b(due)f(\340)f(la)g(dilution)h(au)f
Fr(1)p Fn(=)p Fr(10)19559 16636 y Fg(\350me)p 19559 16787
1464 38 v 21486 17038 a Fv(du)h(vi-)0 18366 y(naig)28
b(re.)287 b(Or)-77 b(,)286 b Fn(m)6742 18532 y Fp(0)7239
18366 y Fn(=V)8438 18532 y Fp(0)9242 18366 y Fr(=)308
b Fn(\032)10983 18532 y Fp(0)11766 18366 y Fv(la)286
b(masse)g(v)-28 b(olumiq)-11 b(ue)288 b(de)f(la)0 19695
y(solution.)329 b(Et,)g(la)g(densit)6 b(\351)329 b(du)g(vinaig)28
b(re)331 b Fr(A)e Fv(es)-11 b(t)329 b(connu,)0 21023
y(d')-6 b(o\371)309 b Fn(\032)2965 21189 y Fp(0)3770
21023 y Fr(=)e Fn(d)5514 21189 y Fp(A)6469 21023 y Fj(\001)246
b Fn(\032)7594 21189 y Fp(eau)8974 21023 y Fv(.)307 b(Ainsi,)g(on)i(a)
5776 24454 y Fn(n)f Fr(=)8830 23705 y(100)247 b(g)p 8049
24199 4036 45 v 8049 25213 a Fn(\032)8621 25379 y Fp(eau)10247
25213 y Fj(\001)f Fn(d)11376 25379 y Fp(A)12464 24454
y Fj(\001)13150 23558 y Fn(c)13629 23724 y Fp(s)14281
23558 y Fj(\001)h Fn(V)15727 23156 y Fo(0)15457 23872
y Fp(\023)-417 b(eq)p 13150 24199 3245 45 v 14201 25213
a Fn(V)14847 25379 y Fp(0)16773 24454 y Fj(\001)247 b
Fr(10)p Fn(:)0 27730 y Fv(La)223 b(masse)f(de)h Fn(n)f
Fv(moles)g(d'acides)i(ac\351)-22 b(tiq)-11 b(ue)223 b(es)-11
b(t)222 b(donn\351e)0 28947 y(par)1457 31511 y Ff(m)285
b Fe(=)g Ff(n)227 b Fd(\001)h Ff(M)6071 31622 y Fc(CH)7244
31750 y Fh(3)7677 31622 y Fc(COOH)10432 31511 y Fe(=)285
b Ff(n)227 b Fd(\001)12870 30706 y Fb(\000)13339 31511
y Fe(2)p Ff(M)14840 31622 y Fc(C)15701 31511 y Fe(+)h(4)p
Ff(M)18226 31622 y Fc(H)19105 31511 y Fe(+)g(2)p Ff(M)21630
31622 y Fc(O)22306 30706 y Fb(\001)22775 31511 y Ff(:)0
34185 y Fv(On)325 b(r\351alise)g(l'application)g(num\351riq)-11
b(ue,)327 b(e)-22 b(t)324 b(on)h(trouv)-28 b(e)p 0 0 0
TeXcolorrgb 0 35513 a Fn(m)307 b Fr(=)h(12)247 b(g)p
0 0 0 TeXcolorrgb 16 w Fv(.)307 b(Le)i(vinaig)28 b(re)309
b(A)f(es)-11 b(t)307 b(donc)j(\340)e Fr(12)18984 35112
y Fo(\016)19493 35513 y Fv(.)0 40475 y Fk(II.B.)1329
b(T)20 b(itrag)-27 b(e)2319 b(par)g(suivi)g Fa(pH)q Fk(-)4280
42025 y(m\351)-20 b(tr)20 b(iq)-13 b(ue)1107 45360 y
Fv(On)372 b(r\351alise)g(le)f(titr)-6 b(ag)g(e)373 b
Fr(pH)p Fv(-m\351)-22 b(triq)-11 b(ue,)372 b(comme)h(d\351-)0
46688 y(crit)251 b(dans)g(le)g(pro)-22 b(t)6 b(ocole)253
b(ci-a)-39 b(v)-22 b(ant.)252 b(On)f(repr\351sent)6 b(e)253
b(sur)0 48017 y(la)373 b(\034gure)j(ci-dessous)d(la)h(courbe)i
Fr(pH)d Fv(en)h(f)-22 b(onction)375 b(du)0 49345 y(v)-28
b(olume)310 b Fn(V)4637 49511 y Fp(v)-24 b(ers)g(\023)-417
b(e)6924 49345 y Fv(v)-28 b(ers\351.)p 0 0 0 TeXcolorrgb
4097 65743 a

 4097 65743 a 4097 65743 a


 pgfo

 save

 0 0 0 setrgbcolor

 0.3985 pgfw

 save

 restore

 save

 save

 restore

 save

 restore

 save

 [0.8 0.0 0.0 0.8 0.0 0.0 ] concat

 pgfs


 4097 65743 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [0.8 0.0 0.0 0.8 -15.14339 -24.06952 ] concat

 pgfs


 6200
62400 a

 6200 62400 a 6200 62400 a


 pgfo

 save

 0 0 0 setrgbcolor

 0.3985 pgfw

 save

 restore

 save

 save

 save

 save

 0.3985 pgfw
 0.75 0.75 0.75 TeXcolorrgb
 [ 2.98883 2.98883 ] 0.0 setdash

 0.0 0.0 moveto

 0.0 161.39703 lineto

 32.3787 0.0 moveto

 32.3787 161.39703 lineto

 64.75739 0.0 moveto

 64.75739 161.39703 lineto

 97.13608 0.0 moveto

 97.13608 161.39703 lineto

 129.51477 0.0 moveto

 129.51477 161.39703 lineto

 161.89346 0.0 moveto

 161.89346 161.39703 lineto

 194.27216 0.0 moveto

 194.27216 161.39703 lineto

 pgfstr

0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75 0.75 0.75 TeXcolorrgb
 [ 2.98883 2.98883 ] 0.0 setdash

 0.0 27.73204 moveto

 194.27216 27.73204 lineto

 0.0 55.9314 moveto

 194.27216 55.9314 lineto

 0.0 84.13077 moveto

 194.27216 84.13077 lineto

 0.0 112.33014 moveto

 194.27216 112.33014 lineto

 0.0 140.5295 moveto

 194.27216 140.5295 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.19925 pgfw

0.59608 0.57648 0.64706 TeXcolorrgb
 0.0 -2.12611 moveto

 0.0 2.12611 lineto

 32.3787 -2.12611 moveto

 32.3787 2.12611 lineto

 64.75739 -2.12611 moveto

 64.75739 2.12611 lineto

 97.13608 -2.12611 moveto

 97.13608 2.12611 lineto

 129.51477 -2.12611 moveto

 129.51477 2.12611 lineto

 161.89346 -2.12611 moveto

 161.89346 2.12611 lineto

 194.27216 -2.12611 moveto

 194.27216 2.12611 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.19925 pgfw

0.59608 0.57648 0.64706 TeXcolorrgb
 -2.12598 27.73204 moveto

 2.12598 27.73204 lineto

 -2.12598 55.9314 moveto

 2.12598 55.9314 lineto

 -2.12598 84.13077 moveto

 2.12598 84.13077 lineto

 -2.12598 112.33014 moveto

 2.12598 112.33014 lineto

 -2.12598 140.5295 moveto

 2.12598 140.5295 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 0.0 0.0 moveto

 192.27963 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 192.27963 0.0 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 0.0 0.0 moveto

 0.0 159.40451 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 159.40451 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -2.49069 -12.06636 ] concat

 pgfs



6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(0)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 29.888 -12.06636 ] concat

 pgfs


 6200 62400
a
 0 0 0 setrgbcolor
 6200 62400 a Fr(5)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 59.77599 -12.06636 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400
a Fr(10)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 92.15468 -12.06636 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(15)6200
62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 124.53337 -12.06636 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(20)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 156.91206 -12.06636 ] concat

 pgfs



6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(25)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.29076 -12.06636 ] concat

 pgfs


 6200 62400
a
 0 0 0 setrgbcolor
 6200 62400 a Fr(30)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62718 24.52182 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400
a Fr(2)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62718 52.72118 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(4)6200
62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62718 80.92055 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(6)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62718 109.11992 ] concat

 pgfs


 6200
62400 a
 0 0 0 setrgbcolor
 6200 62400 a Fr(8)6200 62400 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -15.6086 137.31927 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200
62400 a Fr(10)6200 62400 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 194.27216 0.0 lineto

 194.27216 161.39703 lineto

 0.0 161.39703 lineto

 closepath

 /pgfsmaskinplace dup where {exch get}{pop false} ifelse not {clip}
if

 newpath

 save
 0.15686 0.41176 0.51373 TeXcolorrgb
 0.0 46.6256 moveto

 6.47574 48.31758 lineto

 12.95148 52.68846 lineto

 19.42722 55.22643 lineto

 25.90295 57.62337 lineto

 32.3787 58.89235 lineto

 38.85443 60.72528 lineto

 45.33017 61.99426 lineto

 51.80591 63.12225 lineto

 58.28165 64.25021 lineto

 64.75739 65.2372 lineto

 71.23312 66.50616 lineto

 77.70886 67.77513 lineto

 84.1846 68.9031 lineto

 90.66034 70.31308 lineto

 97.13608 71.72305 lineto

 103.61182 73.415 lineto

 110.08755 75.38898 lineto

 116.5633 78.0679 lineto

 123.03903 82.7208 lineto

 129.51477 94.84653 lineto

 131.1337 102.60136 lineto

 132.75264 130.37773 lineto

 134.37157 135.8766 lineto

 135.99051 142.92644 lineto

 138.5808 145.6054 lineto

 140.8473 148.56631 lineto

 142.46625 150.25827 lineto

 148.94199 153.78319 lineto

 155.41772 155.61615 lineto

 161.89346 157.30812 lineto

 168.3692 158.2951 lineto

 174.84494 159.28207 lineto

 181.32068 160.12805 lineto

 187.79642 160.97404 lineto

 194.27216 161.39703 lineto

 pgfstr

0 0 0 TeXcolorrgb
 restore

 save

 0.84314 0.5098 0.49413 setrgbcolor

 0.0 2.54395 moveto

 6.47574 2.48352 lineto

 12.95148 2.42311 lineto

 19.42722 2.14111 lineto

 25.90295 1.50662 lineto

 32.3787 1.19641 lineto

 38.85443 0.94264 lineto

 45.33017 0.84393 lineto

 51.80591 0.66066 lineto

 58.28165 0.64653 lineto

 64.75739 0.68886 lineto

 71.23312 0.71704 lineto

 77.70886 0.78755 lineto

 84.1846 0.82983 lineto

 90.66034 0.94264 lineto

 97.13608 1.14003 lineto

 103.61182 1.45023 lineto

 110.08755 2.19751 lineto

 116.5633 4.55215 lineto

 123.03903 9.55411 lineto

 129.51477 36.66531 lineto

 131.1337 51.98283 lineto

 132.75264 51.30672 lineto

 134.37157 40.82753 lineto

 135.99051 16.5834 lineto

 138.5808 9.59825 lineto

 140.8473 5.96014 lineto

 142.46625 5.26912 lineto

 148.94199 2.53534 lineto

 155.41772 1.49252 lineto

 161.89346 0.90034 lineto

 168.3692 0.63245 lineto

 174.84494 0.44913 lineto

 181.32068 0.32225 lineto

 187.79642 0.1611 lineto

 194.27216 0.0 lineto

 pgfstr

 restore

 restore

 save
 0.15686 0.41176 0.51373 TeXcolorrgb
0.15686 0.41176 0.51373 TeXcolorrgb
 /pgffc{0.12549 0.3294 0.41098 setrgbcolor}def

 1.99255 46.6256 moveto

 1.99255 47.72607 1.10046 48.61815 0.0 48.61815 curveto

 -1.10046 48.61815 -1.99255 47.72607 -1.99255 46.6256 curveto

 -1.99255 45.52513 -1.10046 44.63304 0.0 44.63304 curveto

 1.10046 44.63304 1.99255 45.52513 1.99255 46.6256 curveto

 closepath

 0.0 46.6256 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 8.46829 48.31758 moveto

 8.46829 49.41805 7.5762 50.31013 6.47574 50.31013 curveto

 5.37526 50.31013 4.48318 49.41805 4.48318 48.31758 curveto

 4.48318 47.2171 5.37526 46.32503 6.47574 46.32503 curveto

 7.5762 46.32503 8.46829 47.2171 8.46829 48.31758 curveto

 closepath

 6.47574 48.31758 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 14.94403 52.68846 moveto

 14.94403 53.78894 14.05194 54.68102 12.95148 54.68102 curveto

 11.851 54.68102 10.95892 53.78894 10.95892 52.68846 curveto

 10.95892 51.588 11.851 50.6959 12.95148 50.6959 curveto

 14.05194 50.6959 14.94403 51.588 14.94403 52.68846 curveto

 closepath

 12.95148 52.68846 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 21.41977 55.22643 moveto

 21.41977 56.32689 20.52768 57.21898 19.42722 57.21898 curveto

 18.32674 57.21898 17.43466 56.32689 17.43466 55.22643 curveto

 17.43466 54.12595 18.32674 53.23387 19.42722 53.23387 curveto

 20.52768 53.23387 21.41977 54.12595 21.41977 55.22643 curveto

 closepath

 19.42722 55.22643 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 27.89551 57.62337 moveto

 27.89551 58.72383 27.00342 59.61592 25.90295 59.61592 curveto

 24.80247 59.61592 23.9104 58.72383 23.9104 57.62337 curveto

 23.9104 56.52289 24.80247 55.63081 25.90295 55.63081 curveto

 27.00342 55.63081 27.89551 56.52289 27.89551 57.62337 curveto

 closepath

 25.90295 57.62337 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 34.37125 58.89235 moveto

 34.37125 59.99283 33.47916 60.8849 32.3787 60.8849 curveto

 31.27821 60.8849 30.38614 59.99283 30.38614 58.89235 curveto

 30.38614 57.79189 31.27821 56.8998 32.3787 56.8998 curveto

 33.47916 56.8998 34.37125 57.79189 34.37125 58.89235 curveto

 closepath

 32.3787 58.89235 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 40.84698 60.72528 moveto

 40.84698 61.82576 39.9549 62.71783 38.85443 62.71783 curveto

 37.75395 62.71783 36.86188 61.82576 36.86188 60.72528 curveto

 36.86188 59.62482 37.75395 58.73273 38.85443 58.73273 curveto

 39.9549 58.73273 40.84698 59.62482 40.84698 60.72528 curveto

 closepath

 38.85443 60.72528 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 47.32272 61.99426 moveto

 47.32272 63.09474 46.43063 63.98682 45.33017 63.98682 curveto

 44.22969 63.98682 43.33762 63.09474 43.33762 61.99426 curveto

 43.33762 60.8938 44.22969 60.00171 45.33017 60.00171 curveto

 46.43063 60.00171 47.32272 60.8938 47.32272 61.99426 curveto

 closepath

 45.33017 61.99426 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 53.79846 63.12225 moveto

 53.79846 64.22273 52.90637 65.1148 51.80591 65.1148 curveto

 50.70543 65.1148 49.81335 64.22273 49.81335 63.12225 curveto

 49.81335 62.02179 50.70543 61.1297 51.80591 61.1297 curveto

 52.90637 61.1297 53.79846 62.02179 53.79846 63.12225 curveto

 closepath

 51.80591 63.12225 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 60.2742 64.25021 moveto

 60.2742 65.35068 59.38211 66.24277 58.28165 66.24277 curveto

 57.18117 66.24277 56.2891 65.35068 56.2891 64.25021 curveto

 56.2891 63.14973 57.18117 62.25766 58.28165 62.25766 curveto

 59.38211 62.25766 60.2742 63.14973 60.2742 64.25021 curveto

 closepath

 58.28165 64.25021 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 66.74994 65.2372 moveto

 66.74994 66.33768 65.85785 67.22975 64.75739 67.22975 curveto

 63.6569 67.22975 62.76483 66.33768 62.76483 65.2372 curveto

 62.76483 64.13673 63.6569 63.24464 64.75739 63.24464 curveto

 65.85785 63.24464 66.74994 64.13673 66.74994 65.2372 curveto

 closepath

 64.75739 65.2372 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 73.22568 66.50616 moveto

 73.22568 67.60664 72.33359 68.49872 71.23312 68.49872 curveto

 70.13264 68.49872 69.24057 67.60664 69.24057 66.50616 curveto

 69.24057 65.4057 70.13264 64.51361 71.23312 64.51361 curveto

 72.33359 64.51361 73.22568 65.4057 73.22568 66.50616 curveto

 closepath

 71.23312 66.50616 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 79.70142 67.77513 moveto

 79.70142 68.8756 78.80933 69.76768 77.70886 69.76768 curveto

 76.60838 69.76768 75.71631 68.8756 75.71631 67.77513 curveto

 75.71631 66.67465 76.60838 65.78258 77.70886 65.78258 curveto

 78.80933 65.78258 79.70142 66.67465 79.70142 67.77513 curveto

 closepath

 77.70886 67.77513 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 86.17715 68.9031 moveto

 86.17715 70.00359 85.28506 70.89566 84.1846 70.89566 curveto

 83.08412 70.89566 82.19205 70.00359 82.19205 68.9031 curveto

 82.19205 67.80264 83.08412 66.91055 84.1846 66.91055 curveto

 85.28506 66.91055 86.17715 67.80264 86.17715 68.9031 curveto

 closepath

 84.1846 68.9031 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 92.6529 70.31308 moveto

 92.6529 71.41354 91.7608 72.30563 90.66034 72.30563 curveto

 89.55986 72.30563 88.66779 71.41354 88.66779 70.31308 curveto

 88.66779 69.21262 89.55986 68.32053 90.66034 68.32053 curveto

 91.7608 68.32053 92.6529 69.21262 92.6529 70.31308 curveto

 closepath

 90.66034 70.31308 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 99.12863 71.72305 moveto

 99.12863 72.82352 98.23654 73.7156 97.13608 73.7156 curveto

 96.0356 73.7156 95.14352 72.82352 95.14352 71.72305 curveto

 95.14352 70.62257 96.0356 69.7305 97.13608 69.7305 curveto

 98.23654 69.7305 99.12863 70.62257 99.12863 71.72305 curveto

 closepath

 97.13608 71.72305 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 105.60437 73.415 moveto

 105.60437 74.51547 104.71228 75.40755 103.61182 75.40755 curveto

 102.51134 75.40755 101.61926 74.51547 101.61926 73.415 curveto

 101.61926 72.31453 102.51134 71.42244 103.61182 71.42244 curveto

 104.71228 71.42244 105.60437 72.31453 105.60437 73.415 curveto

 closepath

 103.61182 73.415 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 112.08011 75.38898 moveto

 112.08011 76.48944 111.18802 77.38153 110.08755 77.38153 curveto

 108.98708 77.38153 108.095 76.48944 108.095 75.38898 curveto

 108.095 74.2885 108.98708 73.39642 110.08755 73.39642 curveto

 111.18802 73.39642 112.08011 74.2885 112.08011 75.38898 curveto

 closepath

 110.08755 75.38898 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 118.55585 78.0679 moveto

 118.55585 79.16837 117.66376 80.06046 116.5633 80.06046 curveto

 115.46281 80.06046 114.57074 79.16837 114.57074 78.0679 curveto

 114.57074 76.96742 115.46281 76.07535 116.5633 76.07535 curveto

 117.66376 76.07535 118.55585 76.96742 118.55585 78.0679 curveto

 closepath

 116.5633 78.0679 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 125.03159 82.7208 moveto

 125.03159 83.82127 124.1395 84.71335 123.03903 84.71335 curveto

 121.93855 84.71335 121.04648 83.82127 121.04648 82.7208 curveto

 121.04648 81.62033 121.93855 80.72824 123.03903 80.72824 curveto

 124.1395 80.72824 125.03159 81.62033 125.03159 82.7208 curveto

 closepath

 123.03903 82.7208 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 131.50732 94.84653 moveto

 131.50732 95.947 130.61523 96.83908 129.51477 96.83908 curveto

 128.41429 96.83908 127.52222 95.947 127.52222 94.84653 curveto

 127.52222 93.74606 128.41429 92.85397 129.51477 92.85397 curveto

 130.61523 92.85397 131.50732 93.74606 131.50732 94.84653 curveto

 closepath

 129.51477 94.84653 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 133.12625 102.60136 moveto

 133.12625 103.70184 132.23418 104.59392 131.1337 104.59392 curveto

 130.03323 104.59392 129.14114 103.70184 129.14114 102.60136 curveto

 129.14114 101.5009 130.03323 100.60881 131.1337 100.60881 curveto

 132.23418 100.60881 133.12625 101.5009 133.12625 102.60136 curveto

 closepath

 131.1337 102.60136 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 134.7452 130.37773 moveto

 134.7452 131.47821 133.8531 132.37029 132.75264 132.37029 curveto

 131.65216 132.37029 130.76009 131.47821 130.76009 130.37773 curveto

 130.76009 129.27727 131.65216 128.38518 132.75264 128.38518 curveto

 133.8531 128.38518 134.7452 129.27727 134.7452 130.37773 curveto

 closepath

 132.75264 130.37773 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 136.36412 135.8766 moveto

 136.36412 136.97707 135.47205 137.86916 134.37157 137.86916 curveto

 133.2711 137.86916 132.37901 136.97707 132.37901 135.8766 curveto

 132.37901 134.77612 133.2711 133.88405 134.37157 133.88405 curveto

 135.47205 133.88405 136.36412 134.77612 136.36412 135.8766 curveto

 closepath

 134.37157 135.8766 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 137.98306 142.92644 moveto

 137.98306 144.02692 137.09097 144.91899 135.99051 144.91899 curveto

 134.89003 144.91899 133.99796 144.02692 133.99796 142.92644 curveto

 133.99796 141.82597 134.89003 140.93388 135.99051 140.93388 curveto

 137.09097 140.93388 137.98306 141.82597 137.98306 142.92644 curveto

 closepath

 135.99051 142.92644 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 140.57335 145.6054 moveto

 140.57335 146.70586 139.68127 147.59795 138.5808 147.59795 curveto

 137.48033 147.59795 136.58824 146.70586 136.58824 145.6054 curveto

 136.58824 144.50493 137.48033 143.61284 138.5808 143.61284 curveto

 139.68127 143.61284 140.57335 144.50493 140.57335 145.6054 curveto

 closepath

 138.5808 145.6054 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 142.83986 148.56631 moveto

 142.83986 149.66678 141.94778 150.55887 140.8473 150.55887 curveto

 139.74684 150.55887 138.85475 149.66678 138.85475 148.56631 curveto

 138.85475 147.46584 139.74684 146.57376 140.8473 146.57376 curveto

 141.94778 146.57376 142.83986 147.46584 142.83986 148.56631 curveto

 closepath

 140.8473 148.56631 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 144.4588 150.25827 moveto

 144.4588 151.35875 143.56671 152.25082 142.46625 152.25082 curveto

 141.36577 152.25082 140.4737 151.35875 140.4737 150.25827 curveto

 140.4737 149.1578 141.36577 148.26572 142.46625 148.26572 curveto

 143.56671 148.26572 144.4588 149.1578 144.4588 150.25827 curveto

 closepath

 142.46625 150.25827 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 150.93454 153.78319 moveto

 150.93454 154.88367 150.04245 155.77574 148.94199 155.77574 curveto

 147.8415 155.77574 146.94943 154.88367 146.94943 153.78319 curveto

 146.94943 152.68272 147.8415 151.79063 148.94199 151.79063 curveto

 150.04245 151.79063 150.93454 152.68272 150.93454 153.78319 curveto

 closepath

 148.94199 153.78319 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 157.41028 155.61615 moveto

 157.41028 156.71663 156.51819 157.6087 155.41772 157.6087 curveto

 154.31725 157.6087 153.42517 156.71663 153.42517 155.61615 curveto

 153.42517 154.51569 154.31725 153.6236 155.41772 153.6236 curveto

 156.51819 153.6236 157.41028 154.51569 157.41028 155.61615 curveto

 closepath

 155.41772 155.61615 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 163.88602 157.30812 moveto

 163.88602 158.40858 162.99393 159.30067 161.89346 159.30067 curveto

 160.79298 159.30067 159.90091 158.40858 159.90091 157.30812 curveto

 159.90091 156.20764 160.79298 155.31557 161.89346 155.31557 curveto

 162.99393 155.31557 163.88602 156.20764 163.88602 157.30812 curveto

 closepath

 161.89346 157.30812 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 170.36176 158.2951 moveto

 170.36176 159.39558 169.46967 160.28766 168.3692 160.28766 curveto

 167.26872 160.28766 166.37665 159.39558 166.37665 158.2951 curveto

 166.37665 157.19464 167.26872 156.30255 168.3692 156.30255 curveto

 169.46967 156.30255 170.36176 157.19464 170.36176 158.2951 curveto

 closepath

 168.3692 158.2951 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 176.8375 159.28207 moveto

 176.8375 160.38255 175.9454 161.27463 174.84494 161.27463 curveto

 173.74446 161.27463 172.85239 160.38255 172.85239 159.28207 curveto

 172.85239 158.18161 173.74446 157.28952 174.84494 157.28952 curveto

 175.9454 157.28952 176.8375 158.18161 176.8375 159.28207 curveto

 closepath

 174.84494 159.28207 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 183.31323 160.12805 moveto

 183.31323 161.22853 182.42114 162.1206 181.32068 162.1206 curveto

 180.2202 162.1206 179.32813 161.22853 179.32813 160.12805 curveto

 179.32813 159.02759 180.2202 158.1355 181.32068 158.1355 curveto

 182.42114 158.1355 183.31323 159.02759 183.31323 160.12805 curveto

 closepath

 181.32068 160.12805 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 189.78897 160.97404 moveto

 189.78897 162.07452 188.89688 162.9666 187.79642 162.9666 curveto

 186.69594 162.9666 185.80386 162.07452 185.80386 160.97404 curveto

 185.80386 159.87358 186.69594 158.98149 187.79642 158.98149 curveto

 188.89688 158.98149 189.78897 159.87358 189.78897 160.97404 curveto

 closepath

 187.79642 160.97404 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 196.26471 161.39703 moveto

 196.26471 162.49751 195.37262 163.38959 194.27216 163.38959 curveto

 193.17168 163.38959 192.2796 162.49751 192.2796 161.39703 curveto

 192.2796 160.29657 193.17168 159.40448 194.27216 159.40448 curveto

 195.37262 159.40448 196.26471 160.29657 196.26471 161.39703 curveto

 closepath

 194.27216 161.39703 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 pgfstr
 0.15686 0.41176 0.51373
TeXcolorrgb 0 0 0 TeXcolorrgb
 restore

 save

 save

 [1.0 0.0 0.0 1.0 85.31839 -25.27184 ] concat

 pgfs


 6200 62400 a
 0 0 0 setrgbcolor
 6200 62400
a Fn(V)6846 62566 y Fp(v)k(ers)g(\023)-417 b(e)6200 62400
y


 pgfr

 restore

 restore

 save

 /pgffc{1 1 1 setrgbcolor}def

 /pgfsc{0 0 0 setrgbcolor}def

 save

 /pgffc{1 1 1 setrgbcolor}def

 /pgfsc{0 0 0 setrgbcolor}def

 31.03937 54.2733 6.02716 125.3167 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 9.01599 134.69272 ] concat

 pgfs


 6222 60897 a

 6222 60897 a 6222 60897 a


 pgfo

 save

 /pgffc{0 0 0 setrgbcolor}def

 save

 /pgfsc{}def/pgffc{}def
 0.15686 0.41176 0.51373
TeXcolorrgb
 0.0 0.0 moveto

 8.50412 0.0 lineto

 17.00826 0.0 lineto

 pgfstr

 save

 /pgffc{0.12549 0.3294 0.41098 setrgbcolor}def

 10.49667 0.0 moveto

 10.49667 1.10046 9.60458 1.99255 8.50412 1.99255 curveto

 7.40364 1.99255 6.51157 1.10046 6.51157 0.0 curveto

 6.51157 -1.10046 7.40364 -1.99255 8.50412 -1.99255 curveto

 9.60458 -1.99255 10.49667 -1.10046 10.49667 0.0 curveto

 closepath

 8.50412 0.0 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore
 0 0 0 TeXcolorrgb
 restore

 restore

 pgfc


 9850 60897 a

 9850 60897
a 9850 60897 a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -6.50348 -2.65675 ] concat

 pgfs


 9850 60897 a
 /pgfsc{}def/pgffc{}def
 9850 60897 a 9850 60897 a
 0 0 0 setrgbcolor

9850 60897 a Fr(pH)9850 60897 y


 pgfr

 restore

 restore

 restore

 pgfc


 6222 62400 a

 6222 62400
a 6222 62400 a


 pgfo

 save

 /pgffc{0 0 0 setrgbcolor}def

 save

 /pgfsc{}def/pgffc{}def

 0.84314 0.5098 0.49413 setrgbcolor

 0.0 0.0 moveto

 8.50412 0.0 lineto

 17.00826 0.0 lineto

 pgfstr

 restore

 restore

 pgfc


 9850 62400 a

 9850 62400 a 9850 62400 a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -13.45189 -3.89655 ] concat

 pgfs



9850 62400 a
 /pgfsc{}def/pgffc{}def
 9850 62400 a 9850 62400 a
 0 0 0 setrgbcolor
 9850 62400 a 10454
61907 a Fp(d)151 b(pH)p 9983 62146 2724 45 v 9983 62782
a(d)p Fs(V)10995 62899 y Fh(v)-19 b(ers)g(\023)-358 b(e)9850
62400 y


 pgfr

 restore

 restore

 restore

 pgfc


 6200 62400 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 4097 65743 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 TeXcolorrgb 1294
70455 a Fu(Figure)308 b(3)g Fv(\025)g(Courbe)i(de)f(titr)-6
b(ag)g(e)310 b(du)e(vinaig)28 b(re)309 b(A)p 0 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 0 74887 a(U)-44 b(n)570 b(autre)h(g)28
b(roupe)573 b(r\351alise)d(un)h(titr)-6 b(ag)g(e)571
b(sur)g(le)f(vi-)0 76215 y(naig)28 b(re)361 b(B,)e(la)h(courbe)i(obt)6
b(enue)361 b(es)-11 b(t)359 b(repr\351sent)6 b(\351e)362
b(sur)0 77543 y(la)308 b(\034gure)i(ci-dessous.)p 0 0 0
TeXcolorrgb 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 29721
14523 a

 29721 14523 a 29721 14523 a


 pgfo

 save

 0 0 0 setrgbcolor

 0.3985 pgfw

 save

 restore

 save

 save

 restore

 save

 restore

 save

 [0.8 0.0 0.0 0.8 0.0 0.0 ] concat

 pgfs


 29721 14523 a


 pgfr

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 restore

 save

 [0.8 0.0 0.0 0.8 -15.14342 -24.06952 ] concat

 pgfs


 31824
11180 a

 31824 11180 a 31824 11180 a


 pgfo

 save

 0 0 0 setrgbcolor

 0.3985 pgfw

 save

 restore

 save

 save

 save

 save

 0.3985 pgfw
 0.75 0.75 0.75 TeXcolorrgb
 [ 2.98883 2.98883 ] 0.0 setdash

 25.04524 0.0 moveto

 25.04524 161.39673 lineto

 58.89017 0.0 moveto

 58.89017 161.39673 lineto

 92.73509 0.0 moveto

 92.73509 161.39673 lineto

 126.58002 0.0 moveto

 126.58002 161.39673 lineto

 160.42494 0.0 moveto

 160.42494 161.39673 lineto

 194.26987 0.0 moveto

 194.26987 161.39673 lineto

 pgfstr

0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.3985 pgfw
 0.75 0.75 0.75 TeXcolorrgb
 [ 2.98883 2.98883 ] 0.0 setdash

 0.0 27.54404 moveto

 194.26987 27.54404 lineto

 0.0 55.54668 moveto

 194.26987 55.54668 lineto

 0.0 83.54933 moveto

 194.26987 83.54933 lineto

 0.0 111.55199 moveto

 194.26987 111.55199 lineto

 0.0 139.55464 moveto

 194.26987 139.55464 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.19925 pgfw

0.59608 0.57648 0.64706 TeXcolorrgb
 25.04524 -2.12624 moveto

 25.04524 2.12624 lineto

 58.89017 -2.12624 moveto

 58.89017 2.12624 lineto

 92.73509 -2.12624 moveto

 92.73509 2.12624 lineto

 126.58002 -2.12624 moveto

 126.58002 2.12624 lineto

 160.42494 -2.12624 moveto

 160.42494 2.12624 lineto

 194.26987 -2.12624 moveto

 194.26987 2.12624 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 save

 save

 0.19925 pgfw

0.59608 0.57648 0.64706 TeXcolorrgb
 -2.12602 27.54404 moveto

 2.12602 27.54404 lineto

 -2.12602 55.54668 moveto

 2.12602 55.54668 lineto

 -2.12602 83.54933 moveto

 2.12602 83.54933 lineto

 -2.12602 111.55199 moveto

 2.12602 111.55199 lineto

 -2.12602 139.55464 moveto

 2.12602 139.55464 lineto

 pgfstr
 0 0 0 TeXcolorrgb
 restore

 restore

 0.0 0.0 moveto

 192.27734 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 192.27734 0.0 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 0.0 0.0 moveto

 0.0 159.4042 lineto

 pgfstr

 save

 [0.0 1.0 -1.0 0.0 0.0 159.4042 ] concat

 save 1.99252 0.0 moveto -1.19551 1.59401 lineto 0.0 0.0 lineto -1.19551
-1.59401 lineto pgffill restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 22.55455 -12.06648 ] concat

 pgfs



31824 11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(5)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 53.90877 -12.06648 ] concat

 pgfs


 31824
11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(10)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 87.7537 -12.06648 ] concat

 pgfs


 31824 11180
a
 0 0 0 setrgbcolor
 31824 11180 a Fr(15)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 121.59862 -12.06648 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824
11180 a Fr(20)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 155.44354 -12.06648 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824 11180
a Fr(25)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 189.28847 -12.06648 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(30)31824
11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62723 24.33382 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(2)31824 11180
y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62723 52.33647 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(4)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62723 80.33911 ] concat

 pgfs


 31824
11180 a
 0 0 0 setrgbcolor
 31824 11180 a Fr(6)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -10.62723 108.34177 ] concat

 pgfs


 31824 11180
a
 0 0 0 setrgbcolor
 31824 11180 a Fr(8)31824 11180 y


 pgfr

 restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -15.60864 136.34442 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824
11180 a Fr(10)31824 11180 y


 pgfr

 restore

 restore

 0.0 0.0 moveto

 194.26987 0.0 lineto

 194.26987 161.39673 lineto

 0.0 161.39673 lineto

 closepath

 /pgfsmaskinplace dup where {exch get}{pop false} ifelse not {clip}
if

 newpath

 save
 0.15686 0.41176 0.51373 TeXcolorrgb
 0.0 32.02444 moveto

 6.09207 32.44449 lineto

 11.50726 32.86455 lineto

 18.27625 33.28459 lineto

 25.04524 33.84464 lineto

 31.81422 35.10474 lineto

 38.5832 37.06494 lineto

 45.35219 40.42525 lineto

 48.73668 42.80547 lineto

 52.79808 46.58585 lineto

 55.50568 48.96606 lineto

 58.89017 51.48631 lineto

 62.27466 53.44649 lineto

 65.65915 55.26666 lineto

 69.04364 56.94682 lineto

 72.42813 58.20692 lineto

 79.19711 60.30713 lineto

 85.9661 62.40732 lineto

 92.73509 64.50752 lineto

 99.50407 66.74774 lineto

 106.27306 68.70792 lineto

 113.04204 71.3682 lineto

 116.42653 73.04834 lineto

 119.81102 74.7285 lineto

 123.19551 77.38876 lineto

 127.25691 81.44914 lineto

 129.96451 88.58983 lineto

 133.349 135.77429 lineto

 136.73349 145.71521 lineto

 140.11798 149.9156 lineto

 143.50247 152.15584 lineto

 146.88696 153.696 lineto

 150.94835 155.09613 lineto

 153.65594 155.79619 lineto

 160.42494 157.33632 lineto

 167.19392 158.3164 lineto

 173.9629 159.29652 lineto

 180.73189 160.13658 lineto

 187.50087 160.69666 lineto

 194.26987 161.39673 lineto

 pgfstr

0 0 0 TeXcolorrgb
 restore

 save

 0.84314 0.5098 0.49413 setrgbcolor

 0.0 0.0 moveto

 6.09207 0.01376 lineto

 11.50726 0.026 lineto

 18.27625 0.17542 lineto

 25.04524 0.56346 lineto

 31.81422 1.29153 lineto

 38.5832 2.35014 lineto

 45.35219 4.01193 lineto

 48.73668 4.81894 lineto

 52.79808 5.20203 lineto

 55.50568 4.89621 lineto

 58.89017 4.15594 lineto

 62.27466 3.48976 lineto

 65.65915 2.9297 lineto

 69.04364 2.51341 lineto

 72.42813 2.08492 lineto

 79.19711 1.69954 lineto

 85.9661 1.66959 lineto

 92.73509 1.65556 lineto

 99.50407 1.75359 lineto

 106.27306 2.01604 lineto

 113.04204 2.55989 lineto

 116.42653 3.24585 lineto

 119.81102 4.15501 lineto

 123.19551 6.82643 lineto

 127.25691 31.86584 lineto

 129.96451 38.1017 lineto

 133.349 41.65468 lineto

 136.73349 27.79605 lineto

 140.11798 7.99817 lineto

 143.50247 4.0277 lineto

 146.88696 2.44052 lineto

 150.94835 1.70937 lineto

 153.65594 1.35805 lineto

 160.42494 0.8521 lineto

 167.19392 0.60547 lineto

 173.9629 0.39546 lineto

 180.73189 0.29744 lineto

 187.50087 0.17743 lineto

 194.26987 0.05743 lineto

 pgfstr

 restore

 restore

 save
 0.15686 0.41176 0.51373 TeXcolorrgb
0.15686 0.41176 0.51373 TeXcolorrgb
 /pgffc{0.12549 0.3294 0.41098 setrgbcolor}def

 1.99255 32.02444 moveto

 1.99255 33.12492 1.10046 34.017 0.0 34.017 curveto

 -1.10046 34.017 -1.99255 33.12492 -1.99255 32.02444 curveto

 -1.99255 30.92398 -1.10046 30.03189 0.0 30.03189 curveto

 1.10046 30.03189 1.99255 30.92398 1.99255 32.02444 curveto

 closepath

 0.0 32.02444 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 8.08463 32.44449 moveto

 8.08463 33.54497 7.19255 34.43704 6.09207 34.43704 curveto

 4.99161 34.43704 4.09952 33.54497 4.09952 32.44449 curveto

 4.09952 31.34402 4.99161 30.45193 6.09207 30.45193 curveto

 7.19255 30.45193 8.08463 31.34402 8.08463 32.44449 curveto

 closepath

 6.09207 32.44449 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 13.49982 32.86455 moveto

 13.49982 33.96501 12.60774 34.8571 11.50726 34.8571 curveto

 10.4068 34.8571 9.51471 33.96501 9.51471 32.86455 curveto

 9.51471 31.76407 10.4068 30.872 11.50726 30.872 curveto

 12.60774 30.872 13.49982 31.76407 13.49982 32.86455 curveto

 closepath

 11.50726 32.86455 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 20.2688 33.28459 moveto

 20.2688 34.38506 19.37672 35.27715 18.27625 35.27715 curveto

 17.17578 35.27715 16.28369 34.38506 16.28369 33.28459 curveto

 16.28369 32.18411 17.17578 31.29204 18.27625 31.29204 curveto

 19.37672 31.29204 20.2688 32.18411 20.2688 33.28459 curveto

 closepath

 18.27625 33.28459 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 27.0378 33.84464 moveto

 27.0378 34.9451 26.1457 35.83719 25.04524 35.83719 curveto

 23.94476 35.83719 23.05269 34.9451 23.05269 33.84464 curveto

 23.05269 32.74416 23.94476 31.85208 25.04524 31.85208 curveto

 26.1457 31.85208 27.0378 32.74416 27.0378 33.84464 curveto

 closepath

 25.04524 33.84464 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 33.80678 35.10474 moveto

 33.80678 36.2052 32.91469 37.09729 31.81422 37.09729 curveto

 30.71375 37.09729 29.82167 36.2052 29.82167 35.10474 curveto

 29.82167 34.00426 30.71375 33.11218 31.81422 33.11218 curveto

 32.91469 33.11218 33.80678 34.00426 33.80678 35.10474 curveto

 closepath

 31.81422 35.10474 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 40.57576 37.06494 moveto

 40.57576 38.1654 39.68367 39.0575 38.5832 39.0575 curveto

 37.48274 39.0575 36.59065 38.1654 36.59065 37.06494 curveto

 36.59065 35.96446 37.48274 35.07239 38.5832 35.07239 curveto

 39.68367 35.07239 40.57576 35.96446 40.57576 37.06494 curveto

 closepath

 38.5832 37.06494 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 47.34474 40.42525 moveto

 47.34474 41.52571 46.45267 42.4178 45.35219 42.4178 curveto

 44.25172 42.4178 43.35963 41.52571 43.35963 40.42525 curveto

 43.35963 39.32477 44.25172 38.4327 45.35219 38.4327 curveto

 46.45267 38.4327 47.34474 39.32477 47.34474 40.42525 curveto

 closepath

 45.35219 40.42525 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 50.72923 42.80547 moveto

 50.72923 43.90593 49.83716 44.79802 48.73668 44.79802 curveto

 47.63622 44.79802 46.74413 43.90593 46.74413 42.80547 curveto

 46.74413 41.70499 47.63622 40.81291 48.73668 40.81291 curveto

 49.83716 40.81291 50.72923 41.70499 50.72923 42.80547 curveto

 closepath

 48.73668 42.80547 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 54.79063 46.58585 moveto

 54.79063 47.68633 53.89854 48.5784 52.79808 48.5784 curveto

 51.6976 48.5784 50.80553 47.68633 50.80553 46.58585 curveto

 50.80553 45.48538 51.6976 44.59329 52.79808 44.59329 curveto

 53.89854 44.59329 54.79063 45.48538 54.79063 46.58585 curveto

 closepath

 52.79808 46.58585 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 57.49823 48.96606 moveto

 57.49823 50.06654 56.60614 50.95862 55.50568 50.95862 curveto

 54.4052 50.95862 53.51312 50.06654 53.51312 48.96606 curveto

 53.51312 47.8656 54.4052 46.97351 55.50568 46.97351 curveto

 56.60614 46.97351 57.49823 47.8656 57.49823 48.96606 curveto

 closepath

 55.50568 48.96606 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 60.88272 51.48631 moveto

 60.88272 52.58678 59.99063 53.47887 58.89017 53.47887 curveto

 57.78969 53.47887 56.89761 52.58678 56.89761 51.48631 curveto

 56.89761 50.38583 57.78969 49.49376 58.89017 49.49376 curveto

 59.99063 49.49376 60.88272 50.38583 60.88272 51.48631 curveto

 closepath

 58.89017 51.48631 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 64.26721 53.44649 moveto

 64.26721 54.54695 63.37512 55.43904 62.27466 55.43904 curveto

 61.17418 55.43904 60.2821 54.54695 60.2821 53.44649 curveto

 60.2821 52.34601 61.17418 51.45393 62.27466 51.45393 curveto

 63.37512 51.45393 64.26721 52.34601 64.26721 53.44649 curveto

 closepath

 62.27466 53.44649 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 67.6517 55.26666 moveto

 67.6517 56.36714 66.75961 57.25922 65.65915 57.25922 curveto

 64.55867 57.25922 63.6666 56.36714 63.6666 55.26666 curveto

 63.6666 54.1662 64.55867 53.27411 65.65915 53.27411 curveto

 66.75961 53.27411 67.6517 54.1662 67.6517 55.26666 curveto

 closepath

 65.65915 55.26666 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 71.0362 56.94682 moveto

 71.0362 58.04729 70.1441 58.93938 69.04364 58.93938 curveto

 67.94316 58.93938 67.05109 58.04729 67.05109 56.94682 curveto

 67.05109 55.84634 67.94316 54.95427 69.04364 54.95427 curveto

 70.1441 54.95427 71.0362 55.84634 71.0362 56.94682 curveto

 closepath

 69.04364 56.94682 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 74.42068 58.20692 moveto

 74.42068 59.30739 73.5286 60.19948 72.42813 60.19948 curveto

 71.32767 60.19948 70.43558 59.30739 70.43558 58.20692 curveto

 70.43558 57.10645 71.32767 56.21437 72.42813 56.21437 curveto

 73.5286 56.21437 74.42068 57.10645 74.42068 58.20692 curveto

 closepath

 72.42813 58.20692 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 81.18967 60.30713 moveto

 81.18967 61.4076 80.29759 62.29968 79.19711 62.29968 curveto

 78.09665 62.29968 77.20456 61.4076 77.20456 60.30713 curveto

 77.20456 59.20665 78.09665 58.31458 79.19711 58.31458 curveto

 80.29759 58.31458 81.18967 59.20665 81.18967 60.30713 curveto

 closepath

 79.19711 60.30713 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 87.95865 62.40732 moveto

 87.95865 63.5078 87.06657 64.39987 85.9661 64.39987 curveto

 84.86563 64.39987 83.97354 63.5078 83.97354 62.40732 curveto

 83.97354 61.30685 84.86563 60.41476 85.9661 60.41476 curveto

 87.06657 60.41476 87.95865 61.30685 87.95865 62.40732 curveto

 closepath

 85.9661 62.40732 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 94.72765 64.50752 moveto

 94.72765 65.60799 93.83556 66.50008 92.73509 66.50008 curveto

 91.63461 66.50008 90.74254 65.60799 90.74254 64.50752 curveto

 90.74254 63.40704 91.63461 62.51497 92.73509 62.51497 curveto

 93.83556 62.51497 94.72765 63.40704 94.72765 64.50752 curveto

 closepath

 92.73509 64.50752 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 101.49663 66.74774 moveto

 101.49663 67.84822 100.60454 68.7403 99.50407 68.7403 curveto

 98.4036 68.7403 97.51152 67.84822 97.51152 66.74774 curveto

 97.51152 65.64728 98.4036 64.75519 99.50407 64.75519 curveto

 100.60454 64.75519 101.49663 65.64728 101.49663 66.74774 curveto

 closepath

 99.50407 66.74774 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 108.26561 68.70792 moveto

 108.26561 69.8084 107.37352 70.70047 106.27306 70.70047 curveto

 105.17258 70.70047 104.2805 69.8084 104.2805 68.70792 curveto

 104.2805 67.60745 105.17258 66.71536 106.27306 66.71536 curveto

 107.37352 66.71536 108.26561 67.60745 108.26561 68.70792 curveto

 closepath

 106.27306 68.70792 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 115.03459 71.3682 moveto

 115.03459 72.46866 114.14252 73.36075 113.04204 73.36075 curveto

 111.94157 73.36075 111.04948 72.46866 111.04948 71.3682 curveto

 111.04948 70.26772 111.94157 69.37564 113.04204 69.37564 curveto

 114.14252 69.37564 115.03459 70.26772 115.03459 71.3682 curveto

 closepath

 113.04204 71.3682 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 118.41908 73.04834 moveto

 118.41908 74.14882 117.52701 75.0409 116.42653 75.0409 curveto

 115.32607 75.0409 114.43398 74.14882 114.43398 73.04834 curveto

 114.43398 71.94788 115.32607 71.05579 116.42653 71.05579 curveto

 117.52701 71.05579 118.41908 71.94788 118.41908 73.04834 curveto

 closepath

 116.42653 73.04834 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 121.80357 74.7285 moveto

 121.80357 75.82896 120.9115 76.72105 119.81102 76.72105 curveto

 118.71056 76.72105 117.81847 75.82896 117.81847 74.7285 curveto

 117.81847 73.62802 118.71056 72.73595 119.81102 72.73595 curveto

 120.9115 72.73595 121.80357 73.62802 121.80357 74.7285 curveto

 closepath

 119.81102 74.7285 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 125.18806 77.38876 moveto

 125.18806 78.48924 124.29599 79.38132 123.19551 79.38132 curveto

 122.09505 79.38132 121.20296 78.48924 121.20296 77.38876 curveto

 121.20296 76.2883 122.09505 75.39621 123.19551 75.39621 curveto

 124.29599 75.39621 125.18806 76.2883 125.18806 77.38876 curveto

 closepath

 123.19551 77.38876 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 129.24947 81.44914 moveto

 129.24947 82.5496 128.35738 83.4417 127.25691 83.4417 curveto

 126.15643 83.4417 125.26436 82.5496 125.26436 81.44914 curveto

 125.26436 80.34866 126.15643 79.45659 127.25691 79.45659 curveto

 128.35738 79.45659 129.24947 80.34866 129.24947 81.44914 curveto

 closepath

 127.25691 81.44914 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 131.95706 88.58983 moveto

 131.95706 89.69029 131.06497 90.58238 129.96451 90.58238 curveto

 128.86403 90.58238 127.97195 89.69029 127.97195 88.58983 curveto

 127.97195 87.48935 128.86403 86.59727 129.96451 86.59727 curveto

 131.06497 86.59727 131.95706 87.48935 131.95706 88.58983 curveto

 closepath

 129.96451 88.58983 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 135.34155 135.77429 moveto

 135.34155 136.87476 134.44946 137.76685 133.349 137.76685 curveto

 132.24852 137.76685 131.35645 136.87476 131.35645 135.77429 curveto

 131.35645 134.67381 132.24852 133.78174 133.349 133.78174 curveto

 134.44946 133.78174 135.34155 134.67381 135.34155 135.77429 curveto

 closepath

 133.349 135.77429 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 138.72604 145.71521 moveto

 138.72604 146.81569 137.83395 147.70776 136.73349 147.70776 curveto

 135.63301 147.70776 134.74094 146.81569 134.74094 145.71521 curveto

 134.74094 144.61475 135.63301 143.72266 136.73349 143.72266 curveto

 137.83395 143.72266 138.72604 144.61475 138.72604 145.71521 curveto

 closepath

 136.73349 145.71521 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 142.11053 149.9156 moveto

 142.11053 151.01608 141.21844 151.90816 140.11798 151.90816 curveto

 139.0175 151.90816 138.12543 151.01608 138.12543 149.9156 curveto

 138.12543 148.81514 139.0175 147.92305 140.11798 147.92305 curveto

 141.21844 147.92305 142.11053 148.81514 142.11053 149.9156 curveto

 closepath

 140.11798 149.9156 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 145.49503 152.15584 moveto

 145.49503 153.2563 144.60295 154.14839 143.50247 154.14839 curveto

 142.40201 154.14839 141.50992 153.2563 141.50992 152.15584 curveto

 141.50992 151.05536 142.40201 150.16328 143.50247 150.16328 curveto

 144.60295 150.16328 145.49503 151.05536 145.49503 152.15584 curveto

 closepath

 143.50247 152.15584 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 148.87952 153.696 moveto

 148.87952 154.79646 147.98744 155.68855 146.88696 155.68855 curveto

 145.7865 155.68855 144.89441 154.79646 144.89441 153.696 curveto

 144.89441 152.59552 145.7865 151.70345 146.88696 151.70345 curveto

 147.98744 151.70345 148.87952 152.59552 148.87952 153.696 curveto

 closepath

 146.88696 153.696 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 152.9409 155.09613 moveto

 152.9409 156.1966 152.04883 157.08868 150.94835 157.08868 curveto

 149.84789 157.08868 148.9558 156.1966 148.9558 155.09613 curveto

 148.9558 153.99565 149.84789 153.10358 150.94835 153.10358 curveto

 152.04883 153.10358 152.9409 153.99565 152.9409 155.09613 curveto

 closepath

 150.94835 155.09613 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 155.6485 155.79619 moveto

 155.6485 156.89667 154.75642 157.78874 153.65594 157.78874 curveto

 152.55548 157.78874 151.66339 156.89667 151.66339 155.79619 curveto

 151.66339 154.69572 152.55548 153.80363 153.65594 153.80363 curveto

 154.75642 153.80363 155.6485 154.69572 155.6485 155.79619 curveto

 closepath

 153.65594 155.79619 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 162.4175 157.33632 moveto

 162.4175 158.43678 161.5254 159.32887 160.42494 159.32887 curveto

 159.32446 159.32887 158.43239 158.43678 158.43239 157.33632 curveto

 158.43239 156.23584 159.32446 155.34377 160.42494 155.34377 curveto

 161.5254 155.34377 162.4175 156.23584 162.4175 157.33632 curveto

 closepath

 160.42494 157.33632 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 169.18648 158.3164 moveto

 169.18648 159.41687 168.29439 160.30896 167.19392 160.30896 curveto

 166.09344 160.30896 165.20137 159.41687 165.20137 158.3164 curveto

 165.20137 157.21593 166.09344 156.32385 167.19392 156.32385 curveto

 168.29439 156.32385 169.18648 157.21593 169.18648 158.3164 curveto

 closepath

 167.19392 158.3164 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 175.95546 159.29652 moveto

 175.95546 160.39699 175.06337 161.28908 173.9629 161.28908 curveto

 172.86243 161.28908 171.97035 160.39699 171.97035 159.29652 curveto

 171.97035 158.19604 172.86243 157.30397 173.9629 157.30397 curveto

 175.06337 157.30397 175.95546 158.19604 175.95546 159.29652 curveto

 closepath

 173.9629 159.29652 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 182.72444 160.13658 moveto

 182.72444 161.23706 181.83237 162.12914 180.73189 162.12914 curveto

 179.63142 162.12914 178.73933 161.23706 178.73933 160.13658 curveto

 178.73933 159.03612 179.63142 158.14403 180.73189 158.14403 curveto

 181.83237 158.14403 182.72444 159.03612 182.72444 160.13658 curveto

 closepath

 180.73189 160.13658 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 189.49342 160.69666 moveto

 189.49342 161.79712 188.60135 162.68921 187.50087 162.68921 curveto

 186.4004 162.68921 185.50832 161.79712 185.50832 160.69666 curveto

 185.50832 159.59619 186.4004 158.7041 187.50087 158.7041 curveto

 188.60135 158.7041 189.49342 159.59619 189.49342 160.69666 curveto

 closepath

 187.50087 160.69666 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 196.26242 161.39673 moveto

 196.26242 162.4972 195.37033 163.38928 194.26987 163.38928 curveto

 193.16939 163.38928 192.27731 162.4972 192.27731 161.39673 curveto

 192.27731 160.29625 193.16939 159.40417 194.26987 159.40417 curveto

 195.37033 159.40417 196.26242 160.29625 196.26242 161.39673 curveto

 closepath

 194.26987 161.39673 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 pgfstr
 0.15686 0.41176 0.51373
TeXcolorrgb 0 0 0 TeXcolorrgb
 restore

 save

 save

 [1.0 0.0 0.0 1.0 85.31723 -25.27184 ] concat

 pgfs


 31824 11180 a
 0 0 0 setrgbcolor
 31824 11180
a Fn(V)32470 11346 y Fp(v)-24 b(ers)g(\023)-417 b(e)31824
11180 y


 pgfr

 restore

 restore

 save

 /pgffc{1 1 1 setrgbcolor}def

 /pgfsc{0 0 0 setrgbcolor}def

 save

 /pgffc{1 1 1 setrgbcolor}def

 /pgfsc{0 0 0 setrgbcolor}def

 31.03937 54.2733 6.02708 125.31639 pgfe

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore

 save

 [1.0 0.0 0.0 1.0 9.01591 134.69241 ] concat

 pgfs


 31846 9677 a

 31846 9677 a 31846 9677 a


 pgfo

 save

 /pgffc{0 0 0 setrgbcolor}def

 save

 /pgfsc{}def/pgffc{}def
 0.15686 0.41176 0.51373
TeXcolorrgb
 0.0 0.0 moveto

 8.50412 0.0 lineto

 17.00826 0.0 lineto

 pgfstr

 save

 /pgffc{0.12549 0.3294 0.41098 setrgbcolor}def

 10.49667 0.0 moveto

 10.49667 1.10046 9.60458 1.99255 8.50412 1.99255 curveto

 7.40364 1.99255 6.51157 1.10046 6.51157 0.0 curveto

 6.51157 -1.10046 7.40364 -1.99255 8.50412 -1.99255 curveto

 9.60458 -1.99255 10.49667 -1.10046 10.49667 0.0 curveto

 closepath

 8.50412 0.0 moveto

 gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore

 newpath

 restore
 0 0 0 TeXcolorrgb
 restore

 restore

 pgfc


 35475 9677 a

 35475 9677
a 35475 9677 a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -6.50348 -2.65675 ] concat

 pgfs


 35475 9677 a
 /pgfsc{}def/pgffc{}def
 35475 9677 a 35475 9677 a
 0 0 0 setrgbcolor

35475 9677 a Fr(pH)35475 9677 y


 pgfr

 restore

 restore

 restore

 pgfc


 31846 11180 a

 31846 11180
a 31846 11180 a


 pgfo

 save

 /pgffc{0 0 0 setrgbcolor}def

 save

 /pgfsc{}def/pgffc{}def

 0.84314 0.5098 0.49413 setrgbcolor

 0.0 0.0 moveto

 8.50412 0.0 lineto

 17.00826 0.0 lineto

 pgfstr

 restore

 restore

 pgfc


 35475 11180 a

 35475 11180 a 35475 11180
a


 pgfo

 save

 save

 save

 [1.0 0.0 0.0 1.0 -13.45189 -3.89655 ] concat

 pgfs


 35475 11180 a
 /pgfsc{}def/pgffc{}def
 35475 11180 a 35475 11180 a
 0 0 0 setrgbcolor
 35475 11180
a 36078 10687 a Fp(d)151 b(pH)p 35607 10926 2724 45 v
35607 11562 a(d)p Fs(V)36619 11679 y Fh(v)-19 b(ers)g(\023)-358
b(e)35475 11180 y


 pgfr

 restore

 restore

 restore

 pgfc


 31824 11180 a


 pgfr

 restore

 restore

 restore

 newpath

 restore

 pgfc


 29721 14523 a


 pgfr

 restore

 save

 restore

 save

 restore

 restore

 newpath

 restore

 pgfc


 0 0 0 TeXcolorrgb
26918 19235 a Fu(Figure)308 b(4)g Fv(\025)h(Courbe)h(de)e(titr)-6
b(ag)g(e)310 b(du)e(vinaig)28 b(re)310 b(B)p 0 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 26731 23223 a(Com)-33 b(parons)306
b(ces)d(deux)i(courbes.)g(P)-28 b(our)305 b(le)e(vinaig)28
b(re)25624 24551 y(A)17 b(,)271 b(on)g(ne)g(remar)-6
b(q)-11 b(ue)275 b(q)-11 b(u)-6 b('une)273 b(seule)e(\351q)-11
b(uiv)-22 b(alence.)273 b(Ce-)25624 25879 y(pendant,)307
b(pour)g(le)e(vinaig)28 b(re)306 b(B,)f(il)f(semble)i(y)f(en)h(a)-39
b(v)-28 b(oir)25624 27208 y(deux)313 b(:)d(une)h(pour)i(l'acide)e
(ac\351)-22 b(tiq)-11 b(ue,)312 b(v)-28 b(ers)312 b Fr(20)p
Fn(;)r Fr(8)248 b(mL)q Fv(,)310 b(e)-22 b(t)25624 28536
y(une)300 b(pour)g(l'acide)f(c)-17 b(hlor)-28 b(h)-50
b(ydriq)-11 b(ue,)304 b(v)-28 b(ers)299 b Fr(9)224 b(mL)q
Fv(.)298 b(On)h(en)25624 29864 y(conclut)310 b(q)-11
b(ue)309 b(le)e(vinaig)28 b(re)310 b(B)e(es)-11 b(t)307
b(frelat)6 b(\351.)26731 32300 y(\300)449 b(l'\351q)-11
b(uiv)-22 b(alence)451 b Fr(1)d Fv(\(\351q)-11 b(uiv)-22
b(alence)451 b(de)e(l'acide)h(ac\351-)25624 33628 y(tiq)-11
b(ue\),)308 b(l'\351g)-6 b(alit)6 b(\351)308 b(suiv)-22
b(ant)6 b(e)308 b(es)-11 b(t)307 b(v)-28 b(\351ri\034\351e)311
b(:)27808 35628 y Fn(c)28287 35794 y Fp(s)28939 35628
y Fj(\001)246 b Fr(\()p Fn(V)30544 35794 y Fp(\023)-417
b(eq)p Fs(;)p Fp(1)32433 35628 y Fj(\000)246 b Fn(V)34162
35794 y Fp(\023)-417 b(eq)p Fs(;)p Fp(2)35803 35628 y
Fr(\))308 b(=)g([CH)39646 35794 y Fp(3)40144 35628 y
Fr(COOH])247 b Fj(\001)f Fn(V)45248 35794 y Fp(0)45991
35628 y Fj(\001)g Fr(10)p Fn(;)25624 37628 y Fv(a)-39
b(v)-28 b(ec)585 b(la)d(dilution)g(de)h(f)-17 b(act)6
b(eur)583 b Fr(10)p Fv(.)h(Apr\350s)g(applica-)25624
38957 y(tion)446 b(num\351riq)-11 b(ue,)447 b(on)f(d\351)-22
b(t)6 b(er)22 b(mine)447 b(la)e(concentr)-6 b(ation)25624
40285 y(en)309 b(acide)g(ac\351)-22 b(tiq)-11 b(ue)29230
42797 y Fr([CH)31166 42963 y Fp(3)31664 42797 y Fr(COOH])308
b(=)g(10)247 b Fj(\001)f Fn(c)39184 42963 y Fp(s)39836
42797 y Fj(\001)40523 42048 y Fn(V)41145 42214 y Fp(\023)-417
b(eq)p Fs(;)p Fp(1)43032 42048 y Fj(\000)246 b Fn(V)44761
42214 y Fp(\023)-417 b(eq)p Fs(;)p Fp(2)p 40523 42542
5881 45 v 42892 43556 a Fn(V)43538 43722 y Fp(0)35630
45095 y Fr(=)308 b(1)p Fn(;)q Fr(18)247 b(mol)q Fn(=)p
Fr(L)p Fn(:)25624 48755 y Fv(Et,)228 b(\340)h(l'\351q)-11
b(uiv)-22 b(alence)230 b Fr(2)f Fv(\(\351q)-11 b(uiv)-22
b(alence)231 b(de)e(l'acide)g(c)-17 b(hlor)-39 b(-)25624
50084 y(h)-50 b(ydriq)-11 b(ue\),)310 b(l'\351g)-6 b(alit)6
b(\351)308 b(suiv)-22 b(ant)6 b(e)308 b(es)-11 b(t)308
b(v)-28 b(\351ri\034\351e)31324 52084 y Fn(c)31803 52250
y Fp(s)32455 52084 y Fj(\001)247 b Fn(V)33631 52250 y
Fp(\023)-417 b(eq)p Fs(;)p Fp(2)35580 52084 y Fr(=)308
b([H)37886 52250 y Fp(3)38383 52084 y Fr(O)39244 51627
y Fp(+)39979 52084 y Fr(])246 b Fj(\001)h Fn(V)41732
52250 y Fp(0)42474 52084 y Fj(\001)f Fr(10)p Fn(:)25624
54084 y Fv(On)369 b(en)f(d\351duit)h(la)f(concentr)-6
b(ation)371 b(en)e(acide)g(c)-17 b(hlor)-28 b(h)-50 b(y)-33
b(-)25624 55412 y(driq)-11 b(ue)310 b(du)e(vinaig)28
b(re)310 b(:)29203 57925 y Fr([H)30340 58091 y Fp(3)30837
57925 y Fr(O)31698 57468 y Fp(+)32433 57925 y Fr(])e(=)f(10)p
Fn(c)35801 58091 y Fp(s)36454 57925 y Fj(\001)37141 57176
y Fn(V)37763 57342 y Fp(\023)-417 b(eq)p Fs(;)p Fp(2)p
37141 57670 2264 45 v 37701 58684 a Fn(V)38347 58850
y Fp(0)39845 57925 y Fr(=)307 b(0)p Fn(;)q Fr(90)247
b(mol)r Fn(=)p Fr(L)p Fn(:)25624 60446 y Fv(De)405 b(la)f(\034gure)i
Fu(3)p Fv(,)e(on)h(peut)g(en)g(d\351duire)h(la)e(v)-22
b(aleur)406 b(du)25624 61775 y Fr(p)p Fn(K)27179 61941
y Fp(a)28156 61775 y Fv(de)480 b(l'acide)h(ac\351)-22
b(tiq)-11 b(ue)481 b(:)f(c'es)-11 b(t)479 b(la)h(v)-22
b(aleur)481 b(du)g Fr(pH)25624 63103 y Fv(pour)310 b
Fn(V)28935 63269 y Fp(v)-24 b(ers)g(\023)-417 b(e)31222
63103 y Fr(=)308 b Fn(V)33013 63269 y Fp(\023)-417 b(eq)p
Fs(;)p Fp(1)34655 63103 y Fn(=)p Fr(2)p Fv(.)308 b(Ainsi,)f(on)i(trouv)
-28 b(e)35258 65103 y Fr(p)p Fn(K)36813 65269 y Fp(a)37617
65103 y Fr(=)308 b(4)p Fn(;)q Fr(7)p Fn(:)25624 69355
y Fk(II.C.)1329 b(Incer)27 b(titudes)382 b(de)g(mesure)26731
72564 y Fv(On)221 b(r\351sume)g(les)e(g)28 b(r)-6 b(andeurs,)223
b(e)-22 b(t)219 b(leurs)i(sources)g(d'er)-39 b(-)25624
73893 y(reurs)361 b(e)-22 b(t)359 b(incer)22 b(titudes)361
b(associ\351es,)f(dans)g(la)f(t)6 b(able)360 b(ci-)25624
75221 y(apr\350s.)309 b(On)f(a)33795 77061 y Fn(c)34274
77227 y Fp(a)35078 77061 y Fr(=)36380 76312 y Fn(V)37002
76478 y Fp(\023)-417 b(eq)p 36380 76806 1560 45 v 36588
77820 a Fn(V)37234 77986 y Fp(0)38318 77061 y Fj(\001)247
b Fn(c)39351 77227 y Fp(s)40003 77061 y Fj(\001)f Fr(10)p
Fn(:)p 0 0 0 TeXcolorrgb 31174 80864 a Fv(Hugo)309 b
Fu(Sal)6 b(ou)314 b Fv(&)308 b(N)-33 b(o\351mie)309 b
Fu(C)-6 b(ombey)333 b Ft(MPI)49633 80462 y Fs(?)p 0 0 0
TeXcolorrgb eop end
%%Page: 3 4
TeXDict begin 3 3 bop gsave 1 1 1 TeXcolorrgb clippath fill grestore
0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb 0 -3166 a Fu(tp)308
b(c)246 b(1)16262 b Fv(Dosag)-6 b(es)310 b(acido-basiq)-11
b(ues)18478 b(3)p 0 -2723 50142 45 v 0 0 0 TeXcolorrgb
0 1107 a(D'apr\350s)438 b(la)f(f)-22 b(or)22 b(mule)438
b(des)g(incer)22 b(titudes)438 b(com)-33 b(pos\351es,)0
2435 y(on)309 b(a)3967 5090 y Fn(u)p Fr(\()p Fn(c)5510
5256 y Fp(a)6006 5090 y Fr(\))p 3967 5584 2471 45 v 4714
6598 a Fn(c)5193 6764 y Fp(a)6877 5839 y Fr(=)8046 3742
y Fi(s)p 9153 3742 11224 45 v 536 x(\022)10100 5090 y
Fn(u)p Fr(\()p Fn(V)11786 5256 y Fp(\023)-417 b(eq)12724
5090 y Fr(\))p 10100 5584 3055 45 v 10848 6598 a Fn(V)11470
6764 y Fp(\023)g(eq)13288 4278 y Fi(\023)13800 4507 y
Fp(2)14543 5839 y Fr(+)15650 4278 y Fi(\022)16597 5090
y Fn(u)p Fr(\()p Fn(V)18307 5256 y Fp(0)18804 5090 y
Fr(\))p 16597 5584 2637 45 v 17345 6598 a Fn(V)17991
6764 y Fp(0)19367 4278 y Fi(\023)19880 4507 y Fp(2)20376
5839 y Fn(:)0 9049 y Fv(Ainsi,)432 b(pour)i(le)e(titr)-6
b(ag)g(e)434 b(colorim\351)-22 b(triq)-11 b(ue,)435 b(on)e(trouv)-28
b(e)0 10378 y Fn(u)p Fr(\()p Fn(c)1543 10544 y Fp(a)2040
10378 y Fr(\))p Fn(=c)3502 10544 y Fp(a)4359 10378 y
Fr(=)360 b(0)p Fn(;)q Fr(03)p Fv(.)335 b(Et,)e(pour)j(le)e(titr)-6
b(ag)g(e)335 b Fr(pH)q Fv(-m\351)-22 b(triq)-11 b(ue,)0
11706 y(on)265 b(trouv)-28 b(e)267 b Fn(u)p Fr(\()p Fn(c)6574
11872 y Fp(a)7071 11706 y Fr(\))p Fn(=c)8533 11872 y
Fp(a)9338 11706 y Fr(=)307 b(0)p Fn(;)q Fr(01)p Fv(.)266
b(On)f(en)g(d\351duit)g(les)f(r\351sul-)0 13034 y(t)6
b(ats)306 b(des)j(mesur)-6 b(ag)g(es)310 b(:)p 0 0 0
TeXcolorrgb 990 16355 a Fm(\210)p 0 0 0 TeXcolorrgb 553
w Fv(pour)f(le)f(titr)-6 b(ag)g(e)310 b(colorim\351)-22
b(triq)-11 b(ue)7704 18791 y Fn(c)8183 18957 y Fp(a)8987
18791 y Fr(=)308 b(2)p Fn(;)q Fr(00)247 b Fj(\006)f Fr(0)p
Fn(;)q Fr(06)h(mol)q Fn(=)p Fr(L)p Fn(;)p 0 0 0 TeXcolorrgb
990 21669 a Fm(\210)p 0 0 0 TeXcolorrgb 553 w Fv(pour)309
b(le)f(titr)-6 b(ag)g(e)310 b Fr(pH)p Fv(-m\351)-22 b(triq)-11
b(ue)309 b(:)7704 24104 y Fn(c)8183 24270 y Fp(a)8987
24104 y Fr(=)f(2)p Fn(;)q Fr(08)247 b Fj(\006)f Fr(0)p
Fn(;)q Fr(03)h(mol)q Fn(=)p Fr(L)p Fn(:)0 27425 y Fv(P)-28
b(our)282 b(la)f(suit)6 b(e,)279 b(on)i(utilise)e(la)i(mesure)h(du)f
(titr)-6 b(ag)g(e)282 b Fr(pH)p Fv(-)0 28753 y(m\351)-22
b(triq)-11 b(ue)322 b(pour)g(d\351)-22 b(t)6 b(er)22
b(miner)322 b(le)f(deg)28 b(r\351)322 b(d'acidit)6 b(\351.)321
b(On)0 30082 y(a)7197 32517 y Fn(m)307 b Fr(=)h Fn(n)246
b Fj(\001)h Fn(M)12183 32683 y Fp(CH)13468 32794 y Fh(3)13900
32683 y Fp(COOH)8476 34821 y Fr(=)308 b Fn(c)10124 34987
y Fp(a)10866 34821 y Fj(\001)12333 34072 y Fr(100)247
b(g)p 11553 34566 4036 45 v 11553 35580 a Fn(\032)12125
35746 y Fp(eau)13750 35580 y Fj(\001)g Fn(d)14880 35746
y Fp(A)11420 36262 y Fi(|)p 11918 36262 1155 133 v 1155
w({z)p 14069 36262 V 1155 w(})12433 37214 y Fs(V)12956
37325 y Fh(100)180 b(g)15906 34821 y Fj(\001)p Fr(60)0
41351 y Fv(Les)989 b(incer)22 b(titude)990 b(relativ)-28
b(e)991 b(associ\351e)e(\340)g Fn(m)g Fv(es)-11 b(t)0
42679 y Fn(u)p Fr(\()p Fn(m)p Fr(\))p Fn(=m)389 b Fr(=)g
Fn(u)p Fr(\()p Fn(c)7173 42845 y Fp(a)7670 42679 y Fr(\))p
Fn(=c)9132 42845 y Fp(a)9629 42679 y Fv(.)348 b(Ainsi,)g(on)h(en)g
(d\351duit)g(le)f(deg)28 b(r\351)0 44007 y(d'acidit)6
b(\351)308 b(du)h(vinaig)28 b(re)309 b(A)f(:)8106 46443
y Fn(m)f Fr(=)h(12)p Fn(;)q Fr(2)247 b Fj(\006)f Fr(0)p
Fn(;)q Fr(1)g(g)15 b Fn(:)p 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 37883 77543 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 37883 77543 a 0 0 0 TeXcolorrgb
52820 71875 a Fu(Grandeur)p 61938 72472 45 1993 v 4651
w(V)-89 b(aleur)308 b(mesur\351e)p 71569 72472 V 1373
w(T)33 b(ype)p 75421 72472 V 5801 w(Source)308 b(d'erreur)p
94490 72472 V 6121 w(In)-17 b(cer)-6 b(titude)309 b Fn(u)p
Fr(\()p Fn(x)p Fr(\))p 48890 72517 55529 45 v 48890 72782
V 51759 74177 a Fv(V)-89 b(olume)310 b(\351q)-11 b(uiv)-22
b(alent)p 61938 74775 45 1993 v 65996 75008 a Fn(V)66887
74606 y Fo(0)66618 75321 y Fp(\023)-417 b(eq)p 71569
74775 V 73118 75041 a Fv(B)p 75421 74775 V 76130 74177
a Fj(\017)1107 b Fv(Jug)-6 b(ement)311 b(de)d(l'e)-22
b(xp\351riment)6 b(at)g(eur)p 94490 74775 V 95574 75008
a Fn(u)p Fr(\()p Fn(V)97530 74606 y Fo(0)97260 75321
y Fp(\023)-417 b(eq)98198 75008 y Fr(\))308 b(=)f(0)p
Fn(;)q Fr(6)247 b(mL)53866 75540 y Fv(colorim\351)-22
b(triq)-11 b(ue)p 61938 76137 V 71569 76137 V 75421 76137
V 14859 w Fj(\017)1107 b Fv(F)11 b(r\351q)-11 b(uence)312
b(des)c(mesures)h(\()p Fr(1)246 b(mL)p Fv(\))p 94490
76137 V 48890 76182 55529 45 v 51759 77577 a(V)-89 b(olume)310
b(\351q)-11 b(uiv)-22 b(alent)p 61938 78174 45 1993 v
65644 78440 a Fn(V)66266 78606 y Fp(\023)-417 b(eq)p
Fs(;)p Fp(2)p 71569 78174 V 73118 78440 a Fv(A)p 75421
78174 V 76130 77577 a Fj(\017)1107 b Fv(Pr\351cision)310
b(du)e Fr(pH)p Fv(-m\350)-22 b(tre)p 94490 78174 V 95222
78440 a Fn(u)p Fr(\()p Fn(V)96908 78606 y Fp(\023)-417
b(eq)p Fs(;)p Fp(2)98550 78440 y Fr(\))308 b(=)g(0)p
Fn(;)p Fr(2)247 b(mL)49554 78939 y Fv(a)-39 b(v)-28 b(ec)311
b(suivi)c Fr(pH)p Fv(-m\351)-22 b(triq)-11 b(ue)p 61938
79537 V 71569 79537 V 75421 79537 V 14858 w Fj(\017)1107
b Fv(Pr\351cision)310 b(de)e(la)g(v)-28 b(er)22 b(rerie)p
94490 79537 V 48890 79581 55529 45 v 53458 80976 a(V)-89
b(olume)310 b(pr\351le)-22 b(v)-28 b(\351)p 61938 81574
45 1993 v 4933 w Fn(V)66850 81142 y Fp(0)p 71569 81574
V 73118 80976 a Fv(B)p 75421 81574 V 2213 w Fj(\017)1107
b Fv(Pr\351cision)310 b(de)e(la)g(v)-28 b(er)22 b(rerie)p
94490 81574 V 5856 w Fn(u)p Fr(\()p Fn(V)97216 81142
y Fp(0)97713 80976 y Fr(\))308 b(=)f(0)p Fn(;)q Fr(01)247
b(mL)p 48890 81618 55529 45 v 0 0 0 TeXcolorrgb 60889
83655 a Fu(T)-28 b(able)309 b(1)f Fv(\025)g(Sources)i(d'incer)22
b(titudes)310 b(sur)e(les)f(di\033\351rent)6 b(es)309
b(g)28 b(r)-6 b(andeurs)p 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
37883 77543 a
 currentpoint grestore moveto
 37883 77543 a 0 0 0 TeXcolorrgb 0 0 0 TeXcolorrgb
31174 80864 a Fv(Hugo)309 b Fu(Sal)6 b(ou)314 b Fv(&)308
b(N)-33 b(o\351mie)309 b Fu(C)-6 b(ombey)333 b Ft(MPI)49633
80462 y Fs(?)p 0 0 0 TeXcolorrgb eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
